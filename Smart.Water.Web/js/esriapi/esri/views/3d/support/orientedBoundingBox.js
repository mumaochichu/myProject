// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../core/libs/gl-matrix-2/mat3 ../../../core/libs/gl-matrix-2/mat3f64 ../../../core/libs/gl-matrix-2/quat ../../../core/libs/gl-matrix-2/quatf32 ../../../core/libs/gl-matrix-2/quatf64 ../../../core/libs/gl-matrix-2/vec3 ../../../core/libs/gl-matrix-2/vec3f32 ../../../core/libs/gl-matrix-2/vec3f64 ../../../core/libs/gl-matrix-2/vec4 ../../../core/libs/gl-matrix-2/vec4f64 ../../../geometry/support/aaBoundingBox ./dito ./geometryUtils".split(" "),function(z,e,w,C,t,A,D,k,
B,u,E,F,G,H,x){function y(a,c,b){void 0===a&&(a=[0,0,0]);void 0===c&&(c=[-1,-1,-1]);void 0===b&&(b=[0,0,0,1]);return{center:u.vec3f64.clone(a),halfSize:B.vec3f32.clone(c),quaternion:A.quatf32.clone(b)}}function n(a,c){var b=x.plane.signedDistance(c,a.center);a=v(a,c);return b>a?1:b<-a?-1:0}function v(a,c){t.quat.conjugate(p,a.quaternion);k.vec3.transformQuat(d,c,p);a=a.halfSize;return Math.abs(d[0]*a[0])+Math.abs(d[1]*a[1])+Math.abs(d[2]*a[2])}Object.defineProperty(e,"__esModule",{value:!0});var p=
D.quatf64.create(),d=u.vec3f64.create(),I=u.vec3f64.create(),q=F.vec4f64.create(),r=C.mat3f64.create();z=function(){return function(a){this.buffer=new ArrayBuffer(56*a);this.obbs=Array(a);for(var c=0;c<a;c++)this.obbs[c]={center:u.vec3f64.createView(this.buffer,56*c+0),halfSize:B.vec3f32.createView(this.buffer,56*c+24),quaternion:A.quatf32.createView(this.buffer,56*c+36)}}}();e.ObbArray=z;e.create=y;e.clone=function(a){return y(a.center,a.halfSize,a.quaternion)};e.set=function(a,c){k.vec3.copy(c.center,
a.center);k.vec3.copy(c.halfSize,a.halfSize);t.quat.copy(c.quaternion,a.quaternion)};e.compute=function(a,c){c=c||y();H.computeOBB(a,c);return c};e.intersectPlane=n;e.toAaBoundingBox=function(a,c){c||(c=G.create());var b=w.mat3.fromQuat(r,a.quaternion),m=a.halfSize[0]*Math.abs(b[0])+a.halfSize[1]*Math.abs(b[3])+a.halfSize[2]*Math.abs(b[6]),d=a.halfSize[0]*Math.abs(b[1])+a.halfSize[1]*Math.abs(b[4])+a.halfSize[2]*Math.abs(b[7]),b=a.halfSize[0]*Math.abs(b[2])+a.halfSize[1]*Math.abs(b[5])+a.halfSize[2]*
Math.abs(b[8]);c[0]=a.center[0]-m;c[1]=a.center[1]-d;c[2]=a.center[2]-b;c[3]=a.center[0]+m;c[4]=a.center[1]+d;c[5]=a.center[2]+b;return c};e.minimumDistancePlane=function(a,c){var b=x.plane.signedDistance(c,a.center);a=v(a,c);return b-a};e.maximumDistancePlane=function(a,c){var b=x.plane.signedDistance(c,a.center);a=v(a,c);return b+a};e.isVisible=function(a,c){return 0>=n(a,c.planes[0])&&0>=n(a,c.planes[1])&&0>=n(a,c.planes[2])&&0>=n(a,c.planes[3])&&0>=n(a,c.planes[4])&&0>=n(a,c.planes[5])};e.intersectLine=
function(a,c,b,m){void 0===m&&(m=0);t.quat.conjugate(p,a.quaternion);k.vec3.subtract(d,c,a.center);c=k.vec3.transformQuat(d,d,p);b=k.vec3.transformQuat(I,b,p);for(var e=-Infinity,f=Infinity,g=0;3>g;g++)if(1E-6<Math.abs(b[g]))var l=(m+a.halfSize[g]-c[g])/b[g],h=(-m-a.halfSize[g]-c[g])/b[g],e=Math.max(e,Math.min(l,h)),f=Math.min(f,Math.max(l,h));else if(c[g]>a.halfSize[g]+m||c[g]<-a.halfSize[g]-m)return!1;return e<=f};e.projectedArea=function(a,c,b,m,e){t.quat.conjugate(p,a.quaternion);k.vec3.sub(d,
c,a.center);k.vec3.transformQuat(d,d,p);var f=d[0]<-a.halfSize[0]?-1:d[0]>a.halfSize[0]?1:0,g=d[1]<-a.halfSize[1]?-1:d[1]>a.halfSize[1]?1:0,l=d[2]<-a.halfSize[2]?-1:d[2]>a.halfSize[2]?1:0;c=Math.abs(f)+Math.abs(g)+Math.abs(l);if(0===c)return Infinity;c=1===c?4:6;g=6*(f+3*g+9*l+13);w.mat3.fromQuat(r,a.quaternion);w.mat3.scale(r,r,a.halfSize);for(f=0;f<c;f++)l=J[g+f],k.vec3.set(d,((l&1)<<1)-1,(l&2)-1,((l&4)>>1)-1),k.vec3.transformMat3(d,d,r),k.vec3.add(q,a.center,d),q[3]=1,E.vec4.transformMat4(q,q,
b),l=1/Math.max(1E-6,q[3]),h[2*f]=q[0]*l,h[2*f+1]=q[1]*l;a=2*c-2;b=h[0]*(h[3]-h[a+1])+h[a]*(h[1]-h[a-1]);for(f=2;f<a;f+=2)b+=h[f]*(h[f+3]-h[f-1]);return Math.abs(b)*m*e*.125};var h=[.1,.2,.3,.4,.5,.6,.7,.8,.9,1,1.1,1.2],J=function(){var a=new Int8Array(162),c=0,b=function(b){for(var d=0;d<b.length;d++)a[c+d]=b[d];c+=6};b([6,2,3,1,5,4]);b([0,2,3,1,5,4]);b([0,2,3,7,5,4]);b([0,1,3,2,6,4]);b([0,1,3,2,0,0]);b([0,1,5,7,3,2]);b([0,1,3,7,6,4]);b([0,1,3,7,6,2]);b([0,1,5,7,6,2]);b([0,1,5,4,6,2]);b([0,1,5,4,
0,0]);b([0,1,3,7,5,4]);b([0,2,6,4,0,0]);b([0,0,0,0,0,0]);b([1,3,7,5,0,0]);b([2,3,7,6,4,0]);b([2,3,7,6,0,0]);b([2,3,1,5,7,6]);b([0,1,5,7,6,2]);b([0,1,5,7,6,4]);b([0,1,3,7,6,4]);b([4,5,7,6,2,0]);b([4,5,7,6,0,0]);b([4,5,1,3,7,6]);b([0,2,3,7,5,4]);b([6,2,3,7,5,4]);b([6,2,3,1,5,4]);return a}();e.projectedRadius=v;e.corners=function(a,c){for(var b=0;8>b;++b){var d=c[b];d[0]=b&1?-a.halfSize[0]:a.halfSize[0];d[1]=b&2?-a.halfSize[1]:a.halfSize[1];d[2]=b&4?-a.halfSize[2]:a.halfSize[2];k.vec3.transformQuat(d,
d,a.quaternion);k.vec3.add(d,d,a.center)}}});