// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../../geometry ../../../../core/mathUtils ../../../../core/maybe ../../../../core/screenUtils ../../../../core/libs/gl-matrix-2/vec3 ../../../../core/libs/gl-matrix-2/vec3f64 ../../../../support/elevationInfoUtils ../../support/geometryUtils ../../support/geometryUtils ../../support/projectionUtils ../../support/stack ../../webgl-engine/lib/Intersector ../../webgl-engine/lib/intersectorUtils ../../../interactive/dragEventPipeline".split(" "),function(L,h,m,r,E,
l,n,k,p,t,F,q,u,v,G,w,H){function x(a,b){var c=p.vec3f64.create(),d=p.vec3f64.create(),g=!1;return function(e){if("start"===e.action){var f=n.screenPointObjectToArray(e.screenStart,n.castScreenPointArray(v.sv2d.get())),f=q.ray.fromScreen(a.state.camera,f,y);g=q.plane.intersectRay(b,f,c)}if(!g)return null;f=n.screenPointObjectToArray(e.screenEnd,n.castScreenPointArray(v.sv2d.get()));f=q.ray.fromScreen(a.state.camera,f,y);return q.plane.intersectRay(b,f,d)?m.__assign(m.__assign({},e),{renderStart:c,
renderEnd:d,plane:b,ray:f}):null}}function z(a,b,c,d){void 0===d&&(d=null);var g=null;return function(e){if("start"===e.action&&(g=a.sceneIntersectionHelper.intersectElevationFromScreen(n.createScreenPointArray(e.screenStart.x,e.screenStart.y),b,c),l.isSome(g)&&l.isSome(d)&&!u.pointToPoint(g,g,d))||l.isNone(g))return null;var f=a.sceneIntersectionHelper.intersectElevationFromScreen(n.createScreenPointArray(e.screenEnd.x,e.screenEnd.y),b,c);return l.isSome(f)?l.isSome(d)&&!u.pointToPoint(f,f,d)?null:
m.__assign(m.__assign({},e),{mapStart:g,mapEnd:f}):null}}function A(a,b,c,d){void 0===d&&(d=null);b=t.getZForElevationMode(b,a,c);return z(a,c,b,d)}function B(a,b,c,d){void 0===d&&(d=null);return A(a,c,t.getGraphicEffectiveElevationInfo(b),d)}function I(a,b){var c=J,d=K,g=q.plane.create();a.renderCoordsHelper.worldUpAtPosition(b,c);a=k.vec3.cross(g,c,k.vec3.subtract(d,b,a.state.camera.eye));k.vec3.cross(a,a,c);return q.plane.fromPositionAndNormal(b,a,g)}function C(a,b){var c=p.vec3f64.create(),d=
k.vec3.length(b);a.renderCoordsHelper.worldUpAtPosition(b,c);var g=p.vec3f64.create(),e=p.vec3f64.create(),f=function(e){k.vec3.subtract(e,e,b);F.vector.projectPoint(c,e,e);"global"===a.viewingMode&&k.vec3.length(e)*E.sign(k.vec3.dot(c,e))<-d+.001&&k.vec3.subtract(e,k.vec3.scale(e,c,.001),b);k.vec3.add(e,e,b);return e};return function(a){a.renderStart=f(k.vec3.copy(g,a.renderStart));a.renderEnd=f(k.vec3.copy(e,a.renderEnd));return a}}function D(a,b){var c=a.renderCoordsHelper;return function(a){var d=
c.fromRenderCoords(a.renderStart,new r.Point,b),e=c.fromRenderCoords(a.renderEnd,new r.Point,b);return l.isSome(d)&&l.isSome(e)?m.__assign(m.__assign({},a),{mapStart:d,mapEnd:e}):null}}Object.defineProperty(h,"__esModule",{value:!0});h.screenToRenderPlane=x;h.screenToMapXY=z;h.screenToMapXYAtLocation=A;h.screenToMapXYForGraphicAtLocation=B;h.screenToMapXYForGraphic=function(a,b,c,d){a=b.toMap(a.screenStart,{include:[c]});return l.isSome(a)?B(b,c,a,d):null};h.screenToZConstrained=function(a,b,c){var d=
null,g=new H.EventPipeline;g.next(x(a,I(a,b))).next(C(a,b)).next(D(a,c)).next(function(a){a.mapEnd.x=a.mapStart.x;a.mapEnd.y=a.mapStart.y;d=a});return function(a){d=null;g.execute(a);return d}};h.projectToWorldUp=C;h.convertToMapCoordinates=D;h.hideManipulatorWhileDragging=function(a){var b=null;return function(c){switch(c.action){case "start":b=a.disableDisplay();break;case "end":case "cancel":l.isSome(b)&&(b.remove(),b=null)}return c}};h.screenToMap3D=function(a,b){void 0===b&&(b=null);var c=null,
d=new G.Intersector(a.viewingMode);d.options.selectionMode=!0;d.options.store=0;var g=n.createScreenPointArray(),e={terrainLocationFeedbackEnabled:!0,enableDraped:!0,exclude:new Set},f=p.vec3f64.create(),k=l.unwrapOr(b,a.spatialReference),h=function(b){a.map.ground&&1>a.map.ground.opacity?e.exclude.add(w.TERRAIN_ID):e.exclude.delete(w.TERRAIN_ID);a.sceneIntersectionHelper.intersectIntersectorScreen(n.screenPointObjectToArray(b,g),d,e);b=d.results.min;if(b.getIntersectionPoint(f))b="TerrainRenderer"===
b.intersector?0:1;else if(d.results.ground.getIntersectionPoint(f))b=0;else return null;var c=new r.Point({spatialReference:k});a.renderCoordsHelper.fromRenderCoords(f,c);return{location:c,surfaceType:b}};return function(a){if("start"===a.action){var b=h(a.screenStart);c=l.isSome(b)?b.location:null}if(l.isNone(c))return null;b=h(a.screenEnd);return l.isSome(b)?m.__assign(m.__assign({},a),{mapStart:c,mapEnd:b.location,surfaceType:b.surfaceType}):null}};var J=p.vec3f64.create(),K=p.vec3f64.create(),
y=q.ray.create()});