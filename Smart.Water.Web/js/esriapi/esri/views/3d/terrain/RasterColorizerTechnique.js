// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../core/maybe ../webgl-engine/core/shaderLibrary/raster/RasterColorizer.glsl ../webgl-engine/core/shaderTechnique/ReloadableShaderModule ../webgl-engine/core/shaderTechnique/ShaderTechnique ../webgl-engine/core/shaderTechnique/ShaderTechniqueConfiguration ../webgl-engine/lib/DefaultVertexAttributeLocations ../../webgl/Program ../../webgl/rasterUtils ../../webgl/renderState @dojo/framework/shim/Promise".split(" "),function(n,k,e,l,p,q,f,g,r,t,d,h){Object.defineProperty(k,
"__esModule",{value:!0});f=function(c){function a(){return null!==c&&c.apply(this,arguments)||this}e.__extends(a,c);Object.defineProperty(a.prototype,"uniformLocationInfos",{get:function(){this._uniformLocationInfos||(this._uniformLocationInfos=d.getUniformLocationInfos(this._context,this.program));return this._uniformLocationInfos},enumerable:!0,configurable:!0});a.prototype.initializeProgram=function(m){var b=a.shader.get(),c=this.configuration,b=b.build({output:c.colorizerType,applyColormap:c.applyColormap});
this._context=m.rctx;return new t(m.rctx,b.generateSource("vertex"),b.generateSource("fragment"),r.Default3D)};a.prototype.initializePipeline=function(){var a=2===this.configuration.mode?h.simpleBlendingParams(1,771):1===this.configuration.mode?h.simpleBlendingParams(0,770):null;return h.makePipelineState({blending:a,colorWrite:h.defaultColorWriteParams})};a.prototype.bindPass=function(a,b){d.setUniforms(this.program,this.uniformLocationInfos,b.basic);d.setUniforms(this.program,this.uniformLocationInfos,
b.common);l.isSome(b.colormap)&&d.setUniforms(this.program,this.uniformLocationInfos,b.colormap);0===this.configuration.colorizerType&&l.isSome(b.stretch)?d.setUniforms(this.program,this.uniformLocationInfos,b.stretch):2===this.configuration.colorizerType&&l.isSome(b.hillshade)&&d.setUniforms(this.program,this.uniformLocationInfos,b.hillshade)};a.shader=new q.ReloadableShaderModule(p,function(){return new Promise(function(a,b){n(["../webgl-engine/core/shaderLibrary/raster/RasterColorizer.glsl"],a,
b)})});return a}(f.ShaderTechnique);k.RasterColorizerTechnique=f;f=function(c){function a(){var a=null!==c&&c.apply(this,arguments)||this;a.mode=2;a.colorizerType=0;a.applyColormap=!0;return a}e.__extends(a,c);e.__decorate([g.parameter({count:3})],a.prototype,"mode",void 0);e.__decorate([g.parameter({count:3})],a.prototype,"colorizerType",void 0);e.__decorate([g.parameter()],a.prototype,"applyColormap",void 0);return a}(g.ShaderTechniqueConfiguration);k.RasterColorizerTechniqueConfiguration=f});