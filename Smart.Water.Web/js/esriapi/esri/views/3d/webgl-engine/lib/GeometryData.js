// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define(["require","exports","./geometryDataUtils","./Util"],function(e,f,l,d){Object.defineProperty(f,"__esModule",{value:!0});e=function(){function b(a,c,h){void 0===c&&(c=b.DefaultIndices);void 0===h&&(h="triangle");var g={},k;for(k in a){var e=a[k],f=e.size;g[k]={data:e.data,size:f,offsetIdx:0,strideIdx:f}}if(c===b.DefaultIndices){c=d.getFirstObjectValue(g);c=null==c?0:c.data.length/c.size;a=l.generateDefaultIndexArray(c);c={};for(var m in g)c[m]=a}this._id=l.getNewId();this._vertexAttributes=
g;this._indices=c;this._primitiveType=h}Object.defineProperty(b.prototype,"id",{get:function(){return this._id},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"vertexAttributes",{get:function(){return this._vertexAttributes},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"indices",{get:function(){return this._indices},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"indexCount",{get:function(){var a=d.getFirstObjectValue(this._indices);return null==
a?0:a.length},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"primitiveType",{get:function(){return this._primitiveType},enumerable:!0,configurable:!0});b.prototype.getVertexAttr=function(){return this.vertexAttributes};b.prototype.toRenderData=function(){return{id:this._id.toString(),indices:this._indices,vertexAttr:this._vertexAttributes}};b.prototype.getIndices=function(a){return this._indices[a]};b.prototype.getAttribute=function(a){return this._vertexAttributes[a]};b.prototype.estimateGpuMemoryUsage=
function(){var a=0;this._indices[d.VertexAttrConstants.POSITION]&&(a+=12*this._indices[d.VertexAttrConstants.POSITION].length);this._indices[d.VertexAttrConstants.NORMAL]&&(a+=12*this._indices[d.VertexAttrConstants.NORMAL].length);this._indices[d.VertexAttrConstants.UV0]&&(a+=8*this._indices[d.VertexAttrConstants.UV0].length);this._indices[d.VertexAttrConstants.COLOR]&&(a+=4*this._indices[d.VertexAttrConstants.COLOR].length);return a};b.DefaultIndices={};return b}();f.GeometryData=e});