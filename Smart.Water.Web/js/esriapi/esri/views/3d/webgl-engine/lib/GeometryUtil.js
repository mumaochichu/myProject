// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../../core/libs/gl-matrix-2/vec3 ../../../../core/libs/gl-matrix-2/vec3f32 ../../../../core/libs/gl-matrix-2/vec3f64 ../../support/geometryUtils ./BufferVectorMath ./GeometryData ./Util".split(" "),function(Y,Z,f,n,X,V,T,C,k){var E=T.Vec3Compact,Q;(function(f){for(var n=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],p=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],r=[0,0,1,0,1,1,0,1],c=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,
2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],d=Array(36),a=0;6>a;a++)for(var b=0;6>b;b++)d[6*a+b]=a;for(var h=Array(36),a=0;6>a;a++)h[6*a+0]=0,h[6*a+1]=1,h[6*a+2]=2,h[6*a+3]=2,h[6*a+4]=3,h[6*a+5]=0;f.createGeometry=function(a){Array.isArray(a)||(a=[a,a,a]);for(var b=new Float32Array(24),g=0;8>g;g++)b[3*g]=n[g][0]*a[0],b[3*g+1]=n[g][1]*a[1],b[3*g+2]=n[g][2]*a[2];a={};a[k.VertexAttrConstants.POSITION]=new Uint32Array(c);a[k.VertexAttrConstants.NORMAL]=new Uint32Array(d);a[k.VertexAttrConstants.UV0]=new Uint32Array(h);
g={};g[k.VertexAttrConstants.POSITION]={size:3,data:b};g[k.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(p)};g[k.VertexAttrConstants.UV0]={size:2,data:new Float32Array(r)};return new C.GeometryData(g,a)}})(Q||(Q={}));var N;(function(f){var n=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],p=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],r=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],c=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];f.createGeometry=function(d){Array.isArray(d)||
(d=[d,d,d]);for(var a=new Float32Array(18),b=0;6>b;b++)a[3*b]=n[b][0]*d[0],a[3*b+1]=n[b][1]*d[1],a[3*b+2]=n[b][2]*d[2];d={};d[k.VertexAttrConstants.POSITION]=new Uint32Array(r);d[k.VertexAttrConstants.NORMAL]=new Uint32Array(c);b={};b[k.VertexAttrConstants.POSITION]={size:3,data:a};b[k.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(p)};return new C.GeometryData(b,d)}})(N||(N={}));var R;(function(p){var r=n.vec3f32.fromValues(-.5,0,-.5),L=n.vec3f32.fromValues(.5,0,-.5),E=n.vec3f32.fromValues(0,
0,.5),c=n.vec3f32.fromValues(0,.5,0),d=n.vec3f32.create(),a=n.vec3f32.create(),b=n.vec3f32.create(),h=n.vec3f32.create(),g=n.vec3f32.create();f.vec3.subtract(d,r,c);f.vec3.subtract(a,r,L);f.vec3.cross(b,d,a);f.vec3.normalize(b,b);f.vec3.subtract(d,L,c);f.vec3.subtract(a,L,E);f.vec3.cross(h,d,a);f.vec3.normalize(h,h);f.vec3.subtract(d,E,c);f.vec3.subtract(a,E,r);f.vec3.cross(g,d,a);f.vec3.normalize(g,g);var e=[r,L,E,c],t=[0,-1,0,b[0],b[1],b[2],h[0],h[1],h[2],g[0],g[1],g[2]],v=[0,1,2,3,1,0,3,2,1,3,
0,2],l=[0,0,0,1,1,1,2,2,2,3,3,3];p.createGeometry=function(a){Array.isArray(a)||(a=[a,a,a]);for(var c=new Float32Array(12),b=0;4>b;b++)c[3*b]=e[b][0]*a[0],c[3*b+1]=e[b][1]*a[1],c[3*b+2]=e[b][2]*a[2];a={};a[k.VertexAttrConstants.POSITION]=new Uint32Array(v);a[k.VertexAttrConstants.NORMAL]=new Uint32Array(l);b={};b[k.VertexAttrConstants.POSITION]={size:3,data:c};b[k.VertexAttrConstants.NORMAL]={size:3,data:new Float32Array(t)};return new C.GeometryData(b,a)}})(R||(R={}));var J;(function(p){function K(c,
d,a,b,h){if(Math.abs(f.vec3.dot(d,c))>h)return!1;f.vec3.cross(a,c,d);f.vec3.normalize(a,a);f.vec3.cross(b,a,c);f.vec3.normalize(b,b);return!0}function L(c,d,a,b,h,g,e){return K(c,d,h,g,e)||K(c,a,h,g,e)||K(c,b,h,g,e)}p.createBoxGeometry=Q.createGeometry;p.createDiamondGeometry=N.createGeometry;p.createTetrahedronGeometry=R.createGeometry;p.createSphereGeometry=function(c,d,a,b,h,g,e){c=c||50;b=void 0!==b?b:-Math.PI;h=void 0!==h?h:2*Math.PI;g=void 0!==g?g:.5*-Math.PI;e=void 0!==e?e:Math.PI;var t=Math.max(3,
Math.floor(d)||8),f=Math.max(2,Math.floor(a)||6),l=(t+1)*(f+1);a=new Float32Array(3*l);d=new Float32Array(3*l);for(var l=new Float32Array(2*l),n=[],m=0,u=0;u<=f;u++){for(var p=[],r=u/f,y=g+r*e,w=Math.cos(y),D=0;D<=t;D++){var q=D/t,z=b+q*h,O=Math.cos(z)*w,G=Math.sin(y),z=-Math.sin(z)*w;a[3*m]=O*c;a[3*m+1]=G*c;a[3*m+2]=z*c;d[3*m]=O;d[3*m+1]=G;d[3*m+2]=z;l[2*m]=q;l[2*m+1]=r;p.push(m);++m}n.push(p)}c=new Uint32Array(2*t*(f-1)*3);for(u=m=0;u<f;u++)for(D=0;D<t;D++)b=n[u][D],h=n[u][D+1],g=n[u+1][D+1],e=
n[u+1][D],0===u?(c[m++]=b,c[m++]=g,c[m++]=e):u===f-1?(c[m++]=b,c[m++]=h,c[m++]=g):(c[m++]=b,c[m++]=h,c[m++]=g,c[m++]=g,c[m++]=e,c[m++]=b);k.assert(m===c.length);t={};t[k.VertexAttrConstants.POSITION]=c;t[k.VertexAttrConstants.NORMAL]=c;t[k.VertexAttrConstants.UV0]=c;f={};f[k.VertexAttrConstants.POSITION]={size:3,data:a};f[k.VertexAttrConstants.NORMAL]={size:3,data:d};f[k.VertexAttrConstants.UV0]={size:2,data:l};return new C.GeometryData(f,t)};p.createPolySphereGeometry=function(c,d,a){function b(a,
b){a>b&&(b=[b,a],a=b[0],b=b[1]);var d=a.toString()+"."+b.toString();if(e[d])return e[d];var g=h.length;h.length+=3;E.add(h,3*a,h,3*b,h,g);E.scale(h,g,c/E.length(h,g));g/=3;return e[d]=g}var h;a?(h=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],a=new Uint32Array([0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1])):(a=c*(1+Math.sqrt(5))/2,h=[-c,a,0,c,a,0,-c,-a,0,c,-a,0,0,-c,a,0,c,a,0,-c,-a,0,c,-a,a,0,-c,a,0,c,-a,0,-c,-a,0,c],a=new Uint32Array([0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,
7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]));for(var g=0;g<h.length;g+=3)E.scale(h,g,c/E.length(h,g));for(var e={},g=0;g<d;g++){for(var f=a.length,v=new Uint32Array(4*f),l=0;l<f;l+=3){var n=a[l],m=a[l+1],u=a[l+2],p=b(n,m),r=b(m,u),y=b(u,n),w=4*l;v[w]=n;v[w+1]=p;v[w+2]=y;v[w+3]=m;v[w+4]=r;v[w+5]=p;v[w+6]=u;v[w+7]=y;v[w+8]=r;v[w+9]=p;v[w+10]=r;v[w+11]=y}a=v;e={}}d=new Float32Array(h);for(g=0;g<d.length;g+=3)E.normalize(d,g);g={};g[k.VertexAttrConstants.POSITION]=a;g[k.VertexAttrConstants.NORMAL]=
a;a={};a[k.VertexAttrConstants.POSITION]={size:3,data:new Float32Array(h)};a[k.VertexAttrConstants.NORMAL]={size:3,data:d};return new C.GeometryData(a,g)};p.createPointGeometry=function(c,d,a,b,h,g,e,f){d=d?new Float64Array([d[0],d[1],d[2]]):new Float32Array([0,0,0]);c=c?new Float32Array([c[0],c[1],c[2]]):new Float32Array([0,0,1]);g=g?new Float32Array(g):new Float32Array([0,0]);a=a?new Uint8Array([255*a[0],255*a[1],255*a[2],3<a.length?255*a[3]:255]):new Uint8Array([255,255,255,255]);var t=null!=b&&
2===b.length?new Float32Array(b):new Float32Array([1,1]);b={};b[k.VertexAttrConstants.POSITION]={size:3,data:d};b[k.VertexAttrConstants.NORMAL]={size:3,data:c};b[k.VertexAttrConstants.UV0]={size:g.length,data:g};b[k.VertexAttrConstants.COLOR]={size:4,data:a};b[k.VertexAttrConstants.SIZE]={size:2,data:t};null!=h&&(h=new Float32Array([h[0],h[1],h[2],h[3]]),b[k.VertexAttrConstants.AUXPOS1]={size:4,data:h});null!=e&&(e=new Float32Array([e[0],e[1],e[2],e[3]]),b[k.VertexAttrConstants.AUXPOS2]={size:4,data:e});
return null!=f?(C.GeometryData.call(f,b,C.GeometryData.DefaultIndices,"point"),f):new C.GeometryData(b,C.GeometryData.DefaultIndices,"point")};p.updatePointGeometry=function(c,d,a,b,h,g,e,f){var t=f.vertexAttributes;if(null!=c){var l=t[k.VertexAttrConstants.NORMAL].data;l[0]=c[0];l[1]=c[1];l[2]=c[2]}null!=d&&(l=t[k.VertexAttrConstants.POSITION].data,l[0]=d[0],l[1]=d[1],l[2]=d[2]);null!=a&&(l=t[k.VertexAttrConstants.COLOR].data,l[0]=a[0],l[1]=a[1],l[2]=a[2],l[3]=a[3]);null!=b&&(l=t[k.VertexAttrConstants.SIZE].data,
l[0]=b[0],l[1]=b[1]);null!=h&&(l=t[k.VertexAttrConstants.AUXPOS1].data,l[0]=h[0],l[1]=h[1],l[2]=h[2],l[3]=h[3]);null!=g&&(l=t[k.VertexAttrConstants.UV0].data,l[0]=g[0],l[1]=g[1]);null!=e&&(l=t[k.VertexAttrConstants.AUXPOS2].data,l[0]=e[0],l[1]=e[1],l[2]=e[2],l[3]=e[3]);return f};p.createPointArrayGeometry=function(c,d){for(var a=new Float32Array(3*c.length),b=new Float32Array(d?3*c.length:3),h=new Uint32Array(c.length),g=new Uint32Array(c.length),e=0;e<c.length;e++)a[3*e]=c[e][0],a[3*e+1]=c[e][1],
a[3*e+2]=c[e][2],d&&(b[3*e]=d[e][0],b[3*e+1]=d[e][1],b[3*e+2]=d[e][2]),h[e]=e,g[e]=0;d||(b[0]=0,b[1]=1,b[2]=0);c=new Float32Array(2);c[0]=0;c[1]=0;e={};e[k.VertexAttrConstants.POSITION]=h;e[k.VertexAttrConstants.NORMAL]=d?h:g;e[k.VertexAttrConstants.UV0]=g;d={};d[k.VertexAttrConstants.POSITION]={size:3,data:a};d[k.VertexAttrConstants.NORMAL]={size:3,data:b};d[k.VertexAttrConstants.UV0]={size:2,data:c};return new C.GeometryData(d,e,"point")};p.createTriangleGeometry=function(){var c=new Float32Array([0,
0,0,0,0,100,100,0,0]),d=new Uint32Array([0,1,2]),a=new Float32Array([0,1,0]),b=new Uint32Array([0,0,0]),h=new Float32Array([0,0]),g=new Uint32Array([0,0,0]),e={};e[k.VertexAttrConstants.POSITION]=d;e[k.VertexAttrConstants.NORMAL]=b;e[k.VertexAttrConstants.UV0]=g;d={};d[k.VertexAttrConstants.POSITION]={size:3,data:c};d[k.VertexAttrConstants.NORMAL]={size:3,data:a};d[k.VertexAttrConstants.UV0]={size:2,data:h};return new C.GeometryData(d,e)};var J=[[-1,-1,0],[1,-1,0],[1,1,0],[-1,1,0]];p.createSquareGeometry=
function(c){var d,a;void 0===c&&(c=J);for(var b=new Float64Array(12),h=0;4>h;h++)for(var g=0;3>g;g++)b[3*h+g]=c[h][g];var e=new Uint32Array([0,1,2,2,3,0]);c=new Float32Array([0,0,1]);var f=new Uint32Array([0,0,0,0,0,0]),h=new Float32Array([0,0,1,0,1,1,0,1]),g=new Uint8Array([255,255,255,255]),e=(d={},d[k.VertexAttrConstants.POSITION]=e,d[k.VertexAttrConstants.NORMAL]=f,d[k.VertexAttrConstants.UV0]=e,d[k.VertexAttrConstants.COLOR]=f,d);d=(a={},a[k.VertexAttrConstants.POSITION]={size:3,data:b},a[k.VertexAttrConstants.NORMAL]=
{size:3,data:c},a[k.VertexAttrConstants.UV0]={size:2,data:h},a[k.VertexAttrConstants.COLOR]={size:4,data:g},a);return new C.GeometryData(d,e)};p.createConeGeometry=function(c,d,a,b,h,g){void 0===h&&(h=!0);void 0===g&&(g=!0);var e=0,f=n.vec3f32.fromValues(0,e,0),v=n.vec3f32.fromValues(0,e+c,0),l=n.vec3f32.fromValues(0,-1,0),B=n.vec3f32.fromValues(0,1,0);b&&(e=c,v=n.vec3f32.fromValues(0,0,0),f=n.vec3f32.fromValues(0,e,0),l=n.vec3f32.fromValues(0,1,0),B=n.vec3f32.fromValues(0,-1,0));f=[v,f];l=[l,B];
B=a+2;v=Math.sqrt(c*c+d*d);if(b)for(b=a-1;0<=b;b--)m=2*Math.PI/a*b,u=n.vec3f32.fromValues(Math.cos(m)*d,e,Math.sin(m)*d),f.push(u),m=n.vec3f32.fromValues(c*Math.cos(m)/v,-d/v,c*Math.sin(m)/v),l.push(m);else for(b=0;b<a;b++){var m=2*Math.PI/a*b,u=n.vec3f32.fromValues(Math.cos(m)*d,e,Math.sin(m)*d);f.push(u);m=n.vec3f32.fromValues(c*Math.cos(m)/v,d/v,c*Math.sin(m)/v);l.push(m)}c=new Uint32Array(6*(a+2));a=new Uint32Array(6*(a+2));e=d=0;if(h){for(b=3;b<f.length;b++)c[d++]=1,c[d++]=b-1,c[d++]=b,a[e++]=
0,a[e++]=0,a[e++]=0;c[d++]=f.length-1;c[d++]=2;c[d++]=1;a[e++]=0;a[e++]=0;a[e++]=0}if(g){for(b=3;b<f.length;b++)c[d++]=b,c[d++]=b-1,c[d++]=0,a[e++]=b,a[e++]=b-1,a[e++]=1;c[d++]=0;c[d++]=2;c[d++]=f.length-1;a[e++]=1;a[e++]=2;a[e++]=l.length-1}h=new Float32Array(3*B);for(b=0;b<B;b++)h[3*b]=f[b][0],h[3*b+1]=f[b][1],h[3*b+2]=f[b][2];g=new Float32Array(3*B);for(b=0;b<B;b++)g[3*b]=l[b][0],g[3*b+1]=l[b][1],g[3*b+2]=l[b][2];f={};f[k.VertexAttrConstants.POSITION]=c;f[k.VertexAttrConstants.NORMAL]=a;l={};l[k.VertexAttrConstants.POSITION]=
{size:3,data:h};l[k.VertexAttrConstants.NORMAL]={size:3,data:g};return new C.GeometryData(l,f)};p.createCylinderGeometry=function(c,d,a,b,h,g){b=b?n.vec3f32.clone(b):n.vec3f32.fromValues(1,0,0);h=h?n.vec3f32.clone(h):n.vec3f32.fromValues(0,0,0);g=void 0===g?!0:g;var e=n.vec3f32.create();f.vec3.normalize(e,b);b=n.vec3f32.create();f.vec3.scale(b,e,Math.abs(c));var t=n.vec3f32.create();f.vec3.scale(t,b,-.5);f.vec3.add(t,t,h);var v=n.vec3f32.fromValues(0,1,0);.2>Math.abs(1-f.vec3.dot(e,v))&&f.vec3.set(v,
0,0,1);var l=n.vec3f32.create();f.vec3.cross(l,e,v);f.vec3.normalize(l,l);f.vec3.cross(v,l,e);var B=2*a+(g?2:0),m=a+(g?2:0);c=new Float32Array(3*B);h=new Float32Array(3*m);var u=new Float32Array(2*B),p=new Uint32Array(3*a*(g?4:2)),r=new Uint32Array(3*a*(g?4:2));g&&(c[3*(B-2)+0]=t[0],c[3*(B-2)+1]=t[1],c[3*(B-2)+2]=t[2],u[2*(B-2)]=0,u[2*(B-2)+1]=0,c[3*(B-1)+0]=c[3*(B-2)+0]+b[0],c[3*(B-1)+1]=c[3*(B-2)+1]+b[1],c[3*(B-1)+2]=c[3*(B-2)+2]+b[2],u[2*(B-1)]=1,u[2*(B-1)+1]=1,h[3*(m-2)+0]=-e[0],h[3*(m-2)+1]=
-e[1],h[3*(m-2)+2]=-e[2],h[3*(m-1)+0]=e[0],h[3*(m-1)+1]=e[1],h[3*(m-1)+2]=e[2]);for(var e=function(a,b,c){p[a]=b;r[a]=c},y=0,w=n.vec3f32.create(),D=n.vec3f32.create(),q=0;q<a;q++){var z=2*Math.PI/a*q;f.vec3.scale(w,v,Math.sin(z));f.vec3.scale(D,l,Math.cos(z));f.vec3.add(w,w,D);h[3*q+0]=w[0];h[3*q+1]=w[1];h[3*q+2]=w[2];f.vec3.scale(w,w,d);f.vec3.add(w,w,t);c[3*q+0]=w[0];c[3*q+1]=w[1];c[3*q+2]=w[2];u[2*q+0]=q/a;u[2*q+1]=0;c[3*(q+a)+0]=c[3*q+0]+b[0];c[3*(q+a)+1]=c[3*q+1]+b[1];c[3*(q+a)+2]=c[3*q+2]+b[2];
u[2*(q+a)+0]=q/a;u[2*q+1]=1;z=(q+1)%a;e(y++,q,q);e(y++,q+a,q);e(y++,z,z);e(y++,z,z);e(y++,q+a,q);e(y++,z+a,z)}if(g){for(q=0;q<a;q++)z=(q+1)%a,e(y++,B-2,m-2),e(y++,q,m-2),e(y++,z,m-2);for(q=0;q<a;q++)z=(q+1)%a,e(y++,q+a,m-1),e(y++,B-1,m-1),e(y++,z+a,m-1)}d={};d[k.VertexAttrConstants.POSITION]=p;d[k.VertexAttrConstants.NORMAL]=r;d[k.VertexAttrConstants.UV0]=p;a={};a[k.VertexAttrConstants.POSITION]={size:3,data:c};a[k.VertexAttrConstants.NORMAL]={size:3,data:h};a[k.VertexAttrConstants.UV0]={size:2,data:u};
return new C.GeometryData(a,d)};p.createTubeGeometry=function(c,d,a,b,h){a=a||10;b=null!=b?b:!0;k.assert(1<c.length);for(var g=[],e=[],f=0;f<a;f++){g.push([0,-f-1,-((f+1)%a)-1]);var n=f/a*2*Math.PI;e.push([Math.cos(n)*d,Math.sin(n)*d])}return p.createPathExtrusionGeometry(e,c,[[0,0,0]],g,b,h)};p.createPathExtrusionGeometry=function(c,d,a,b,h,g){void 0===g&&(g=n.vec3f32.fromValues(0,0,0));var e=c.length,t=new Float32Array(d.length*e*3+(6*a.length||0)),v=new Float32Array(d.length*e+(2*a.length||0)),
l=new Float32Array(d.length*e*3+(a?6:0)),p=(d.length-1)*e*6+6*b.length,m=new Uint32Array(p),p=new Uint32Array(p),u=0,r=0,E=0,y=0,w=0,D=n.vec3f32.create(),q=n.vec3f32.create(),z=n.vec3f32.create(),O=n.vec3f32.create(),G=n.vec3f32.create(),A=n.vec3f32.create(),J=n.vec3f32.create(),F=X.vec3f64.create(),K=n.vec3f32.create(),S=n.vec3f32.create(),Q=n.vec3f32.create(),N=n.vec3f32.create(),R=n.vec3f32.create(),T=V.plane.create();f.vec3.set(K,0,1,0);f.vec3.subtract(q,d[1],d[0]);f.vec3.normalize(q,q);h?(f.vec3.add(F,
d[0],g),f.vec3.normalize(z,F)):f.vec3.set(z,0,0,1);L(q,z,K,K,G,z,W);f.vec3.copy(O,z);f.vec3.copy(N,G);for(var x=0;x<a.length;x++)f.vec3.scale(A,G,a[x][0]),f.vec3.scale(F,z,a[x][2]),f.vec3.add(A,A,F),f.vec3.add(A,A,d[0]),t[u++]=A[0],t[u++]=A[1],t[u++]=A[2],v[E++]=0;l[r++]=-q[0];l[r++]=-q[1];l[r++]=-q[2];for(x=0;x<b.length;x++)m[y++]=0<b[x][0]?b[x][0]:-b[x][0]-1+a.length,m[y++]=0<b[x][1]?b[x][1]:-b[x][1]-1+a.length,m[y++]=0<b[x][2]?b[x][2]:-b[x][2]-1+a.length,p[w++]=0,p[w++]=0,p[w++]=0;for(var H=a.length,
x=a.length-1,I=0;I<d.length;I++){var U=!1;0<I&&(f.vec3.copy(D,q),I<d.length-1?(f.vec3.subtract(q,d[I+1],d[I]),f.vec3.normalize(q,q)):U=!0,f.vec3.add(S,D,q),f.vec3.normalize(S,S),f.vec3.add(Q,d[I-1],O),V.plane.fromPositionAndNormal(d[I],S,T),V.plane.intersectRay(T,V.ray.wrap(Q,D),F)?(f.vec3.subtract(F,F,d[I]),f.vec3.normalize(z,F),f.vec3.cross(G,S,z),f.vec3.normalize(G,G)):L(S,O,N,K,G,z,W),f.vec3.copy(O,z),f.vec3.copy(N,G));h&&(f.vec3.add(F,d[I],g),f.vec3.normalize(R,F));for(var M=0;M<e;M++)if(f.vec3.scale(A,
G,c[M][0]),f.vec3.scale(F,z,c[M][1]),f.vec3.add(A,A,F),f.vec3.normalize(J,A),l[r++]=J[0],l[r++]=J[1],l[r++]=J[2],h?v[E++]=f.vec3.dot(A,R):v[E++]=A[2],f.vec3.add(A,A,d[I]),t[u++]=A[0],t[u++]=A[1],t[u++]=A[2],!U){var P=(M+1)%e;m[y++]=H+M;m[y++]=H+e+M;m[y++]=H+P;m[y++]=H+P;m[y++]=H+e+M;m[y++]=H+e+P;for(P=0;6>P;P++)p[w++]=m[y-6+P]-x}H+=e}c=d[d.length-1];for(x=0;x<a.length;x++)f.vec3.scale(A,G,a[x][0]),f.vec3.scale(F,z,a[x][1]),f.vec3.add(A,A,F),f.vec3.add(A,A,c),t[u++]=A[0],t[u++]=A[1],t[u++]=A[2],v[E++]=
0;a=r/3;l[r++]=q[0];l[r++]=q[1];l[r++]=q[2];e=H-e;for(x=0;x<b.length;x++)m[y++]=0<=b[x][0]?H+b[x][0]:-b[x][0]-1+e,m[y++]=0<=b[x][2]?H+b[x][2]:-b[x][2]-1+e,m[y++]=0<=b[x][1]?H+b[x][1]:-b[x][1]-1+e,p[w++]=a,p[w++]=a,p[w++]=a;b={};b[k.VertexAttrConstants.POSITION]=m;b[k.VertexAttrConstants.NORMAL]=p;m={};m[k.VertexAttrConstants.POSITION]={size:3,data:t};m.zOffset={size:1,data:v};m[k.VertexAttrConstants.NORMAL]={size:3,data:l};return new C.GeometryData(m,b)};p.createPolylineGeometry=function(c,d){k.assert(1<
c.length,"createPolylineGeometry(): polyline needs at least 2 points");k.assert(3===c[0].length,"createPolylineGeometry(): malformed vertex");k.assert(void 0===d||d.length===c.length,"createPolylineGeometry: need same number of points and normals");k.assert(void 0===d||3===d[0].length,"createPolylineGeometry(): malformed normal");for(var a=new Float64Array(3*c.length),b=new Uint32Array(2*(c.length-1)),h=0,g=0,e=0;e<c.length;e++){for(var f=0;3>f;f++)a[h++]=c[e][f];0<e&&(b[g++]=e-1,b[g++]=e)}h={};g=
{};h[k.VertexAttrConstants.POSITION]=b;g[k.VertexAttrConstants.POSITION]={size:3,data:a};if(d){for(var a=new Float32Array(3*d.length),n=0,e=0;e<c.length;e++)for(f=0;3>f;f++)a[n++]=d[e][f];h[k.VertexAttrConstants.NORMAL]=b;g[k.VertexAttrConstants.NORMAL]={size:3,data:a}}return new C.GeometryData(g,h,"line")};p.createExtrudedTriangle=function(c,d,a,b){var f,g,e=new Float32Array(18);c=[[-d,0,b/2],[a,0,b/2],[0,c,b/2],[-d,0,-b/2],[a,0,-b/2],[0,c,-b/2]];for(d=0;6>d;d++)e[3*d]=c[d][0],e[3*d+1]=c[d][1],e[3*
d+2]=c[d][2];c=(f={},f[k.VertexAttrConstants.POSITION]=new Uint32Array([0,1,2,3,0,2,2,5,3,1,4,5,5,2,1,1,0,3,3,4,1,4,3,5]),f);f=(g={},g[k.VertexAttrConstants.POSITION]={size:3,data:e},g);return new C.GeometryData(f,c)};p.transformInPlace=function(c,d){c=c.vertexAttributes[k.VertexAttrConstants.POSITION].data;for(var a=0;a<c.length;a+=3)f.vec3.set(r,c[a],c[a+1],c[a+2]),f.vec3.transformMat4(r,r,d),c[a]=r[0],c[a+1]=r[1],c[a+2]=r[2]};p.addVertexColors=function(c,d){var a=d||[1,1,1,1];d=new Uint8Array(4);
d[0]=255*a[0];d[1]=255*a[1];d[2]=255*a[2];d[3]=255*(3<a.length?a[3]:1);var a={},b=c.getVertexAttr(),f;for(f in b)a[f]=b[f];a[k.VertexAttrConstants.COLOR]={size:4,data:d};d={};for(f in c.indices)d[f]=c.indices[f];d[k.VertexAttrConstants.COLOR]=new Uint32Array(d[k.VertexAttrConstants.POSITION].length);return c=new C.GeometryData(a,d,c.primitiveType)};p.addNormals=function(c){var d=c.getVertexAttr();c=c.indices;for(var a=T.Vec3Compact.subtract,b=new Float32Array(c.position.length/3*3),h=d.position.data,
g=0,e=c.position,n=new Uint32Array(e.length),p=0;p<e.length;p+=3){a(h,3*e[p],h,3*e[p+2],U,0);a(h,3*e[p],h,3*e[p+1],r,0);f.vec3.cross(r,r,U);f.vec3.normalize(r,r);var l=g/3;b[g++]=r[0];b[g++]=r[1];b[g++]=r[2];n[p]=l;n[p+1]=l;n[p+2]=l}d[k.VertexAttrConstants.NORMAL]={size:3,data:b,offsetIdx:0,strideIdx:3};c[k.VertexAttrConstants.NORMAL]=n};p.cgToGIS=function(c,d){void 0===d&&(d=c);var a=c.getVertexAttr();c=a.position.data;var a=a.normal.data,b=d.getVertexAttr(),f=b.position.data,b=b.normal.data;if(a)for(var g=
0;g<a.length;g+=3){var e=a[g+1];b[g+1]=-a[g+2];b[g+2]=e}if(c)for(g=0;g<c.length;g+=3)e=c[g+1],f[g+1]=-c[g+2],f[g+2]=e;return d};p.makeOrthoBasisDirUp=K;p.makeOrthoBasisDirUpFallback=L})(J||(J={}));var W=.99619469809,r=n.vec3f32.create(),U=n.vec3f32.create();return J});