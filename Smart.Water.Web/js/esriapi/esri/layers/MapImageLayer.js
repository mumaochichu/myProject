// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
require({cache:{"esri/geometry/support/scaleUtils":function(){define(["require","exports","../../core/unitUtils"],function(u,l,a){function q(f,g){g=a.getMetersPerUnitForSR(g);return f/(g*a.inchesPerMeter*96)}Object.defineProperty(l,"__esModule",{value:!0});l.getScale=function(f,g){g=g||f.extent;f=f.width;var h=a.getMetersPerUnitForSR(g&&g.spatialReference);return g&&f?g.width/f*h*a.inchesPerMeter*96:0};l.getResolutionForScale=q;l.getScaleForResolution=function(f,g){g=a.getMetersPerUnitForSR(g);return f*
g*a.inchesPerMeter*96};l.getExtentForScale=function(a,g){var f=a.extent;a=a.width;g=q(g,f.spatialReference);return f.clone().expand(g*a/f.width)}})},"esri/layers/mixins/ArcGISMapService":function(){define("require exports tslib ../../request ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../geometry/Extent ../../geometry/SpatialReference ../support/commonProperties".split(" "),function(u,l,a,q,f,g,h,m,t,r){Object.defineProperty(l,"__esModule",{value:!0});l.ArcGISMapService=
function(c){return function(c){function b(){var a=null!==c&&c.apply(this,arguments)||this;a.capabilities=void 0;a.copyright=null;a.fullExtent=null;a.legendEnabled=!0;a.spatialReference=null;a.version=null;return a}a.__extends(b,c);b.prototype.readCapabilities=function(a,b){var c=b.capabilities&&b.capabilities.split(",").map(function(a){return a.toLowerCase().trim()});if(!c)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};
a=this.type;var f=-1!==c.indexOf("query"),g=-1!==c.indexOf("map"),e=!!b.exportTilesAllowed,c=-1!==c.indexOf("tilemap"),w="tile"!==a&&!!b.supportsDynamicLayers,E="tile"!==a&&(!b.tileInfo||w),h="tile"!==a&&(!b.tileInfo||w);return{operations:{supportsQuery:f,supportsExportMap:g,supportsExportTiles:e,supportsTileMap:c},exportMap:g?{supportsSublayersChanges:"tile"!==a,supportsDynamicLayers:w,supportsSublayerVisibility:E,supportsSublayerDefinitionExpression:h}:null,exportTiles:e?{maxExportTilesCount:+b.maxExportTilesCount}:
null}};b.prototype.readVersion=function(a,b){(a=b.currentVersion)||(a=b.hasOwnProperty("capabilities")||b.hasOwnProperty("tables")?10:b.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return a};b.prototype.fetchSublayerInfo=function(b,c){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(a){switch(a.label){case 0:return[4,this.fetchAllLayersAndTables(c)];case 1:return a.sent(),[2,this._allLayersAndTablesMap.get(b)]}})})};b.prototype.fetchAllLayersAndTables=function(b){return a.__awaiter(this,
void 0,void 0,function(){var c,h=this;return a.__generator(this,function(a){switch(a.label){case 0:return[4,this.load(b)];case 1:return a.sent(),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=q(g.urlToObject(this.url).path+"/layers",{responseType:"json",query:{f:"json"}}).then(function(a){h._allLayersAndTablesMap=new Map;for(var b=0,c=a.data.layers;b<c.length;b++){var f=c[b];h._allLayersAndTablesMap.set(f.id,f)}return{result:a.data}},function(a){return{error:a}})),[4,this._allLayersAndTablesPromise];
case 2:c=a.sent();f.throwIfAborted(b);if("result"in c)return[2,c.result];throw c.error;}})})};a.__decorate([h.property({readOnly:!0})],b.prototype,"capabilities",void 0);a.__decorate([h.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],b.prototype,"readCapabilities",null);a.__decorate([h.property({json:{read:{source:"copyrightText"}}})],b.prototype,"copyright",void 0);a.__decorate([h.property({type:m})],b.prototype,"fullExtent",
void 0);a.__decorate([h.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],b.prototype,"id",void 0);a.__decorate([h.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],b.prototype,"legendEnabled",void 0);a.__decorate([h.property(r.popupEnabled)],b.prototype,"popupEnabled",void 0);a.__decorate([h.property({type:t})],b.prototype,"spatialReference",void 0);a.__decorate([h.property()],b.prototype,"version",
void 0);a.__decorate([h.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],b.prototype,"readVersion",null);return b=a.__decorate([h.subclass("esri.layers.mixins.ArcGISMapService")],b)}(c)}})},"esri/layers/mixins/SublayersOwner":function(){define("require exports tslib ../../core/Collection ../../core/CollectionFlattener ../../core/Error ../../core/Logger ../../core/accessorSupport/decorators ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ../support/Sublayer ../support/sublayerUtils".split(" "),
function(u,l,a,q,f,g,h,m,t,r,c,b){function v(a,b){var e=[],f={};if(!a)return e;a.forEach(function(a){var g=new c;g.read(a,b);f[g.id]=g;null!=a.parentLayerId&&-1!==a.parentLayerId?(a=f[a.parentLayerId],a.sublayers||(a.sublayers=[]),a.sublayers.unshift(g)):e.unshift(g)});return e}function y(a,b){a&&a.forEach(function(a){b(a);a.sublayers&&a.sublayers.length&&y(a.sublayers,b)})}Object.defineProperty(l,"__esModule",{value:!0});var D=h.getLogger("esri.layers.TileLayer"),z=q.ofType(c);l.forEachSublayer=
y;l.SublayersOwner=function(h){return function(h){function e(){for(var a,b=[],c=0;c<arguments.length;c++)b[c]=arguments[c];var e=h.apply(this,b)||this;e.allSublayers=new f({root:e,rootCollectionNames:["sublayers"],getChildrenFunction:function(a){return a.sublayers}});e.sublayersSourceJSON=(a={},a[2]={},a[3]={},a[4]={},a[5]={},a);e.watch("sublayers",function(a,b){return e._handleSublayersChange(a,b)},!0);return e}a.__extends(e,h);e.prototype.readSublayers=function(a,b){if(b&&a){var c=this.sublayersSourceJSON,
e=t.nameToId(b.origin);2>e||(c[e]={context:b,visibleLayers:a.visibleLayers||c[e].visibleLayers,layers:a.layers||c[e].layers},2<e||(this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers),b=this.createSublayersForOrigin("web-document"),a=b.sublayers,b=b.origin,c=r.getProperties(this),c.setDefaultOrigin(b),this._set("sublayers",new z(a)),c.setDefaultOrigin("user")))}};e.prototype.findSublayerById=function(a){return this.allSublayers.find(function(b){return b.id===a})};e.prototype.createServiceSublayers=
function(){return this.createSublayersForOrigin("service").sublayers};e.prototype.createSublayersForOrigin=function(a){var c="web-document"===a?t.nameToId("web-map"):t.nameToId(a),e=2;a=this.sublayersSourceJSON[2].layers;for(var f=this.sublayersSourceJSON[2].context,g=null,h=0,m=[3,4,5].filter(function(a){return a<=c});h<m.length;h++){var l=m[h],p=this.sublayersSourceJSON[l];b.isSublayerOverhaul(p.layers)&&(e=l,a=p.layers,f=p.context,p.visibleLayers&&(g={visibleLayers:p.visibleLayers,context:p.context}))}for(var A=
null,h=0,m=[3,4,5].filter(function(a){return a>e&&a<=c});h<m.length;h++){var x=this.sublayersSourceJSON[m[h]],l=x.layers,p=x.visibleLayers,x=x.context;l&&(A={layers:l,context:x});p&&(g={visibleLayers:p,context:x})}a=v(a,f);var G=new Map,C=new Set;if(A)for(f=0,h=A.layers;f<h.length;f++)m=h[f],G.set(m.id,m);if(g)for(f=0,h=g.visibleLayers;f<h.length;f++)C.add(h[f]);y(a,function(a){A&&a.read(G.get(a.id),A.context);g&&a.read({defaultVisibility:C.has(a.id)},g.context)});return{origin:t.idToName(e),sublayers:new z({items:a})}};
e.prototype.read=function(a,b){h.prototype.read.call(this,a,b);this.readSublayers(a,b)};e.prototype._handleSublayersChange=function(a,b){var c=this;b&&(b.forEach(function(a){a.parent=null;a.layer=null}),this.handles.remove("sublayers-owner"));a&&(a.forEach(function(a){a.parent=c;a.layer=c}),this.handles.add([a.on("after-add",function(a){a=a.item;a.parent=c;a.layer=c}),a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=null})],"sublayers-owner"),"tile"===this.type&&this.handles.add(a.on("before-changes",
function(a){D.error(new g("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:c}));a.preventDefault()}),"sublayers-owner"))};a.__decorate([m.property({readOnly:!0})],e.prototype,"allSublayers",void 0);a.__decorate([m.property({readOnly:!0,type:q.ofType(c)})],e.prototype,"serviceSublayers",void 0);a.__decorate([m.property({value:null,type:z,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0);a.__decorate([m.property({readOnly:!0})],
e.prototype,"sublayersSourceJSON",void 0);return e=a.__decorate([m.subclass("esri.layers.mixins.SublayersOwner")],e)}(h)}})},"esri/layers/support/Sublayer":function(){define("require exports tslib ../../geometry ../../PopupTemplate ../../renderers ../../request ../../symbols ../../core/Collection ../../core/Error ../../core/HandleOwner ../../core/Identifiable ../../core/lang ../../core/Loadable ../../core/Logger ../../core/MultiOriginJSONSupport ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ./FeatureType ./Field ./FieldsIndex ./fieldUtils ./LabelClass ./layerSourceUtils ../../renderers/support/jsonUtils ../../support/popupUtils ../../tasks/support/Query @dojo/framework/shim/Promise".split(" "),
function(u,l,a,q,f,g,h,m,t,r,c,b,v,y,D,z,M,N,e,w,E,F,L,O,P,Q,J,p,A,x,G){function C(a){return a&&"esriSMS"===a.type}function n(a,b,c){return{ignoreOrigin:!0,enabled:c&&c.writeSublayerStructure||!1}}function H(a,b,c){return{ignoreOrigin:!0,enabled:c?c.writeSublayerStructure||this.originIdOf(b)>=E.nameToId(c.origin):!1}}var K=D.getLogger("esri.layers.support.Sublayer"),R=0,B=new Set;B.add("layer");B.add("parent");B.add("loaded");B.add("loadStatus");B.add("loadError");B.add("loadWarnings");return function(b){function d(a){a=
b.call(this,a)||this;a.capabilities=void 0;a.fields=null;a.fullExtent=null;a.globalIdField=null;a.legendEnabled=!0;a.objectIdField=null;a.popupEnabled=!0;a.popupTemplate=null;a.sourceJSON=null;a.title=null;a.typeIdField=null;a.types=null;return a}a.__extends(d,b);c=d;d.prototype.load=function(I){return a.__awaiter(this,void 0,void 0,function(){var k=this;return a.__generator(this,function(b){this.addResolvingPromise(function(){return a.__awaiter(k,void 0,void 0,function(){var k,b,c;return a.__generator(this,
function(d){switch(d.label){case 0:if(!this.layer&&!this.url)throw new r("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});k=null;return!this.layer||2<this.originIdOf("url")||p.isDataLayerSource(this.source)?[4,h(this.url,a.__assign({responseType:"json",query:{f:"json"}},I))]:[3,2];case 1:return b=d.sent(),k=b.data,[3,4];case 2:return c=this.id,this.source&&null!=this.source.mapLayerId&&(c=this.source.mapLayerId),[4,this.layer.fetchSublayerInfo(c,I)];
case 3:k=d.sent(),d.label=4;case 4:return k&&(this.sourceJSON=k,this.read({layerDefinition:k},{origin:"service"})),[2]}})})}());return[2,this]})})};d.prototype.readCapabilities=function(a,k){k=k.layerDefinition||k;a=(a=k.capabilities||a)?a.toLowerCase().split(",").map(function(a){return a.trim()}):[];return{exportMap:{supportsModification:!!k.canModifyLayer},operations:{supportsQuery:-1!==a.indexOf("query")}}};Object.defineProperty(d.prototype,"definitionExpression",{set:function(a){this._setAndNotifyLayer("definitionExpression",
a)},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"fieldsIndex",{get:function(){return new P(this.fields||[])},enumerable:!0,configurable:!0});d.prototype.readGlobalIdFieldFromService=function(a,k){k=k.layerDefinition||k;if(k.globalIdField)return k.globalIdField;if(k.fields)for(a=0,k=k.fields;a<k.length;a++){var I=k[a];if("esriFieldTypeGlobalID"===I.type)return I.name}};Object.defineProperty(d.prototype,"id",{get:function(){var a=this._get("id");return null==a?R++:a},set:function(a){this._get("id")!==
a&&(!1===this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"labelingInfo",{set:function(a){this._setAndNotifyLayer("labelingInfo",a)},enumerable:!0,configurable:!0});d.prototype.writeLabelingInfo=function(a,k,b,c){a&&a.length&&(k.layerDefinition={drawingInfo:{labelingInfo:a.map(function(a){return a.write({},
c)})}})};Object.defineProperty(d.prototype,"labelsVisible",{set:function(a){this._setAndNotifyLayer("labelsVisible",a)},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"layer",{set:function(a){this._set("layer",a);this.sublayers&&this.sublayers.forEach(function(k){return k.layer=a})},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"listMode",{set:function(a){this._set("listMode",a)},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"minScale",{set:function(a){this._setAndNotifyLayer("minScale",
a)},enumerable:!0,configurable:!0});d.prototype.readMinScale=function(a,k){return k.minScale||k.layerDefinition&&k.layerDefinition.minScale||0};Object.defineProperty(d.prototype,"maxScale",{set:function(a){this._setAndNotifyLayer("maxScale",a)},enumerable:!0,configurable:!0});d.prototype.readMaxScale=function(a,k){return k.maxScale||k.layerDefinition&&k.layerDefinition.maxScale||0};d.prototype.readObjectIdFieldFromService=function(a,k){k=k.layerDefinition||k;if(k.objectIdField)return k.objectIdField;
if(k.fields)for(a=0,k=k.fields;a<k.length;a++){var b=k[a];if("esriFieldTypeOID"===b.type)return b.name}};Object.defineProperty(d.prototype,"opacity",{set:function(a){this._setAndNotifyLayer("opacity",a)},enumerable:!0,configurable:!0});d.prototype.readOpacity=function(a,k){a=k.layerDefinition;return 1-.01*(null!=a.transparency?a.transparency:a.drawingInfo.transparency)};d.prototype.writeOpacity=function(a,k,b,c){k.layerDefinition={drawingInfo:{transparency:100-100*a}}};d.prototype.writeParent=function(a,
k){k.parentLayerId=this.parent&&this.parent!==this.layer?this.parent.id:-1};Object.defineProperty(d.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"renderer",{set:function(a){if(a)for(var k=0,b=a.getSymbols();k<b.length;k++)if(m.isSymbol3D(b[k])){K.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",a)},enumerable:!0,configurable:!0});d.prototype.readRenderer=
function(a,k,b){if(a=k.layerDefinition.drawingInfo.renderer||void 0)(a=A.read(a,k,b)||void 0)||K.error("Failed to create renderer",{rendererDefinition:k.drawingInfo.renderer,layer:this,context:b});return a};d.prototype.writeRenderer=function(a,b,c,d){b.layerDefinition={drawingInfo:{renderer:a.write({},d)}}};d.prototype.writeWebSceneRenderer=function(a,b,c,d){b.layerDefinition={drawingInfo:{renderer:a.write({},d)}}};Object.defineProperty(d.prototype,"source",{get:function(){return this._get("source")||
{mapLayerId:this.id,type:p.MAPLAYER}},set:function(a){this._setAndNotifyLayer("source",a)},enumerable:!0,configurable:!0});d.prototype.writeSource=function(a,b){b.layerDefinition={source:p.sourceToJSON(a)}};Object.defineProperty(d.prototype,"sublayers",{set:function(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)},enumerable:!0,configurable:!0});d.prototype.castSublayers=function(a){return w.default(t.ofType(c),a)};d.prototype.writeSublayers=function(a,b,c){this.get("sublayers.length")&&
(b[c]=this.sublayers.map(function(a){return a.id}).toArray().reverse())};d.prototype.readTypeIdField=function(a,b){b=b.layerDefinition||b;if(a=b.typeIdField)if(b=Q.getField(b.fields,a))return b.name;return null};Object.defineProperty(d.prototype,"url",{get:function(){var a,b,c=null!==(b=null===(a=this.layer)||void 0===a?void 0:a.parsedUrl)&&void 0!==b?b:this._lastParsedUrl;a=this.source;if(!c)return null;this._lastParsedUrl=c;if(p.isMapLayerSource(a))return c.path+"/"+a.mapLayerId;a={layer:JSON.stringify({source:p.sourceToJSON(this.source)})};
return c.path+"/dynamicLayer?"+N.objectToQuery(a)},set:function(a){a?this._override("url",a):this._clearOverride("url")},enumerable:!0,configurable:!0});Object.defineProperty(d.prototype,"visible",{set:function(a){this._setAndNotifyLayer("visible",a)},enumerable:!0,configurable:!0});d.prototype.writeVisible=function(a,b,c,d){b[c]=this.getAtOrigin("defaultVisibility","service")||a};d.prototype.clone=function(){var a=F.getProperties(this).store,b=new c;F.getProperties(b).store=a.clone(B);this.url;b._lastParsedUrl=
this._lastParsedUrl;return b};d.prototype.createPopupTemplate=function(a){return x.createPopupTemplate(this,a)};d.prototype.createQuery=function(){return new G({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})};d.prototype.createFeatureLayer=function(){return a.__awaiter(this,void 0,void 0,function(){var b,c,d,e,f;return a.__generator(this,function(a){switch(a.label){case 0:if(this.hasOwnProperty("sublayers"))return[2,null];b=this.layer&&this.layer.parsedUrl;c=this.source;d=null;b&&(d=
p.isMapLayerSource(c)?b.path+"/"+c.mapLayerId:b.path+"/dynamicLayer");return[4,new Promise(function(a,b){u(["../FeatureLayer"],a,b)})];case 1:return e=a.sent(),f=new e({url:d}),null!=this.layer.refreshInterval&&(f.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(f.definitionExpression=this.definitionExpression),2<this.originIdOf("labelingInfo")&&(f.labelingInfo=v.clone(this.labelingInfo)),0<this.originIdOf("labelsVisible")&&(f.labelsVisible=this.labelsVisible),0<this.originIdOf("legendEnabled")&&
(f.legendEnabled=this.legendEnabled),0<this.originIdOf("visible")&&(f.visible=this.visible),0<this.originIdOf("minScale")&&(f.minScale=this.minScale),0<this.originIdOf("maxScale")&&(f.maxScale=this.maxScale),0<this.originIdOf("opacity")&&(f.opacity=this.opacity),0<this.originIdOf("popupTemplate")&&(f.popupTemplate=v.clone(this.popupTemplate)),2<this.originIdOf("renderer")&&(f.renderer=v.clone(this.renderer)),p.isDataLayerSource(this.source)&&(f.dynamicDataSource=v.clone(this.source)),0<this.originIdOf("title")&&
(f.title=this.title),[2,f]}})})};d.prototype.getFeatureType=function(a){var b=this.typeIdField;if(!b||!a)return null;var c=a.attributes?a.attributes[b]:void 0;if(null==c)return null;var d=null;this.types.some(function(a){var b=a.id;if(null==b)return!1;b.toString()===c.toString()&&(d=a);return!!d});return d};d.prototype.getFieldDomain=function(a,b){return(b=this.getFeatureType(b&&b.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};d.prototype.queryFeatures=function(a,
b){var c=this;void 0===a&&(a=this.createQuery());return this.load().then(function(){if(!c.get("capabilities.operations.supportsQuery"))throw new r("Sublayer.queryFeatures","this layer doesn't support queries.");return M.all([new Promise(function(a,b){u(["../../tasks/operations/query"],a,b)}),new Promise(function(a,b){u(["../../tasks/support/FeatureSet"],a,b)})])}).then(function(d){var e=d[0].executeQuery,k=d[1];return e(c.url,G.from(a),c.layer?c.layer.spatialReference:null,b).then(function(a){return k.fromJSON(a.data)})}).then(function(a){a&&
a.features&&a.features.forEach(function(a){a.sourceLayer=c});return a})};d.prototype.toExportImageJSON=function(){var a=this,b={id:this.id,source:p.sourceToJSON(this.source)};this.definitionExpression&&(b.definitionExpression=this.definitionExpression);var c=["renderer","labelingInfo","opacity","labelsVisible"].reduce(function(b,c){b[c]=a.originIdOf(c);return b},{});if(Object.keys(c).some(function(a){return 2<=c[a]})){var d=b.drawingInfo={};2<=c.renderer&&(d.renderer=this.renderer?this.renderer.toJSON():
null);2<=c.labelsVisible&&(d.showLabels=this.labelsVisible);this.labelsVisible&&2<=c.labelingInfo&&(d.labelingInfo=this.labelingInfo?this.labelingInfo.map(function(a){return a.write({},{origin:"service"})}):null,d.showLabels=!0);2<=c.opacity&&(d.transparency=100-100*this.opacity);this._assignDefaultSymbolColors(d.renderer)}return b};d.prototype._assignDefaultSymbolColors=function(a){this._forEachSimpleMarkerSymbols(a,function(a){a.color||"esriSMSX"!==a.style&&"esriSMSCross"!==a.style||(a.color=a.outline&&
a.outline.color?a.outline.color:[0,0,0,0])})};d.prototype._forEachSimpleMarkerSymbols=function(a,b){if(a){var c=0,d="uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in a?a.classBreakInfos:[];for(;c<d.length;c++){var e=d[c];C(e.symbol)&&b(e.symbol)}"symbol"in a&&C(a.symbol)&&b(a.symbol);"defaultSymbol"in a&&C(a.defaultSymbol)&&b(a.defaultSymbol)}};d.prototype._setAndNotifyLayer=function(a,b){var c=this.layer,d=this._get(a),e,f;switch(a){case "definitionExpression":e="supportsSublayerDefinitionExpression";
case "minScale":case "maxScale":case "visible":e="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":e="supportsDynamicLayers",f="supportsModification"}var k=F.getProperties(this).getDefaultOrigin();if("service"!==k){if(e&&!1===this.get("layer.capabilities.exportMap."+e)){this._logLockedError(a,"capability not available 'layer.capabilities.exportMap."+e+"'");return}if(f&&!1===this.get("capabilities.exportMap."+f)){this._logLockedError(a,
"capability not available 'capabilities.exportMap."+f+"'");return}}"source"===a&&"not-loaded"!==this.loadStatus?this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):(this._set(a,b),"service"!==k&&d!==b&&c&&c.emit&&c.emit("sublayer-update",{propertyName:a}))};d.prototype._handleSublayersChange=function(a,b){var c=this;b&&(b.forEach(function(a){a.parent=null;a.layer=null}),this.handles.removeAll());a&&(a.forEach(function(a){a.parent=c;a.layer=c.layer}),this.handles.add([a.on("after-add",
function(a){a=a.item;a.parent=c;a.layer=c.layer}),a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=null}),a.on("before-changes",function(a){var b=c.get("layer.capabilities.exportMap.supportsSublayersChanges");null==b||b||(K.error(new r("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:c,layer:c.layer})),a.preventDefault())})]))};d.prototype._logLockedError=function(a,b){K.error(new r("sublayer:locked","Property '"+a+
"' can't be changed on Sublayer from the layer '"+this.layer.id+"'",{reason:b,sublayer:this,layer:this.layer}))};d.prototype._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};var c;a.__decorate([e.property({readOnly:!0})],d.prototype,"capabilities",void 0);a.__decorate([e.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],d.prototype,"readCapabilities",null);a.__decorate([e.property({type:String,value:null,json:{read:{source:"layerDefinition.definitionExpression"},
write:{target:"layerDefinition.definitionExpression",overridePolicy:H}}})],d.prototype,"definitionExpression",null);a.__decorate([e.property({type:[O],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],d.prototype,"fields",void 0);a.__decorate([e.property({readOnly:!0,dependsOn:["fields"]})],d.prototype,"fieldsIndex",null);a.__decorate([e.property({type:q.Extent,json:{read:{source:"layerDefinition.extent"}}})],d.prototype,"fullExtent",void 0);a.__decorate([e.property({type:String})],
d.prototype,"globalIdField",void 0);a.__decorate([e.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],d.prototype,"readGlobalIdFieldFromService",null);a.__decorate([e.property({type:Number,json:{write:{ignoreOrigin:!0}}})],d.prototype,"id",null);a.__decorate([e.property({value:null,type:[J],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:n}}})],d.prototype,"labelingInfo",
null);a.__decorate([e.writer("labelingInfo")],d.prototype,"writeLabelingInfo",null);a.__decorate([e.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:n}}})],d.prototype,"labelsVisible",null);a.__decorate([e.property({value:null})],d.prototype,"layer",null);a.__decorate([e.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",
overridePolicy:H}}})],d.prototype,"legendEnabled",void 0);a.__decorate([e.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],d.prototype,"listMode",null);a.__decorate([e.property({type:Number,value:0,json:{write:{enabled:!1,overridePolicy:n}}})],d.prototype,"minScale",null);a.__decorate([e.reader("minScale",["minScale","layerDefinition.minScale"])],d.prototype,"readMinScale",null);a.__decorate([e.property({type:Number,value:0,
json:{write:{enabled:!1,overridePolicy:n}}})],d.prototype,"maxScale",null);a.__decorate([e.reader("maxScale",["maxScale","layerDefinition.maxScale"])],d.prototype,"readMaxScale",null);a.__decorate([e.property({type:String})],d.prototype,"objectIdField",void 0);a.__decorate([e.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],d.prototype,"readObjectIdFieldFromService",null);a.__decorate([e.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",
overridePolicy:n}}})],d.prototype,"opacity",null);a.__decorate([e.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],d.prototype,"readOpacity",null);a.__decorate([e.writer("opacity")],d.prototype,"writeOpacity",null);a.__decorate([e.property({json:{type:Number,write:{target:"parentLayerId",allowNull:!0,overridePolicy:n}}})],d.prototype,"parent",void 0);a.__decorate([e.writer("parent")],d.prototype,"writeParent",null);a.__decorate([e.property({type:Boolean,
value:!0,json:{read:{source:"disablePopup",reader:function(a,b){return!b.disablePopup}},write:{target:"disablePopup",overridePolicy:H,writer:function(a,b,c){b[c]=!a}}}})],d.prototype,"popupEnabled",void 0);a.__decorate([e.property({type:f,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:H}}})],d.prototype,"popupTemplate",void 0);a.__decorate([e.property({readOnly:!0,dependsOn:["fields","title"]})],d.prototype,"defaultPopupTemplate",null);a.__decorate([e.property({types:g.rendererTypes,
value:null,json:{write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:n}}})],d.prototype,"renderer",null);a.__decorate([e.reader("renderer",["layerDefinition.drawingInfo.renderer"])],d.prototype,"readRenderer",null);a.__decorate([e.writer("renderer")],d.prototype,"writeRenderer",null);a.__decorate([e.writer("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:g.webSceneRendererTypes}})],d.prototype,"writeWebSceneRenderer",null);a.__decorate([e.property({cast:p.castSource,
json:{read:{source:"layerDefinition.source",reader:p.sourceFromJSON},write:{target:"layerDefinition.source",overridePolicy:n}}})],d.prototype,"source",null);a.__decorate([e.writer("source")],d.prototype,"writeSource",null);a.__decorate([e.property()],d.prototype,"sourceJSON",void 0);a.__decorate([e.property({value:null,json:{type:[w.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:n}}})],d.prototype,"sublayers",null);a.__decorate([e.cast("sublayers")],d.prototype,"castSublayers",null);
a.__decorate([e.writer("sublayers")],d.prototype,"writeSublayers",null);a.__decorate([e.property({type:String,json:{read:{source:"name"},write:{target:"name",allowNull:!0,overridePolicy:H}}})],d.prototype,"title",void 0);a.__decorate([e.property({type:String})],d.prototype,"typeIdField",void 0);a.__decorate([e.reader("typeIdField",["layerDefinition.typeIdField"])],d.prototype,"readTypeIdField",null);a.__decorate([e.property({type:[L],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],
d.prototype,"types",void 0);a.__decorate([e.property({type:String,dependsOn:["layer","source"],json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:function(){return{enabled:this._isOverridden("url")}}}}})],d.prototype,"url",null);a.__decorate([e.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:n}}})],d.prototype,"visible",null);a.__decorate([e.writer("visible")],d.prototype,"writeVisible",null);return d=c=a.__decorate([e.subclass("esri.layers.support.Sublayer")],
d)}(c.HandleOwnerMixin(z.MultiOriginJSONMixin(b.IdentifiableMixin(y))))})},"esri/layers/support/sublayerUtils":function(){define(["require","exports","./layerSourceUtils"],function(u,l,a){function q(a,g){if(!a||!a.length)return!0;g=g.slice().reverse().flatten(function(a){return(a=a.sublayers)&&a.toArray().reverse()}).map(function(a){return a.id}).toArray();if(a.length>g.length)return!1;for(var f=0,m=g.length,l=0;l<a.length;l++){for(var r=a[l].id;f<m&&g[f]!==r;)f++;if(f>=m)return!1}return!0}Object.defineProperty(l,
"__esModule",{value:!0});l.shouldWriteSublayerStructure=function(a,g,h){return g.flatten(function(a){return a.sublayers}).length!==a.length||a.some(function(a){return a.originIdOf("minScale")>h||a.originIdOf("maxScale")>h||a.originIdOf("renderer")>h||a.originIdOf("labelingInfo")>h||a.originIdOf("opacity")>h||a.originIdOf("labelsVisible")>h||a.originIdOf("source")>h})?!0:!q(a,g)};l.isExportDynamic=function(f,g,h){return f.some(function(f){var g=f.source;return!(!g||g.type===a.MAPLAYER&&g.mapLayerId===
f.id&&(!g.gdbVersion||g.gdbVersion===h.gdbVersion))||2<f.originIdOf("renderer")||2<f.originIdOf("labelingInfo")||2<f.originIdOf("opacity")||2<f.originIdOf("labelsVisible")})?!0:!q(f,g)};l.isSublayerOverhaul=function(a){return!!a&&a.some(function(a){return null!=a.minScale||a.layerDefinition&&null!=a.layerDefinition.minScale})}})},"esri/layers/support/ExportImageParameters":function(){define("require exports tslib ../../core/Accessor ../../core/accessorSupport/decorators ./sublayerUtils ./timeUtils ../../views/View".split(" "),
function(u,l,a,q,f,g,h,m){Object.defineProperty(l,"__esModule",{value:!0});var t={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};u=function(l){function c(){var a=null!==l&&l.apply(this,arguments)||this;a._scale=null;a.view=null;return a}a.__extends(c,l);Object.defineProperty(c.prototype,
"dynamicLayers",{get:function(){if(!this.hasDynamicLayers)return null;var a=this.visibleSublayers.map(function(a){return a.toExportImageJSON()});return a.length?JSON.stringify(a):null},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"hasDynamicLayers",{get:function(){return this.layer&&g.isExportDynamic(this.visibleSublayers,this.layer.serviceSublayers,this.layer)},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"layer",{set:function(a){var b=this;this._get("layer")!==
a&&(this._set("layer",a),this._layerHandles&&(this._layerHandles.forEach(function(a){return a.remove()}),this._layerHandles.length=0),a&&(this._layerHandles=[a.allSublayers.on("change",function(){return b.notifyChange("visibleSublayers")}),a.on("sublayer-update",function(a){return b.notifyChange(t[a.propertyName])})]))},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"layers",{get:function(){var a=this.visibleSublayers;return a?a.length?"show:"+a.map(function(a){return a.id}).join(","):
"show:-1":null},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"layerDefs",{get:function(){var a=this.visibleSublayers.filter(function(a){return null!=a.definitionExpression});return a.length?JSON.stringify(a.reduce(function(a,b){a[b.id]=b.definitionExpression;return a},{})):null},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"scale",{get:function(){return null!=this._scale?this._scale:this.view&&this.view.scale||0},set:function(a){this.view||(this._scale=a,
this.notifyChange("scale"))},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"version",{get:function(){this.layers;this.layerDefs;this.dynamicLayers;this.timeExtent;var a=this.layer;a&&(a.dpi,a.imageFormat,a.imageTransparency,a.gdbVersion);return(this._get("version")||0)+1},set:function(a){this._set("version",a)},enumerable:!0,configurable:!0});Object.defineProperty(c.prototype,"visibleSublayers",{get:function(){var a=this,c=[];if(!this.layer)return c;var f=this.layer.sublayers,
g=function(b){var f=a.scale,h=0===b.minScale||f<=b.minScale,e=0===b.maxScale||f>=b.maxScale;b.visible&&(0===f||h&&e)&&(b.sublayers?b.sublayers.forEach(g):c.unshift(b))};f&&f.forEach(g);f=this._get("visibleSublayers");return!f||f.length!==c.length||f.some(function(a,b){return c[b]!==a})?c:f},enumerable:!0,configurable:!0});c.prototype.toJSON=function(){var b=this.layer,b={dpi:b.dpi,format:b.imageFormat,transparent:b.imageTransparency,gdbVersion:b.gdbVersion||null};this.hasDynamicLayers&&this.dynamicLayers?
b.dynamicLayers=this.dynamicLayers:b=a.__assign(a.__assign({},b),{layers:this.layers,layerDefs:this.layerDefs});return b};a.__decorate([f.property({readOnly:!0,dependsOn:["hasDynamicLayers","visibleSublayers"]})],c.prototype,"dynamicLayers",null);a.__decorate([f.property({readOnly:!0,dependsOn:["visibleSublayers","layer.serviceSublayers","layer.capabilities"]})],c.prototype,"hasDynamicLayers",null);a.__decorate([f.property()],c.prototype,"layer",null);a.__decorate([f.property({readOnly:!0,dependsOn:["visibleSublayers"]})],
c.prototype,"layers",null);a.__decorate([f.property({readOnly:!0,dependsOn:["visibleSublayers"]})],c.prototype,"layerDefs",null);a.__decorate([f.property({type:Number,dependsOn:["view.scale"]})],c.prototype,"scale",null);a.__decorate([f.property(h.combinedViewLayerTimeExtentProperty)],c.prototype,"timeExtent",void 0);a.__decorate([f.property({dependsOn:"layers layerDefs dynamicLayers layer.dpi layer.imageFormat layer.imageTransparency layer.gdbVersion timeExtent".split(" ")})],c.prototype,"version",
null);a.__decorate([f.property({type:m})],c.prototype,"view",void 0);a.__decorate([f.property({readOnly:!0,dependsOn:["layer.sublayers","scale"]})],c.prototype,"visibleSublayers",null);return c=a.__decorate([f.subclass("esri.layers.mixins.ExportImageParameters")],c)}(q);l.ExportImageParameters=u})},"*noref":1}});
define("require exports tslib ../request ../core/Error ../core/HandleOwner ../core/loadAll ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/accessorSupport/decorators ../core/accessorSupport/ensureType ../core/accessorSupport/PropertyOrigin ../geometry/support/scaleUtils ./Layer ./mixins/ArcGISMapService ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/SublayersOwner ./mixins/TemporalLayer ./support/commonProperties ./support/ExportImageParameters ./support/Sublayer ./support/sublayerUtils".split(" "),function(u,
l,a,q,f,g,h,m,t,r,c,b,v,y,D,z,M,N,e,w,E,F,L,O,P,Q,J){return function(e){function g(){for(var a=[],b=0;b<arguments.length;b++)a[b]=arguments[b];a=e.apply(this,a)||this;a.alwaysRefetch=!1;a.dpi=96;a.gdbVersion=null;a.imageFormat="png24";a.imageMaxHeight=2048;a.imageMaxWidth=2048;a.imageTransparency=!0;a.labelsVisible=!1;a.isReference=null;a.operationalLayerType="ArcGISMapServiceLayer";a.sourceJSON=null;a.sublayers=null;a.type="map-image";a.url=null;return a}a.__extends(g,e);g.prototype.normalizeCtorArgs=
function(b,c){return"string"===typeof b?a.__assign({url:b},c):b};g.prototype.load=function(a){var b=this,c=m.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},a).then(function(){return b._fetchService(c)},function(){return b._fetchService(c)}));return r.resolve(this)};g.prototype.readImageFormat=function(a,b){return(a=b.supportedImageFormatTypes)&&-1<a.indexOf("PNG32")?"png32":"png24"};g.prototype.writeSublayers=function(b,c,e,f){if(this.loaded&&
b){b=b.slice().reverse().flatten(function(a){return(a=a.sublayers)&&a.toArray().reverse()}).toArray();e=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap.supportsDynamicLayers){var g=v.nameToId(f.origin);3===g?(e=this.createSublayersForOrigin("service").sublayers,e=J.shouldWriteSublayerStructure(b,e,2)):3<g&&(e=this.createSublayersForOrigin("portal-item"),e=J.shouldWriteSublayerStructure(b,e.sublayers,v.nameToId(e.origin)))}var h=[],l=a.__assign({writeSublayerStructure:e},
f),n=e;b.forEach(function(a){var b=a.write({},l);h.push(b);n=n||"user"===a.originOf("visible")});h.some(function(a){return 1<Object.keys(a).length})&&(c.layers=h);n&&(c.visibleLayers=b.filter(function(a){return a.visible}).map(function(a){return a.id}))}};g.prototype.createExportImageParameters=function(b,c,e,f){var g=f&&f.pixelRatio||1;b&&10<=this.version&&(b=b.clone().shiftCentralMeridian());var h=new P.ExportImageParameters({layer:this,scale:y.getScale({extent:b,width:c})*g}),l=h.toJSON();h.layer=
null;h.destroy();var h=!f||!f.rotation||10.3>this.version?{}:{rotation:-f.rotation},m=b&&b.spatialReference,m=m.wkid||JSON.stringify(m.toJSON());l.dpi*=g;g={};if(null===f||void 0===f?0:f.timeExtent){var n=f.timeExtent.toJSON();f=n.start;n=n.end;g.time=f&&n&&f===n?""+f:(null==f?"null":f)+","+(null==n?"null":n)}else this.timeInfo&&!this.timeInfo.hasLiveData&&(g.time="null,null");return a.__assign(a.__assign(a.__assign({bbox:b&&b.xmin+","+b.ymin+","+b.xmax+","+b.ymax,bboxSR:m,imageSR:m,size:c+","+e},
l),h),g)};g.prototype.fetchImage=function(b,c,e,g){return a.__awaiter(this,void 0,void 0,function(){var h,l,m,n;return a.__generator(this,function(p){h={responseType:"image"};g&&g.timestamp&&(h.query={_ts:g.timestamp});g&&g.signal&&(h.signal=g.signal);l=this.parsedUrl.path+"/export";m=a.__assign(a.__assign(a.__assign({},this.parsedUrl.query),this.createExportImageParameters(b,c,e,g)),{f:"image",_ts:this.alwaysRefetch?Date.now():null});if(null!=m.dynamicLayers&&!this.capabilities.exportMap.supportsDynamicLayers)return[2,
r.reject(new f("mapimagelayer:dynamiclayer-not-supported","service "+this.url+" doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.",{query:m}))];h.query=h.query?a.__assign(a.__assign({},m),h.query):m;n=q(l,h);return[2,n.then(function(a){return a.data}).catch(function(a){if(r.isAbortError(a))throw a;throw new f("mapimagelayer:image-fetch-error","Unable to load image: "+l,{error:a});})]})})};g.prototype.loadAll=function(){var a=
this;return h.default(this,function(b){b(a.allSublayers)})};g.prototype._fetchService=function(b){return a.__awaiter(this,void 0,void 0,function(){var c,e,f;return a.__generator(this,function(g){switch(g.label){case 0:return this.sourceJSON?(this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),[2]):[4,q(this.parsedUrl.path,{query:a.__assign({f:"json"},this.parsedUrl.query),signal:b})];case 1:c=g.sent();e=c.data;if(f=c.ssl)this.url=this.url.replace(/^http:/i,"https:");this.sourceJSON=e;
this.read(e,{origin:"service",url:this.parsedUrl});return[2]}})})};a.__decorate([c.property()],g.prototype,"alwaysRefetch",void 0);a.__decorate([c.property()],g.prototype,"dpi",void 0);a.__decorate([c.property()],g.prototype,"gdbVersion",void 0);a.__decorate([c.property({json:{read:!1,write:!1}})],g.prototype,"popupEnabled",void 0);a.__decorate([c.property()],g.prototype,"imageFormat",void 0);a.__decorate([c.reader("imageFormat",["supportedImageFormatTypes"])],g.prototype,"readImageFormat",null);
a.__decorate([c.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],g.prototype,"imageMaxHeight",void 0);a.__decorate([c.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],g.prototype,"imageMaxWidth",void 0);a.__decorate([c.property()],g.prototype,"imageTransparency",void 0);a.__decorate([c.property({json:{read:!1,write:!1}})],g.prototype,"labelsVisible",void 0);a.__decorate([c.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:function(){return{enabled:!1}}}}})],
g.prototype,"isReference",void 0);a.__decorate([c.property({type:["ArcGISMapServiceLayer"]})],g.prototype,"operationalLayerType",void 0);a.__decorate([c.property()],g.prototype,"sourceJSON",void 0);a.__decorate([c.property({json:{write:{ignoreOrigin:!0}}})],g.prototype,"sublayers",void 0);a.__decorate([c.writer("sublayers",{layers:{type:[Q]},visibleLayers:{type:[b.Integer]}})],g.prototype,"writeSublayers",null);a.__decorate([c.property({type:["show","hide","hide-children"]})],g.prototype,"listMode",
void 0);a.__decorate([c.property({json:{read:!1},readOnly:!0,value:"map-image"})],g.prototype,"type",void 0);a.__decorate([c.property(O.url)],g.prototype,"url",void 0);return g=a.__decorate([c.subclass("esri.layers.MapImageLayer")],g)}(L.TemporalLayer(E.ScaleRangeLayer(w.RefreshableLayer(F.SublayersOwner(z.ArcGISMapService(M.ArcGISService(N.OperationalLayer(e.PortalLayer(t.MultiOriginJSONMixin(g.HandleOwnerMixin(D)))))))))))});