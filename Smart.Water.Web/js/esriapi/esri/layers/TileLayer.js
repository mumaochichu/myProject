// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/mixins/ArcGISCachedService":function(){define("require exports tslib ../../geometry ../../core/accessorSupport/decorators ../support/serviceTileInfoProperty ../support/TilemapCache".split(" "),function(z,u,a,q,e,h,l){Object.defineProperty(u,"__esModule",{value:!0});u.ArcGISCachedService=function(f){return function(d){function c(){var a=null!==d&&d.apply(this,arguments)||this;a.copyright=null;a.minScale=0;a.maxScale=0;a.spatialReference=null;a.tileInfo=null;a.tilemapCache=
null;return a}a.__extends(c,d);c.prototype.readMinScale=function(a,c){return null!=c.minLOD&&null!=c.maxLOD?a:0};c.prototype.readMaxScale=function(a,c){return null!=c.minLOD&&null!=c.maxLOD?a:0};Object.defineProperty(c.prototype,"supportsBlankTile",{get:function(){return 10.2<=this.version},enumerable:!0,configurable:!0});c.prototype.readTilemapCache=function(a,c){return c.capabilities&&-1<c.capabilities.indexOf("Tilemap")?new l.TilemapCache({layer:this}):null};a.__decorate([e.property({json:{read:{source:"copyrightText"}}})],
c.prototype,"copyright",void 0);a.__decorate([e.property()],c.prototype,"minScale",void 0);a.__decorate([e.reader("service","minScale")],c.prototype,"readMinScale",null);a.__decorate([e.property()],c.prototype,"maxScale",void 0);a.__decorate([e.reader("service","maxScale")],c.prototype,"readMaxScale",null);a.__decorate([e.property({type:q.SpatialReference})],c.prototype,"spatialReference",void 0);a.__decorate([e.property({readOnly:!0,dependsOn:["version"]})],c.prototype,"supportsBlankTile",null);
a.__decorate([e.property(h.serviceTileInfoProperty)],c.prototype,"tileInfo",void 0);a.__decorate([e.property()],c.prototype,"tilemapCache",void 0);a.__decorate([e.reader("service","tilemapCache",["capabilities"])],c.prototype,"readTilemapCache",null);a.__decorate([e.property()],c.prototype,"version",void 0);return c=a.__decorate([e.subclass("esri.layers.mixins.ArcGISCachedService")],c)}(f)}})},"esri/layers/support/serviceTileInfoProperty":function(){define(["require","exports","tslib","./TileInfo"],
function(z,u,a,q){function e(e,l,f,d){if(!e)return null;f=l.minScale;var c=l.maxScale,p=l.minLOD,h=l.maxLOD;if(null!=p&&null!=h)return d&&d.ignoreMinMaxLOD?q.fromJSON(e):q.fromJSON(a.__assign(a.__assign({},e),{lods:e.lods.filter(function(a){a=a.level;return null!=a&&a>=p&&a<=h})}));if(0!==f&&0!==c){var t=f?Math.round(1E4*f)/1E4:Infinity,y=c?Math.round(1E4*c)/1E4:-Infinity;return q.fromJSON(a.__assign(a.__assign({},e),{lods:e.lods.filter(function(a){a=Math.round(1E4*a.scale)/1E4;return a<=t&&a>=y})}))}return q.fromJSON(e)}
Object.defineProperty(u,"__esModule",{value:!0});u.serviceTileInfoProperty={type:q,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:e}}}}};u.readServiceTileInfo=e})},"esri/layers/support/TileInfo":function(){define("require exports tslib ../../geometry ../../core/jsonMap ../../core/JSONSupport ../../core/unitUtils ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../../geometry/support/aaBoundingRect ../../geometry/support/spatialReferenceUtils ../../geometry/support/webMercatorUtils ./LOD".split(" "),
function(z,u,a,q,e,h,l,f,d,c,p,w,t){var y=new e.default({PNG:"png",PNG8:"png8",PNG24:"png24",PNG32:"png32",JPEG:"jpg",JPG:"jpg",DIB:"dib",TIFF:"tiff",EMF:"emf",PS:"ps",PDF:"pdf",GIF:"gif",SVG:"svg",SVGZ:"svgz",Mixed:"mixed",MIXED:"mixed",LERC:"lerc",LERC2D:"lerc2d",RAW:"raw",pbf:"pbf"});return function(e){function m(a){a=e.call(this,a)||this;a.dpi=96;a.format=null;a.origin=null;a.minScale=0;a.maxScale=0;a.size=null;a.spatialReference=null;return a}a.__extends(m,e);h=m;m.create=function(a){void 0===
a&&(a={size:256,spatialReference:q.SpatialReference.WebMercator});var b=a.resolutionFactor||1,r=a.scales,k=a.size||256,c=a.spatialReference||q.SpatialReference.WebMercator;if(!p.isValid(c)){b=[];if(r)for(a=0;a<r.length;a++){var n=r[a];b.push({level:a,scale:n,resolution:n})}else{var d=5E-4;for(a=23;0<=a;a--)b.unshift({level:a,scale:d,resolution:d}),d*=2}return new h({dpi:96,lods:b,origin:new q.Point(0,0,c),size:[k,k],spatialReference:c})}var n=p.getInfo(c),f=a.origin?new q.Point({x:a.origin.x,y:a.origin.y,
spatialReference:c}):n?new q.Point({x:n.origin[0],y:n.origin[1],spatialReference:c}):new q.Point({x:0,y:0,spatialReference:c}),m=1/(39.37*l.getMetersPerUnitForSR(c)*96),e=[];if(r)for(a=0;a<r.length;a++)n=r[a],d=n*m,e.push({level:a,scale:n,resolution:d});else for(n=p.isGeographic(c)?512/k*5.916575275917094E8:256/k*5.91657527591555E8,r=Math.ceil(24/b),e.push({level:0,scale:n,resolution:n*m}),a=1;a<r;a++)n/=Math.pow(2,b),d=n*m,e.push({level:a,scale:n,resolution:d});return new h({dpi:96,lods:e,origin:f,
size:[k,k],spatialReference:c})};Object.defineProperty(m.prototype,"isWrappable",{get:function(){var a=this.spatialReference,b=this.origin;if(a&&b){var c=p.getInfo(a);return a.isWrappable&&Math.abs(c.origin[0]-b.x)<=c.dx}return!1},enumerable:!0,configurable:!0});m.prototype.readOrigin=function(r,b){return q.Point.fromJSON(a.__assign({spatialReference:b.spatialReference},r))};Object.defineProperty(m.prototype,"lods",{set:function(a){var b=this,r=0,k=0,c=[];this._levelToLOD={};a&&(r=-Infinity,k=Infinity,
a.forEach(function(a){c.push(a.scale);r=a.scale>r?a.scale:r;k=a.scale<k?a.scale:k;b._levelToLOD[a.level]=a}));this._set("scales",c);this._set("minScale",r);this._set("maxScale",k);this._set("lods",a);this._initializeUpsampleLevels()},enumerable:!0,configurable:!0});m.prototype.readSize=function(a,b){return[b.cols,b.rows]};m.prototype.writeSize=function(a,b){b.cols=a[0];b.rows=a[0]};m.prototype.zoomToScale=function(a){var b=this.scales;if(0>=a)return b[0];if(a>=b.length)return b[b.length-1];var c=
Math.round(a);return b[c]+(c-a)*(b[Math.round(a-.5)]-b[c])};m.prototype.scaleToZoom=function(a){for(var b=this.scales,c=b.length-1,k=0;k<c;k++){var r=b[k],n=b[k+1];if(r<=a)break;if(n===a)return k+1;if(r>a&&n<a)return k+1-(a-n)/(r-n)}return k};m.prototype.snapScale=function(a,b){void 0===b&&(b=.95);a=this.scaleToZoom(a);return a%Math.floor(a)>=b?this.zoomToScale(Math.ceil(a)):this.zoomToScale(Math.floor(a))};m.prototype.tileAt=function(a,b,d,k){var r=this.lodAt(a);if(!r)return null;var n;if("number"===
typeof b)n=b,b=d;else{if(p.equals(b.spatialReference,this.spatialReference))n=b.x,b=b.y;else{k=w.project(b,this.spatialReference);if(!k)return null;n=k.x;b=k.y}k=d}d=r.resolution*this.size[0];r=r.resolution*this.size[1];k||(k={id:null,level:0,row:0,col:0,extent:c.create()});k.level=a;k.row=Math.floor((this.origin.y-b)/r+.001);k.col=Math.floor((n-this.origin.x)/d+.001);this.updateTileInfo(k);return k};m.prototype.updateTileInfo=function(a){var b=this.lodAt(a.level);if(b){var r=b.resolution*this.size[0],
b=b.resolution*this.size[1];a.id=a.level+"/"+a.row+"/"+a.col;a.extent||(a.extent=c.create());a.extent[0]=this.origin.x+a.col*r;a.extent[1]=this.origin.y-(a.row+1)*b;a.extent[2]=a.extent[0]+r;a.extent[3]=a.extent[1]+b}};m.prototype.upsampleTile=function(a){var b=this._upsampleLevels[a.level];if(!b||-1===b.parentLevel)return!1;a.level=b.parentLevel;a.row=Math.floor(a.row/b.factor+.001);a.col=Math.floor(a.col/b.factor+.001);this.updateTileInfo(a);return!0};m.prototype.getTileBounds=function(a,b){var c=
this.lodAt(b.level).resolution,k=c*this.size[0],c=c*this.size[1];a[0]=this.origin.x+b.col*k;a[1]=this.origin.y-(b.row+1)*c;a[2]=a[0]+k;a[3]=a[1]+c;return a};m.prototype.lodAt=function(a){return this._levelToLOD&&this._levelToLOD[a]||null};m.prototype.clone=function(){return h.fromJSON(this.write({}))};m.prototype._initializeUpsampleLevels=function(){var a=this.lods;this._upsampleLevels=[];for(var b=null,c=0;c<a.length;c++){var k=a[c];this._upsampleLevels[k.level]={parentLevel:b?b.level:-1,factor:b?
b.resolution/k.resolution:0};b=k}};var h;a.__decorate([f.property({type:Number,json:{write:!0}})],m.prototype,"compressionQuality",void 0);a.__decorate([f.property({type:Number,json:{write:!0}})],m.prototype,"dpi",void 0);a.__decorate([f.property({type:String,json:{read:y.read,write:y.write,origins:{"web-scene":{read:!1,write:!1}}}})],m.prototype,"format",void 0);a.__decorate([f.property({readOnly:!0,dependsOn:["spatialReference","origin"]})],m.prototype,"isWrappable",null);a.__decorate([f.property({type:q.Point,
json:{write:!0}})],m.prototype,"origin",void 0);a.__decorate([f.reader("origin")],m.prototype,"readOrigin",null);a.__decorate([f.property({type:[t],value:null,json:{write:!0}})],m.prototype,"lods",null);a.__decorate([f.property({readOnly:!0})],m.prototype,"minScale",void 0);a.__decorate([f.property({readOnly:!0})],m.prototype,"maxScale",void 0);a.__decorate([f.property({readOnly:!0})],m.prototype,"scales",void 0);a.__decorate([f.property({cast:function(a){return Array.isArray(a)?a:"number"===typeof a?
[a,a]:[256,256]}})],m.prototype,"size",void 0);a.__decorate([f.reader("size",["rows","cols"])],m.prototype,"readSize",null);a.__decorate([f.writer("size",{cols:{type:d.Integer},rows:{type:d.Integer}})],m.prototype,"writeSize",null);a.__decorate([f.property({type:q.SpatialReference,json:{write:!0}})],m.prototype,"spatialReference",void 0);return m=h=a.__decorate([f.subclass("esri.layers.support.TileInfo")],m)}(h.JSONSupport)})},"esri/layers/support/LOD":function(){define("require exports tslib ../../core/JSONSupport ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType".split(" "),
function(z,u,a,q,e,h){return function(l){function f(a){a=l.call(this,a)||this;a.level=0;a.levelValue=null;a.resolution=0;a.scale=0;return a}a.__extends(f,l);d=f;f.prototype.clone=function(){return new d({level:this.level,levelValue:this.levelValue,resolution:this.resolution,scale:this.scale})};var d;a.__decorate([e.property({type:h.Integer,json:{write:!0}})],f.prototype,"level",void 0);a.__decorate([e.property({type:String,json:{write:!0}})],f.prototype,"levelValue",void 0);a.__decorate([e.property({type:Number,
json:{write:!0}})],f.prototype,"resolution",void 0);a.__decorate([e.property({type:Number,json:{write:!0}})],f.prototype,"scale",void 0);return f=d=a.__decorate([e.subclass("esri.layers.support.LOD")],f)}(q.JSONSupport)})},"esri/layers/support/TilemapCache":function(){define("require exports tslib ../../request ../../core/Accessor ../../core/Error ../../core/Handles ../../core/Logger ../../core/LRUCache ../../core/PooledArray ../../core/promiseUtils ../../core/scheduling ../../core/urlUtils ../../core/watchUtils ../../core/accessorSupport/decorators ./Tilemap".split(" "),
function(z,u,a,q,e,h,l,f,d,c,p,w,t,y,x,m){Object.defineProperty(u,"__esModule",{value:!0});var H=f.getLogger("esri.layers.support.TilemapCache");z=function(f){function b(a){a=f.call(this,a)||this;a._handles=new l;a._pendingTilemapRequests={};a._availableLevels={};a.levels=5;a.cacheByteSize=2097152;a.request=q;a._prefetchingEnabled=!0;return a}a.__extends(b,f);e=b;b.prototype.initialize=function(){var a=this;this._tilemapCache=new d(this.cacheByteSize);this._handles.add([this.watch(["layer.parsedUrl",
"layer.tileServers?"],function(){return a._initializeTilemapDefinition()}),y.init(this,"layer.tileInfo.lods",function(b){return a._initializeAvailableLevels(b)},!0)]);this._initializeTilemapDefinition()};b.prototype.destroy=function(){this._handles&&(this._handles.destroy(),this._handles=null)};b.prototype.castLevels=function(a){return 2>=a?(H.error("Minimum levels for Tilemap is 3, but got ",a),3):a};Object.defineProperty(b.prototype,"size",{get:function(){return 1<<this.levels},enumerable:!0,configurable:!0});
b.prototype.fetchTilemap=function(b,c,n,d){var k=this;if(!this._availableLevels[b])return p.reject(new h("tilemap-cache:level-unavailable","Level "+b+" is unavailable in the service"));var e=this._tmpTilemapDefinition;if(b=this._tilemapFromCache(b,c,n,e))return p.resolve(b);var f=d&&d.signal;d=a.__assign(a.__assign({},d),{signal:null});return p.create(function(a,b){p.onAbort(f,function(){return b(p.createAbortError())});var c=m.tilemapDefinitionId(e),n=k._pendingTilemapRequests[c];if(!n){var n=m.Tilemap.fromDefinition(e,
d).then(function(a){k._tilemapCache.put(c,a,a.byteSize);return a}),A=function(){return delete k._pendingTilemapRequests[c]};k._pendingTilemapRequests[c]=n;n.then(A,A)}n.then(a,b)})};b.prototype.getAvailability=function(a,b,c){return this._availableLevels[a]?(a=this._tilemapFromCache(a,b,c,this._tmpTilemapDefinition))?a.getAvailability(b,c):"unknown":"unavailable"};b.prototype.getAvailabilityUpsample=function(a,b,c,d){d.level=a;d.row=b;d.col=c;a=this.layer.tileInfo;for(a.updateTileInfo(d);;)if(b=this.getAvailability(d.level,
d.row,d.col),"unavailable"===b){if(!a.upsampleTile(d))return"unavailable"}else return b};b.prototype.fetchAvailability=function(a,b,c,d){return this._availableLevels[a]?this.fetchTilemap(a,b,c,d).catch(function(a){return a}).then(function(k){if(k instanceof m.Tilemap)return k=k.getAvailability(b,c),"unavailable"===k?p.reject(new h("tile-map:tile-unavailable","Tile is not available",{level:a,row:b,col:c})):k;if(p.isAbortError(k))throw k;return"unknown"}):p.reject(new h("tilemap-cache:level-unavailable",
"Level "+a+" is unavailable in the service"))};b.prototype.fetchAvailabilityUpsample=function(a,b,c,d,e){var k=this;d.level=a;d.row=b;d.col=c;var n=this.layer.tileInfo;n.updateTileInfo(d);var f=this.fetchAvailability(a,b,c,e).catch(function(a){if(p.isAbortError(a))throw a;if(n.upsampleTile(d))return k.fetchAvailabilityUpsample(d.level,d.row,d.col,d);throw a;});this._fetchAvailabilityUpsamplePrefetch(d.id,a,b,c,e,f);return f};b.prototype._fetchAvailabilityUpsamplePrefetch=function(b,c,d,f,m,r){return a.__awaiter(this,
void 0,void 0,function(){var k,n,A,B,h,l,F,D,y,x;return a.__generator(this,function(v){switch(v.label){case 0:if(!this._prefetchingEnabled)return[2];k="prefetch-"+b;if(this._handles.has(k))return[2];n=p.createAbortController();r.then(function(){return n.abort()},function(){return n.abort()});A=!1;B={remove:function(){A||(A=!0,n.abort())}};this._handles.add(B,k);v.label=1;case 1:return v.trys.push([1,3,,4]),[4,w.waitTicks(10,n.signal)];case 2:return v.sent(),[3,4];case 3:return v.sent(),[3,4];case 4:A||
(A=!0,this._handles.remove(k));if(p.isAborted(n))return[2];h={id:b,level:c,row:d,col:f};l=a.__assign(a.__assign({},m),{signal:n.signal});F=this.layer.tileInfo;D=function(a){var b=y.fetchAvailability(h.level,h.row,h.col,l);e._prefetches.push(b);a=function(){e._prefetches.removeUnordered(b)};b.then(a,a)};y=this;for(x=0;e._prefetches.length<e._maxPrefetch&&F.upsampleTile(h);++x)D(x);return[2]}})})};b.prototype._initializeTilemapDefinition=function(){if(this.layer.parsedUrl){var a=this.layer.parsedUrl,
b=a.query;this._tilemapCache.clear();this._tmpTilemapDefinition={service:{url:a.path,query:b?t.objectToQuery(b):null,tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}};b.prototype._tilemapFromCache=function(a,b,c,d){d.level=a;d.row=b-b%this.size;d.col=c-c%this.size;a=m.tilemapDefinitionId(d);return this._tilemapCache.get(a)};b.prototype._initializeAvailableLevels=function(a){var b=this;this._availableLevels={};a&&a.forEach(function(a){return b._availableLevels[a.level]=
!0})};Object.defineProperty(b.prototype,"test",{get:function(){var a=this;return{get prefetchingEnabled(){return a._prefetchingEnabled},set prefetchingEnabled(b){a._prefetchingEnabled=b},hasTilemap:function(b,c,d){return!!a._tilemapFromCache(b,c,d,a._tmpTilemapDefinition)}}},enumerable:!0,configurable:!0});var e;b._maxPrefetch=4;b._prefetches=new c({initialSize:e._maxPrefetch});a.__decorate([x.property({constructOnly:!0,type:Number})],b.prototype,"levels",void 0);a.__decorate([x.cast("levels")],b.prototype,
"castLevels",null);a.__decorate([x.property({readOnly:!0,dependsOn:["levels"],type:Number})],b.prototype,"size",null);a.__decorate([x.property({constructOnly:!0,type:Number})],b.prototype,"cacheByteSize",void 0);a.__decorate([x.property({constructOnly:!0})],b.prototype,"layer",void 0);a.__decorate([x.property({constructOnly:!0})],b.prototype,"request",void 0);return b=e=a.__decorate([x.subclass("esri.layers.support.TilemapCache")],b)}(e);u.TilemapCache=z})},"esri/layers/support/Tilemap":function(){define("require exports tslib ../../request ../../core/arrayUtils ../../core/Error ../../core/lang".split(" "),
function(z,u,a,q,e,h,l){function f(a){var c;"vector-tile"===a.service.type?c=a.service.url+"/tilemap/"+a.level+"/"+a.row+"/"+a.col+"/"+a.width+"/"+a.height:(c=a.service.tileServers,c=(c&&c.length?c[a.row%c.length]:a.service.url)+"/tilemap/"+a.level+"/"+a.row+"/"+a.col+"/"+a.width+"/"+a.height);(a=a.service.query)&&(c=c+"?"+a);return c}Object.defineProperty(u,"__esModule",{value:!0});z=function(){function d(){this.location={left:0,top:0,width:0,height:0};this._allAvailability="unknown";this.byteSize=
40}d.prototype.getAvailability=function(a,d){if("unknown"!==this._allAvailability)return this._allAvailability;a=(a-this.location.top)*this.location.width+(d-this.location.left);d=a>>3;var c=this._tileAvailabilityBitSet;return 0>d||d>c.length?"unknown":c[d]&1<<a%8?"available":"unavailable"};d.prototype._updateFromData=function(a){for(var c=!0,d=!0,e=new Uint8Array(Math.ceil(this.location.width*this.location.height/8)),f=0,h=0;h<a.length;h++){var m=h%8;a[h]?(d=!1,e[f]|=1<<m):c=!1;7===m&&++f}d?this._allAvailability=
"unavailable":c?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=e,this.byteSize+=e.length)};d.fromDefinition=function(c,l){var p=c.service.request||q,t=c.row,y=c.col,x=c.width,m=c.height,u={query:{f:"json"}};l=l?a.__assign(a.__assign({},u),l):u;return p(f(c),l).then(function(a){return a.data}).catch(function(a){if(a&&a.details&&422===a.details.httpStatus)return{location:{top:t,left:y,width:x,height:m},valid:!0,data:e.constant(x*m,0)};throw a;}).then(function(a){if(a.location&&
(a.location.top!==t||a.location.left!==y||a.location.width!==x||a.location.height!==m))throw new h("tilemap:location-mismatch","Tilemap response for different location than requested",{response:a,definition:{top:t,left:y,width:x,height:m}});return d.fromJSON(a)})};d.fromJSON=function(a){d.validateJSON(a);var c=new d;c.location=Object.freeze(l.clone(a.location));c._updateFromData(a.data);return Object.freeze(c)};d.validateJSON=function(a){if(!a||!a.location)throw new h("tilemap:missing-location","Location missing from tilemap response");
if(!1===a.valid)throw new h("tilemap:invalid","Tilemap response was marked as invalid");if(!a.data)throw new h("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(a.data))throw new h("tilemap:data-mismatch","Data must be an array of numbers");if(a.data.length!==a.location.width*a.location.height)throw new h("tilemap:data-mismatch","Number of data items does not match width/height of tilemap");};return d}();u.Tilemap=z;u.tilemapDefinitionId=function(a){return a.level+"/"+
a.row+"/"+a.col+"/"+a.width+"/"+a.height};u.tilemapDefinitionUrl=f;u.default=z})},"esri/layers/mixins/ArcGISMapService":function(){define("require exports tslib ../../request ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../geometry/Extent ../../geometry/SpatialReference ../support/commonProperties".split(" "),function(z,u,a,q,e,h,l,f,d,c){Object.defineProperty(u,"__esModule",{value:!0});u.ArcGISMapService=function(p){return function(p){function t(){var a=null!==
p&&p.apply(this,arguments)||this;a.capabilities=void 0;a.copyright=null;a.fullExtent=null;a.legendEnabled=!0;a.spatialReference=null;a.version=null;return a}a.__extends(t,p);t.prototype.readCapabilities=function(a,c){var d=c.capabilities&&c.capabilities.split(",").map(function(a){return a.toLowerCase().trim()});if(!d)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};a=this.type;var e=-1!==d.indexOf("query"),f=-1!==
d.indexOf("map"),b=!!c.exportTilesAllowed,d=-1!==d.indexOf("tilemap"),h="tile"!==a&&!!c.supportsDynamicLayers,k="tile"!==a&&(!c.tileInfo||h),l="tile"!==a&&(!c.tileInfo||h);return{operations:{supportsQuery:e,supportsExportMap:f,supportsExportTiles:b,supportsTileMap:d},exportMap:f?{supportsSublayersChanges:"tile"!==a,supportsDynamicLayers:h,supportsSublayerVisibility:k,supportsSublayerDefinitionExpression:l}:null,exportTiles:b?{maxExportTilesCount:+c.maxExportTilesCount}:null}};t.prototype.readVersion=
function(a,c){(a=c.currentVersion)||(a=c.hasOwnProperty("capabilities")||c.hasOwnProperty("tables")?10:c.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3);return a};t.prototype.fetchSublayerInfo=function(c,d){return a.__awaiter(this,void 0,void 0,function(){return a.__generator(this,function(a){switch(a.label){case 0:return[4,this.fetchAllLayersAndTables(d)];case 1:return a.sent(),[2,this._allLayersAndTablesMap.get(c)]}})})};t.prototype.fetchAllLayersAndTables=function(c){return a.__awaiter(this,
void 0,void 0,function(){var d,f=this;return a.__generator(this,function(a){switch(a.label){case 0:return[4,this.load(c)];case 1:return a.sent(),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=q(h.urlToObject(this.url).path+"/layers",{responseType:"json",query:{f:"json"}}).then(function(a){f._allLayersAndTablesMap=new Map;for(var b=0,c=a.data.layers;b<c.length;b++){var d=c[b];f._allLayersAndTablesMap.set(d.id,d)}return{result:a.data}},function(a){return{error:a}})),[4,this._allLayersAndTablesPromise];
case 2:d=a.sent();e.throwIfAborted(c);if("result"in d)return[2,d.result];throw d.error;}})})};a.__decorate([l.property({readOnly:!0})],t.prototype,"capabilities",void 0);a.__decorate([l.reader("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null);a.__decorate([l.property({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0);a.__decorate([l.property({type:f})],t.prototype,"fullExtent",
void 0);a.__decorate([l.property({json:{origins:{service:{read:!1},"portal-item":{read:!1}}}})],t.prototype,"id",void 0);a.__decorate([l.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0);a.__decorate([l.property(c.popupEnabled)],t.prototype,"popupEnabled",void 0);a.__decorate([l.property({type:d})],t.prototype,"spatialReference",void 0);a.__decorate([l.property()],t.prototype,"version",
void 0);a.__decorate([l.reader("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null);return t=a.__decorate([l.subclass("esri.layers.mixins.ArcGISMapService")],t)}(p)}})},"esri/layers/mixins/SublayersOwner":function(){define("require exports tslib ../../core/Collection ../../core/CollectionFlattener ../../core/Error ../../core/Logger ../../core/accessorSupport/decorators ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ../support/Sublayer ../support/sublayerUtils".split(" "),
function(z,u,a,q,e,h,l,f,d,c,p,w){function t(a,c){var b=[],d={};if(!a)return b;a.forEach(function(a){var e=new p;e.read(a,c);d[e.id]=e;null!=a.parentLayerId&&-1!==a.parentLayerId?(a=d[a.parentLayerId],a.sublayers||(a.sublayers=[]),a.sublayers.unshift(e)):b.unshift(e)});return b}function y(a,c){a&&a.forEach(function(a){c(a);a.sublayers&&a.sublayers.length&&y(a.sublayers,c)})}Object.defineProperty(u,"__esModule",{value:!0});var x=l.getLogger("esri.layers.TileLayer"),m=q.ofType(p);u.forEachSublayer=
y;u.SublayersOwner=function(l){return function(l){function b(){for(var a,b=[],c=0;c<arguments.length;c++)b[c]=arguments[c];var d=l.apply(this,b)||this;d.allSublayers=new e({root:d,rootCollectionNames:["sublayers"],getChildrenFunction:function(a){return a.sublayers}});d.sublayersSourceJSON=(a={},a[2]={},a[3]={},a[4]={},a[5]={},a);d.watch("sublayers",function(a,b){return d._handleSublayersChange(a,b)},!0);return d}a.__extends(b,l);b.prototype.readSublayers=function(a,b){if(b&&a){var e=this.sublayersSourceJSON,
f=d.nameToId(b.origin);2>f||(e[f]={context:b,visibleLayers:a.visibleLayers||e[f].visibleLayers,layers:a.layers||e[f].layers},2<f||(this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers),b=this.createSublayersForOrigin("web-document"),a=b.sublayers,b=b.origin,e=c.getProperties(this),e.setDefaultOrigin(b),this._set("sublayers",new m(a)),e.setDefaultOrigin("user")))}};b.prototype.findSublayerById=function(a){return this.allSublayers.find(function(b){return b.id===a})};b.prototype.createServiceSublayers=
function(){return this.createSublayersForOrigin("service").sublayers};b.prototype.createSublayersForOrigin=function(a){var b="web-document"===a?d.nameToId("web-map"):d.nameToId(a),c=2;a=this.sublayersSourceJSON[2].layers;for(var e=this.sublayersSourceJSON[2].context,f=null,h=0,l=[3,4,5].filter(function(a){return a<=b});h<l.length;h++){var p=l[h],v=this.sublayersSourceJSON[p];w.isSublayerOverhaul(v.layers)&&(c=p,a=v.layers,e=v.context,v.visibleLayers&&(f={visibleLayers:v.visibleLayers,context:v.context}))}for(var A=
null,h=0,l=[3,4,5].filter(function(a){return a>c&&a<=b});h<l.length;h++){var B=this.sublayersSourceJSON[l[h]],p=B.layers,v=B.visibleLayers,B=B.context;p&&(A={layers:p,context:B});v&&(f={visibleLayers:v,context:B})}a=t(a,e);var q=new Map,r=new Set;if(A)for(e=0,h=A.layers;e<h.length;e++)l=h[e],q.set(l.id,l);if(f)for(e=0,h=f.visibleLayers;e<h.length;e++)r.add(h[e]);y(a,function(a){A&&a.read(q.get(a.id),A.context);f&&a.read({defaultVisibility:r.has(a.id)},f.context)});return{origin:d.idToName(c),sublayers:new m({items:a})}};
b.prototype.read=function(a,b){l.prototype.read.call(this,a,b);this.readSublayers(a,b)};b.prototype._handleSublayersChange=function(a,b){var c=this;b&&(b.forEach(function(a){a.parent=null;a.layer=null}),this.handles.remove("sublayers-owner"));a&&(a.forEach(function(a){a.parent=c;a.layer=c}),this.handles.add([a.on("after-add",function(a){a=a.item;a.parent=c;a.layer=c}),a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=null})],"sublayers-owner"),"tile"===this.type&&this.handles.add(a.on("before-changes",
function(a){x.error(new h("tilelayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{layer:c}));a.preventDefault()}),"sublayers-owner"))};a.__decorate([f.property({readOnly:!0})],b.prototype,"allSublayers",void 0);a.__decorate([f.property({readOnly:!0,type:q.ofType(p)})],b.prototype,"serviceSublayers",void 0);a.__decorate([f.property({value:null,type:m,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],b.prototype,"sublayers",void 0);a.__decorate([f.property({readOnly:!0})],
b.prototype,"sublayersSourceJSON",void 0);return b=a.__decorate([f.subclass("esri.layers.mixins.SublayersOwner")],b)}(l)}})},"esri/layers/support/Sublayer":function(){define("require exports tslib ../../geometry ../../PopupTemplate ../../renderers ../../request ../../symbols ../../core/Collection ../../core/Error ../../core/HandleOwner ../../core/Identifiable ../../core/lang ../../core/Loadable ../../core/Logger ../../core/MultiOriginJSONSupport ../../core/promiseUtils ../../core/urlUtils ../../core/accessorSupport/decorators ../../core/accessorSupport/ensureType ../../core/accessorSupport/PropertyOrigin ../../core/accessorSupport/utils ./FeatureType ./Field ./FieldsIndex ./fieldUtils ./LabelClass ./layerSourceUtils ../../renderers/support/jsonUtils ../../support/popupUtils ../../tasks/support/Query @dojo/framework/shim/Promise".split(" "),
function(z,u,a,q,e,h,l,f,d,c,p,w,t,y,x,m,H,r,b,F,k,D,n,L,M,J,Q,v,A,B,P){function N(a){return a&&"esriSMS"===a.type}function C(a,b,c){return{ignoreOrigin:!0,enabled:c&&c.writeSublayerStructure||!1}}function I(a,b,c){return{ignoreOrigin:!0,enabled:c?c.writeSublayerStructure||this.originIdOf(b)>=k.nameToId(c.origin):!1}}var K=x.getLogger("esri.layers.support.Sublayer"),R=0,G=new Set;G.add("layer");G.add("parent");G.add("loaded");G.add("loadStatus");G.add("loadError");G.add("loadWarnings");return function(k){function g(a){a=
k.call(this,a)||this;a.capabilities=void 0;a.fields=null;a.fullExtent=null;a.globalIdField=null;a.legendEnabled=!0;a.objectIdField=null;a.popupEnabled=!0;a.popupTemplate=null;a.sourceJSON=null;a.title=null;a.typeIdField=null;a.types=null;return a}a.__extends(g,k);m=g;g.prototype.load=function(b){return a.__awaiter(this,void 0,void 0,function(){var E=this;return a.__generator(this,function(d){this.addResolvingPromise(function(){return a.__awaiter(E,void 0,void 0,function(){var E,d,O;return a.__generator(this,
function(e){switch(e.label){case 0:if(!this.layer&&!this.url)throw new c("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});E=null;return!this.layer||2<this.originIdOf("url")||v.isDataLayerSource(this.source)?[4,l(this.url,a.__assign({responseType:"json",query:{f:"json"}},b))]:[3,2];case 1:return d=e.sent(),E=d.data,[3,4];case 2:return O=this.id,this.source&&null!=this.source.mapLayerId&&(O=this.source.mapLayerId),[4,this.layer.fetchSublayerInfo(O,b)];
case 3:E=e.sent(),e.label=4;case 4:return E&&(this.sourceJSON=E,this.read({layerDefinition:E},{origin:"service"})),[2]}})})}());return[2,this]})})};g.prototype.readCapabilities=function(a,b){b=b.layerDefinition||b;a=(a=b.capabilities||a)?a.toLowerCase().split(",").map(function(a){return a.trim()}):[];return{exportMap:{supportsModification:!!b.canModifyLayer},operations:{supportsQuery:-1!==a.indexOf("query")}}};Object.defineProperty(g.prototype,"definitionExpression",{set:function(a){this._setAndNotifyLayer("definitionExpression",
a)},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"fieldsIndex",{get:function(){return new M(this.fields||[])},enumerable:!0,configurable:!0});g.prototype.readGlobalIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.globalIdField)return b.globalIdField;if(b.fields)for(a=0,b=b.fields;a<b.length;a++){var c=b[a];if("esriFieldTypeGlobalID"===c.type)return c.name}};Object.defineProperty(g.prototype,"id",{get:function(){var a=this._get("id");return null==a?R++:a},set:function(a){this._get("id")!==
a&&(!1===this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"):this._set("id",a))},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"labelingInfo",{set:function(a){this._setAndNotifyLayer("labelingInfo",a)},enumerable:!0,configurable:!0});g.prototype.writeLabelingInfo=function(a,b,c,d){a&&a.length&&(b.layerDefinition={drawingInfo:{labelingInfo:a.map(function(a){return a.write({},
d)})}})};Object.defineProperty(g.prototype,"labelsVisible",{set:function(a){this._setAndNotifyLayer("labelsVisible",a)},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"layer",{set:function(a){this._set("layer",a);this.sublayers&&this.sublayers.forEach(function(b){return b.layer=a})},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"listMode",{set:function(a){this._set("listMode",a)},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"minScale",{set:function(a){this._setAndNotifyLayer("minScale",
a)},enumerable:!0,configurable:!0});g.prototype.readMinScale=function(a,b){return b.minScale||b.layerDefinition&&b.layerDefinition.minScale||0};Object.defineProperty(g.prototype,"maxScale",{set:function(a){this._setAndNotifyLayer("maxScale",a)},enumerable:!0,configurable:!0});g.prototype.readMaxScale=function(a,b){return b.maxScale||b.layerDefinition&&b.layerDefinition.maxScale||0};g.prototype.readObjectIdFieldFromService=function(a,b){b=b.layerDefinition||b;if(b.objectIdField)return b.objectIdField;
if(b.fields)for(a=0,b=b.fields;a<b.length;a++){var c=b[a];if("esriFieldTypeOID"===c.type)return c.name}};Object.defineProperty(g.prototype,"opacity",{set:function(a){this._setAndNotifyLayer("opacity",a)},enumerable:!0,configurable:!0});g.prototype.readOpacity=function(a,b){a=b.layerDefinition;return 1-.01*(null!=a.transparency?a.transparency:a.drawingInfo.transparency)};g.prototype.writeOpacity=function(a,b,c,d){b.layerDefinition={drawingInfo:{transparency:100-100*a}}};g.prototype.writeParent=function(a,
b){b.parentLayerId=this.parent&&this.parent!==this.layer?this.parent.id:-1};Object.defineProperty(g.prototype,"defaultPopupTemplate",{get:function(){return this.createPopupTemplate()},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"renderer",{set:function(a){if(a)for(var b=0,c=a.getSymbols();b<c.length;b++)if(f.isSymbol3D(c[b])){K.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",a)},enumerable:!0,configurable:!0});g.prototype.readRenderer=
function(a,b,c){if(a=b.layerDefinition.drawingInfo.renderer||void 0)(a=A.read(a,b,c)||void 0)||K.error("Failed to create renderer",{rendererDefinition:b.drawingInfo.renderer,layer:this,context:c});return a};g.prototype.writeRenderer=function(a,b,c,d){b.layerDefinition={drawingInfo:{renderer:a.write({},d)}}};g.prototype.writeWebSceneRenderer=function(a,b,c,d){b.layerDefinition={drawingInfo:{renderer:a.write({},d)}}};Object.defineProperty(g.prototype,"source",{get:function(){return this._get("source")||
{mapLayerId:this.id,type:v.MAPLAYER}},set:function(a){this._setAndNotifyLayer("source",a)},enumerable:!0,configurable:!0});g.prototype.writeSource=function(a,b){b.layerDefinition={source:v.sourceToJSON(a)}};Object.defineProperty(g.prototype,"sublayers",{set:function(a){this._handleSublayersChange(a,this._get("sublayers"));this._set("sublayers",a)},enumerable:!0,configurable:!0});g.prototype.castSublayers=function(a){return F.default(d.ofType(m),a)};g.prototype.writeSublayers=function(a,b,c){this.get("sublayers.length")&&
(b[c]=this.sublayers.map(function(a){return a.id}).toArray().reverse())};g.prototype.readTypeIdField=function(a,b){b=b.layerDefinition||b;if(a=b.typeIdField)if(b=J.getField(b.fields,a))return b.name;return null};Object.defineProperty(g.prototype,"url",{get:function(){var a,b,c=null!==(b=null===(a=this.layer)||void 0===a?void 0:a.parsedUrl)&&void 0!==b?b:this._lastParsedUrl;a=this.source;if(!c)return null;this._lastParsedUrl=c;if(v.isMapLayerSource(a))return c.path+"/"+a.mapLayerId;a={layer:JSON.stringify({source:v.sourceToJSON(this.source)})};
return c.path+"/dynamicLayer?"+r.objectToQuery(a)},set:function(a){a?this._override("url",a):this._clearOverride("url")},enumerable:!0,configurable:!0});Object.defineProperty(g.prototype,"visible",{set:function(a){this._setAndNotifyLayer("visible",a)},enumerable:!0,configurable:!0});g.prototype.writeVisible=function(a,b,c,d){b[c]=this.getAtOrigin("defaultVisibility","service")||a};g.prototype.clone=function(){var a=D.getProperties(this).store,b=new m;D.getProperties(b).store=a.clone(G);this.url;b._lastParsedUrl=
this._lastParsedUrl;return b};g.prototype.createPopupTemplate=function(a){return B.createPopupTemplate(this,a)};g.prototype.createQuery=function(){return new P({returnGeometry:!0,where:this.definitionExpression||"1\x3d1"})};g.prototype.createFeatureLayer=function(){return a.__awaiter(this,void 0,void 0,function(){var b,c,d,e,f;return a.__generator(this,function(a){switch(a.label){case 0:if(this.hasOwnProperty("sublayers"))return[2,null];b=this.layer&&this.layer.parsedUrl;c=this.source;d=null;b&&(d=
v.isMapLayerSource(c)?b.path+"/"+c.mapLayerId:b.path+"/dynamicLayer");return[4,new Promise(function(a,b){z(["../FeatureLayer"],a,b)})];case 1:return e=a.sent(),f=new e({url:d}),null!=this.layer.refreshInterval&&(f.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(f.definitionExpression=this.definitionExpression),2<this.originIdOf("labelingInfo")&&(f.labelingInfo=t.clone(this.labelingInfo)),0<this.originIdOf("labelsVisible")&&(f.labelsVisible=this.labelsVisible),0<this.originIdOf("legendEnabled")&&
(f.legendEnabled=this.legendEnabled),0<this.originIdOf("visible")&&(f.visible=this.visible),0<this.originIdOf("minScale")&&(f.minScale=this.minScale),0<this.originIdOf("maxScale")&&(f.maxScale=this.maxScale),0<this.originIdOf("opacity")&&(f.opacity=this.opacity),0<this.originIdOf("popupTemplate")&&(f.popupTemplate=t.clone(this.popupTemplate)),2<this.originIdOf("renderer")&&(f.renderer=t.clone(this.renderer)),v.isDataLayerSource(this.source)&&(f.dynamicDataSource=t.clone(this.source)),0<this.originIdOf("title")&&
(f.title=this.title),[2,f]}})})};g.prototype.getFeatureType=function(a){var b=this.typeIdField;if(!b||!a)return null;var c=a.attributes?a.attributes[b]:void 0;if(null==c)return null;var d=null;this.types.some(function(a){var b=a.id;if(null==b)return!1;b.toString()===c.toString()&&(d=a);return!!d});return d};g.prototype.getFieldDomain=function(a,b){return(b=this.getFeatureType(b&&b.feature))&&(b=b.domains&&b.domains[a])&&"inherited"!==b.type?b:this._getLayerDomain(a)};g.prototype.queryFeatures=function(a,
b){var d=this;void 0===a&&(a=this.createQuery());return this.load().then(function(){if(!d.get("capabilities.operations.supportsQuery"))throw new c("Sublayer.queryFeatures","this layer doesn't support queries.");return H.all([new Promise(function(a,b){z(["../../tasks/operations/query"],a,b)}),new Promise(function(a,b){z(["../../tasks/support/FeatureSet"],a,b)})])}).then(function(c){var e=c[0].executeQuery,f=c[1];return e(d.url,P.from(a),d.layer?d.layer.spatialReference:null,b).then(function(a){return f.fromJSON(a.data)})}).then(function(a){a&&
a.features&&a.features.forEach(function(a){a.sourceLayer=d});return a})};g.prototype.toExportImageJSON=function(){var a=this,b={id:this.id,source:v.sourceToJSON(this.source)};this.definitionExpression&&(b.definitionExpression=this.definitionExpression);var c=["renderer","labelingInfo","opacity","labelsVisible"].reduce(function(b,c){b[c]=a.originIdOf(c);return b},{});if(Object.keys(c).some(function(a){return 2<=c[a]})){var d=b.drawingInfo={};2<=c.renderer&&(d.renderer=this.renderer?this.renderer.toJSON():
null);2<=c.labelsVisible&&(d.showLabels=this.labelsVisible);this.labelsVisible&&2<=c.labelingInfo&&(d.labelingInfo=this.labelingInfo?this.labelingInfo.map(function(a){return a.write({},{origin:"service"})}):null,d.showLabels=!0);2<=c.opacity&&(d.transparency=100-100*this.opacity);this._assignDefaultSymbolColors(d.renderer)}return b};g.prototype._assignDefaultSymbolColors=function(a){this._forEachSimpleMarkerSymbols(a,function(a){a.color||"esriSMSX"!==a.style&&"esriSMSCross"!==a.style||(a.color=a.outline&&
a.outline.color?a.outline.color:[0,0,0,0])})};g.prototype._forEachSimpleMarkerSymbols=function(a,b){if(a){var c=0,d="uniqueValueInfos"in a?a.uniqueValueInfos:"classBreakInfos"in a?a.classBreakInfos:[];for(;c<d.length;c++){var e=d[c];N(e.symbol)&&b(e.symbol)}"symbol"in a&&N(a.symbol)&&b(a.symbol);"defaultSymbol"in a&&N(a.defaultSymbol)&&b(a.defaultSymbol)}};g.prototype._setAndNotifyLayer=function(a,b){var c=this.layer,d=this._get(a),e,f;switch(a){case "definitionExpression":e="supportsSublayerDefinitionExpression";
case "minScale":case "maxScale":case "visible":e="supportsSublayerVisibility";break;case "labelingInfo":case "labelsVisible":case "opacity":case "renderer":case "source":e="supportsDynamicLayers",f="supportsModification"}var g=D.getProperties(this).getDefaultOrigin();if("service"!==g){if(e&&!1===this.get("layer.capabilities.exportMap."+e)){this._logLockedError(a,"capability not available 'layer.capabilities.exportMap."+e+"'");return}if(f&&!1===this.get("capabilities.exportMap."+f)){this._logLockedError(a,
"capability not available 'capabilities.exportMap."+f+"'");return}}"source"===a&&"not-loaded"!==this.loadStatus?this._logLockedError(a,"'source' can't be changed after calling sublayer.load()"):(this._set(a,b),"service"!==g&&d!==b&&c&&c.emit&&c.emit("sublayer-update",{propertyName:a}))};g.prototype._handleSublayersChange=function(a,b){var d=this;b&&(b.forEach(function(a){a.parent=null;a.layer=null}),this.handles.removeAll());a&&(a.forEach(function(a){a.parent=d;a.layer=d.layer}),this.handles.add([a.on("after-add",
function(a){a=a.item;a.parent=d;a.layer=d.layer}),a.on("after-remove",function(a){a=a.item;a.parent=null;a.layer=null}),a.on("before-changes",function(a){var b=d.get("layer.capabilities.exportMap.supportsSublayersChanges");null==b||b||(K.error(new c("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:d,layer:d.layer})),a.preventDefault())})]))};g.prototype._logLockedError=function(a,b){K.error(new c("sublayer:locked","Property '"+a+
"' can't be changed on Sublayer from the layer '"+this.layer.id+"'",{reason:b,sublayer:this,layer:this.layer}))};g.prototype._getLayerDomain=function(a){return(a=this.fieldsIndex.get(a))?a.domain:null};var m;a.__decorate([b.property({readOnly:!0})],g.prototype,"capabilities",void 0);a.__decorate([b.reader("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],g.prototype,"readCapabilities",null);a.__decorate([b.property({type:String,value:null,json:{read:{source:"layerDefinition.definitionExpression"},
write:{target:"layerDefinition.definitionExpression",overridePolicy:I}}})],g.prototype,"definitionExpression",null);a.__decorate([b.property({type:[L],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],g.prototype,"fields",void 0);a.__decorate([b.property({readOnly:!0,dependsOn:["fields"]})],g.prototype,"fieldsIndex",null);a.__decorate([b.property({type:q.Extent,json:{read:{source:"layerDefinition.extent"}}})],g.prototype,"fullExtent",void 0);a.__decorate([b.property({type:String})],
g.prototype,"globalIdField",void 0);a.__decorate([b.reader("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],g.prototype,"readGlobalIdFieldFromService",null);a.__decorate([b.property({type:Number,json:{write:{ignoreOrigin:!0}}})],g.prototype,"id",null);a.__decorate([b.property({value:null,type:[Q],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:C}}})],g.prototype,"labelingInfo",
null);a.__decorate([b.writer("labelingInfo")],g.prototype,"writeLabelingInfo",null);a.__decorate([b.property({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:C}}})],g.prototype,"labelsVisible",null);a.__decorate([b.property({value:null})],g.prototype,"layer",null);a.__decorate([b.property({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",
overridePolicy:I}}})],g.prototype,"legendEnabled",void 0);a.__decorate([b.property({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],g.prototype,"listMode",null);a.__decorate([b.property({type:Number,value:0,json:{write:{enabled:!1,overridePolicy:C}}})],g.prototype,"minScale",null);a.__decorate([b.reader("minScale",["minScale","layerDefinition.minScale"])],g.prototype,"readMinScale",null);a.__decorate([b.property({type:Number,value:0,
json:{write:{enabled:!1,overridePolicy:C}}})],g.prototype,"maxScale",null);a.__decorate([b.reader("maxScale",["maxScale","layerDefinition.maxScale"])],g.prototype,"readMaxScale",null);a.__decorate([b.property({type:String})],g.prototype,"objectIdField",void 0);a.__decorate([b.reader("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],g.prototype,"readObjectIdFieldFromService",null);a.__decorate([b.property({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",
overridePolicy:C}}})],g.prototype,"opacity",null);a.__decorate([b.reader("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],g.prototype,"readOpacity",null);a.__decorate([b.writer("opacity")],g.prototype,"writeOpacity",null);a.__decorate([b.property({json:{type:Number,write:{target:"parentLayerId",allowNull:!0,overridePolicy:C}}})],g.prototype,"parent",void 0);a.__decorate([b.writer("parent")],g.prototype,"writeParent",null);a.__decorate([b.property({type:Boolean,
value:!0,json:{read:{source:"disablePopup",reader:function(a,b){return!b.disablePopup}},write:{target:"disablePopup",overridePolicy:I,writer:function(a,b,c){b[c]=!a}}}})],g.prototype,"popupEnabled",void 0);a.__decorate([b.property({type:e,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:I}}})],g.prototype,"popupTemplate",void 0);a.__decorate([b.property({readOnly:!0,dependsOn:["fields","title"]})],g.prototype,"defaultPopupTemplate",null);a.__decorate([b.property({types:h.rendererTypes,
value:null,json:{write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:C}}})],g.prototype,"renderer",null);a.__decorate([b.reader("renderer",["layerDefinition.drawingInfo.renderer"])],g.prototype,"readRenderer",null);a.__decorate([b.writer("renderer")],g.prototype,"writeRenderer",null);a.__decorate([b.writer("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:h.webSceneRendererTypes}})],g.prototype,"writeWebSceneRenderer",null);a.__decorate([b.property({cast:v.castSource,
json:{read:{source:"layerDefinition.source",reader:v.sourceFromJSON},write:{target:"layerDefinition.source",overridePolicy:C}}})],g.prototype,"source",null);a.__decorate([b.writer("source")],g.prototype,"writeSource",null);a.__decorate([b.property()],g.prototype,"sourceJSON",void 0);a.__decorate([b.property({value:null,json:{type:[F.Integer],write:{target:"subLayerIds",allowNull:!0,overridePolicy:C}}})],g.prototype,"sublayers",null);a.__decorate([b.cast("sublayers")],g.prototype,"castSublayers",null);
a.__decorate([b.writer("sublayers")],g.prototype,"writeSublayers",null);a.__decorate([b.property({type:String,json:{read:{source:"name"},write:{target:"name",allowNull:!0,overridePolicy:I}}})],g.prototype,"title",void 0);a.__decorate([b.property({type:String})],g.prototype,"typeIdField",void 0);a.__decorate([b.reader("typeIdField",["layerDefinition.typeIdField"])],g.prototype,"readTypeIdField",null);a.__decorate([b.property({type:[n],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],
g.prototype,"types",void 0);a.__decorate([b.property({type:String,dependsOn:["layer","source"],json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:function(){return{enabled:this._isOverridden("url")}}}}})],g.prototype,"url",null);a.__decorate([b.property({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:C}}})],g.prototype,"visible",null);a.__decorate([b.writer("visible")],g.prototype,"writeVisible",null);return g=m=a.__decorate([b.subclass("esri.layers.support.Sublayer")],
g)}(p.HandleOwnerMixin(m.MultiOriginJSONMixin(w.IdentifiableMixin(y))))})},"esri/layers/support/sublayerUtils":function(){define(["require","exports","./layerSourceUtils"],function(z,u,a){function q(a,h){if(!a||!a.length)return!0;h=h.slice().reverse().flatten(function(a){return(a=a.sublayers)&&a.toArray().reverse()}).map(function(a){return a.id}).toArray();if(a.length>h.length)return!1;for(var e=0,f=h.length,d=0;d<a.length;d++){for(var c=a[d].id;e<f&&h[e]!==c;)e++;if(e>=f)return!1}return!0}Object.defineProperty(u,
"__esModule",{value:!0});u.shouldWriteSublayerStructure=function(a,h,l){return h.flatten(function(a){return a.sublayers}).length!==a.length||a.some(function(a){return a.originIdOf("minScale")>l||a.originIdOf("maxScale")>l||a.originIdOf("renderer")>l||a.originIdOf("labelingInfo")>l||a.originIdOf("opacity")>l||a.originIdOf("labelsVisible")>l||a.originIdOf("source")>l})?!0:!q(a,h)};u.isExportDynamic=function(e,h,l){return e.some(function(e){var d=e.source;return!(!d||d.type===a.MAPLAYER&&d.mapLayerId===
e.id&&(!d.gdbVersion||d.gdbVersion===l.gdbVersion))||2<e.originIdOf("renderer")||2<e.originIdOf("labelingInfo")||2<e.originIdOf("opacity")||2<e.originIdOf("labelsVisible")})?!0:!q(e,h)};u.isSublayerOverhaul=function(a){return!!a&&a.some(function(a){return null!=a.minScale||a.layerDefinition&&null!=a.layerDefinition.minScale})}})},"*noref":1}});
define("require exports tslib ../geometry ../request ../core/Error ../core/HandleOwner ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators ./Layer ./mixins/ArcGISCachedService ./mixins/ArcGISMapService ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/SublayersOwner ./support/arcgisLayerUrl ./support/arcgisLayerUrl ./support/commonProperties ./support/Sublayer".split(" "),function(z,
u,a,q,e,h,l,f,d,c,p,w,t,y,x,m,H,r,b,F,k,D,n,L,M){var J="Canvas/World_Dark_Gray_Base Canvas/World_Dark_Gray_Reference Canvas/World_Light_Gray_Base Canvas/World_Light_Gray_Reference Elevation/World_Hillshade Ocean/World_Ocean_Base Ocean/World_Ocean_Reference Ocean_Basemap Reference/World_Boundaries_and_Places Reference/World_Boundaries_and_Places_Alternate Reference/World_Transportation World_Imagery World_Street_Map World_Topo_Map".split(" ");return function(b){function d(){for(var a=[],c=0;c<arguments.length;c++)a[c]=
arguments[c];a=b.apply(this,a)||this;a.listMode="show";a.isReference=null;a.operationalLayerType="ArcGISTiledMapServiceLayer";a.resampling=!0;a.sourceJSON=null;a.spatialReference=null;a.path=null;a.sublayers=null;a.type="tile";a.url=null;return a}a.__extends(d,b);d.prototype.normalizeCtorArgs=function(b,c){return"string"===typeof b?a.__assign({url:b},c):b};d.prototype.load=function(a){var b=this,d=f.isSome(a)?a.signal:null;this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},
a).then(function(){return b._fetchService(d)},function(){return b._fetchService(d)}));return c.resolve(this)};Object.defineProperty(d.prototype,"attributionDataUrl",{get:function(){return this._getDefaultAttribution(this._getMapName(this.parsedUrl.path.toLowerCase()))},enumerable:!0,configurable:!0});d.prototype.readSpatialReference=function(a,b){return(a=a||b.tileInfo&&b.tileInfo.spatialReference)&&q.SpatialReference.fromJSON(a)};d.prototype.writeSublayers=function(b,c,d,e){if(this.loaded&&b){b=
b.slice().reverse().flatten(function(a){return(a=a.sublayers)&&a.toArray().reverse()}).toArray();var f=[],h=a.__assign({writeSublayerStructure:!1},e);b.forEach(function(a){a=a.write({},h);f.push(a)});f.some(function(a){return 1<Object.keys(a).length})&&(c.layers=f)}};Object.defineProperty(d.prototype,"tileServers",{get:function(){return this._getDefaultTileServers(this.parsedUrl.path)},enumerable:!0,configurable:!0});d.prototype.castTileServers=function(a){return Array.isArray(a)?a.map(function(a){return p.urlToObject(a).path}):
null};d.prototype.fetchTile=function(a,b,c,d){void 0===d&&(d={});var f=d.signal,h=d.timestamp;a=this.getTileUrl(a,b,c);f={responseType:"image",signal:f};null!=h&&(f.query={_ts:d.timestamp});return e(a,f).then(function(a){return a.data})};d.prototype.getTileUrl=function(b,c,d){var e=!this.tilemapCache&&this.supportsBlankTile,e=p.objectToQuery(a.__assign(a.__assign({},this.parsedUrl.query),{blankTile:e?!1:null})),f=this.tileServers;return(f&&f.length?f[c%f.length]:this.parsedUrl.path)+"/tile/"+b+"/"+
c+"/"+d+(e?"?"+e:"")};d.prototype._fetchService=function(b){var d=this;return c.create(function(c,f){if(d.sourceJSON){if(null!=d.sourceJSON.bandCount&&null!=d.sourceJSON.pixelSizeX)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c({data:d.sourceJSON})}else{if(!d.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");var k=n.parse(d.parsedUrl.path);if(k&&"ImageServer"===k.serverType)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");
e(d.parsedUrl.path,{query:a.__assign({f:"json"},d.parsedUrl.query),responseType:"json",signal:b}).then(c,f)}}).then(function(a){a.ssl&&(d.url=d.url.replace(/^http:/i,"https:"));d.sourceJSON=a.data;d.read(a.data,{origin:"service",url:d.parsedUrl});if(10.1===d.version&&!n.isHostedAgolService(d.url))return d._fetchServerVersion(d.url,b).then(function(a){d.read({currentVersion:a})}).catch(function(){})})};d.prototype._fetchServerVersion=function(a,b){if(!D.isArcGISUrl(a))return c.reject();a=a.replace(/(.*\/rest)\/.*/i,
"$1")+"/info";return e(a,{query:{f:"json"},responseType:"json",signal:b}).then(function(a){if(a.data&&a.data.currentVersion)return a.data.currentVersion;throw new h("tile-layer:version-not-available");})};d.prototype._getMapName=function(a){return(a=a.match(/^(?:https?:)?\/\/(server|services)\.arcgisonline\.com\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i))&&a[2]};d.prototype._getDefaultAttribution=function(a){if(a){var b;a=a.toLowerCase();for(var c=0,d=J.length;c<d;c++)if(b=J[c],-1<
b.toLowerCase().indexOf(a))return p.makeAbsolute("//static.arcgis.com/attribution/"+b)}};d.prototype._getDefaultTileServers=function(a){var b=-1!==a.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),c=-1!==a.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return b||c?[a,a.replace(b?/server\.arcgisonline/i:/services\.arcgisonline/i,b?"services.arcgisonline":"server.arcgisonline")]:[]};a.__decorate([w.property({readOnly:!0,dependsOn:["parsedUrl"]})],d.prototype,"attributionDataUrl",null);
a.__decorate([w.property({type:["show","hide","hide-children"]})],d.prototype,"listMode",void 0);a.__decorate([w.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:function(){return{enabled:!1}}}}})],d.prototype,"isReference",void 0);a.__decorate([w.property({readOnly:!0})],d.prototype,"operationalLayerType",void 0);a.__decorate([w.property({type:Boolean})],d.prototype,"resampling",void 0);a.__decorate([w.property()],d.prototype,"sourceJSON",void 0);a.__decorate([w.property({type:q.SpatialReference})],
d.prototype,"spatialReference",void 0);a.__decorate([w.reader("spatialReference",["spatialReference","tileInfo"])],d.prototype,"readSpatialReference",null);a.__decorate([w.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],d.prototype,"path",void 0);a.__decorate([w.property({readOnly:!0})],d.prototype,"sublayers",void 0);a.__decorate([w.writer("sublayers",{layers:{type:[M]}})],d.prototype,"writeSublayers",null);a.__decorate([w.property({json:{read:!1,write:!1}})],d.prototype,
"popupEnabled",void 0);a.__decorate([w.property({dependsOn:["parsedUrl"]})],d.prototype,"tileServers",null);a.__decorate([w.cast("tileServers")],d.prototype,"castTileServers",null);a.__decorate([w.property({readOnly:!0,json:{read:!1}})],d.prototype,"type",void 0);a.__decorate([w.property(L.url)],d.prototype,"url",void 0);return d=a.__decorate([w.subclass("esri.layers.TileLayer")],d)}(k.SublayersOwner(F.ScaleRangeLayer(b.RefreshableLayer(H.OperationalLayer(r.PortalLayer(y.ArcGISCachedService(x.ArcGISMapService(m.ArcGISService(d.MultiOriginJSONMixin(l.HandleOwnerMixin(t)))))))))))});