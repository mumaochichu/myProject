// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports tslib ../PopupTemplate ../renderers ../request ../core/Error ../core/Logger ../core/maybe ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/watchUtils ../core/accessorSupport/decorators ../core/accessorSupport/utils ./Layer ./mixins/ArcGISService ./mixins/OperationalLayer ./mixins/PortalLayer ./mixins/ScaleRangeLayer ./mixins/SceneService ./support/commonProperties ./support/commonProperties ./support/FeatureReduction ./support/FeatureReductionSelection ./support/FetchAssociatedFeatureLayer ./support/fieldProperties ./support/FieldsIndex ./support/fieldUtils ./support/I3SLayerDefinitions ./support/LabelClass ./support/labelingInfo ./support/RangeInfo ../renderers/support/jsonUtils ../renderers/support/styleUtils ../support/popupUtils ../tasks/support/Query @dojo/framework/shim/Promise".split(" "),
function(Y,Z,c,v,w,x,g,y,z,A,h,B,C,d,D,E,F,G,H,I,J,k,K,L,M,N,O,P,n,l,Q,p,R,S,T,U,V){function q(c,b,a){c&&((c=S.read(c,b,a)||void 0)||f.error("Failed to create renderer",{rendererDefinition:c,layer:this,context:a}));return c}var W=["3DObject","Point"],f=y.getLogger("esri.layers.SceneLayer"),t=O.defineFieldProperties(),u={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons",
"features-polygons":"polygons"},X={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return function(r){function b(){for(var a=[],e=0;e<arguments.length;e++)a[e]=arguments[e];a=r.apply(this,a)||this;a.featureReduction=null;a.rangeInfos=null;a.operationalLayerType="ArcGISSceneServiceLayer";a.type="scene";a.fields=null;a.outFields=null;a.nodePages=null;a.materialDefinitions=null;a.textureSetDefinitions=null;a.geometryDefinitions=null;a.serviceUpdateTimeStamp=null;a.definitionExpression=
null;a.path=null;a.labelsVisible=!0;a.labelingInfo=null;a.legendEnabled=!0;a.cachedDrawingInfo={color:!1};a.popupEnabled=!0;a.popupTemplate=null;a.objectIdField=null;a.objectIdFilter=null;a._fieldUsageInfo={};a.screenSizePerspectiveEnabled=!0;return a}c.__extends(b,r);b.prototype.normalizeCtorArgs=function(a,e){return"string"===typeof a?c.__assign({url:a},e):a};b.prototype.getField=function(a){return this.fieldsIndex.get(a)};b.prototype.getFieldDomain=function(a){return(a=this.getField(a))&&a.domain?
a.domain:null};Object.defineProperty(b.prototype,"fieldsIndex",{get:function(){return new P(this.fields)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"elevationInfo",{set:function(a){this._set("elevationInfo",a);this.loaded&&this._validateElevationInfo()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"geometryType",{get:function(){return X[this.profile]||"mesh"},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"renderer",{set:function(a){n.fixRendererFields(a,
this.fields);this._set("renderer",a)},enumerable:!0,configurable:!0});b.prototype.readCachedDrawingInfo=function(a){if(null==a||"object"!==typeof a)a={};null==a.color&&(a.color=!1);return a};Object.defineProperty(b.prototype,"defaultPopupTemplate",{get:function(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null},enumerable:!0,configurable:!0});b.prototype.readObjectIdField=function(a,e){!a&&e.fields&&e.fields.some(function(e){"esriFieldTypeOID"===e.type&&(a=e.name);
return!!a});return a||void 0};b.prototype.readProfile=function(a,e){a=e.store.profile;if(null!=a&&u[a])return u[a];f.error("Unknown or missing profile",{profile:a,layer:this});return"mesh-pyramids"};b.prototype.load=function(a){var e=this,b=z.isSome(a)?a.signal:null;a=this.loadFromPortal({supportedTypes:["Scene Service"]},a).then(function(){return e._fetchService(b)},function(){return e._fetchService(b)}).then(function(){return h.all([e._verifyRootNodeAndUpdateExtent(e.nodePages,b),e._setAssociatedFeatureLayer(b)])}).then(function(){return e._validateElevationInfo()}).then(function(){return e._applyAssociatedLayerOverrides()}).then(function(){return e._populateFieldUsageInfo()}).then(function(){return T.loadStyleRenderer(e,
{origin:"service"},b)}).then(function(){return n.fixRendererFields(e.renderer,e.fields)});this.addResolvingPromise(a);return h.resolve(this)};b.prototype.createQuery=function(){var a=new V;"mesh"!==this.geometryType&&(a.returnGeometry=!0,a.returnZ=!0);a.where=this.definitionExpression||"1\x3d1";a.sqlFormat="standard";return a};b.prototype.queryExtent=function(a,e){var b=this;return this._getAssociatedLayerForQuery().then(function(c){return c.queryExtent(a||b.createQuery(),e)})};b.prototype.queryFeatureCount=
function(a,b){var e=this;return this._getAssociatedLayerForQuery().then(function(c){return c.queryFeatureCount(a||e.createQuery(),b)})};b.prototype.queryFeatures=function(a,b){var e=this;return this._getAssociatedLayerForQuery().then(function(c){return c.queryFeatures(a||e.createQuery(),b)}).then(function(a){if(a&&a.features)for(var b=0,c=a.features;b<c.length;b++){var d=c[b];d.layer=e;d.sourceLayer=e}return a})};b.prototype.queryObjectIds=function(a,b){var e=this;return this._getAssociatedLayerForQuery().then(function(c){return c.queryObjectIds(a||
e.createQuery(),b)})};b.prototype.getFieldUsageInfo=function(a){var b={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[a]||b:(f.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),b)};b.prototype.createPopupTemplate=function(a){return U.createPopupTemplate(this,a)};b.prototype._getAssociatedLayerForQuery=function(){var a=this;if(!this.loaded)return this.load().then(function(){return a._getAssociatedLayerForQuery()});
var b=this.associatedLayer;return null!=b?h.resolve(b):h.reject(new g("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))};b.prototype.hasCachedStatistics=function(a){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(b){return b.name===a})};b.prototype.queryCachedStatistics=function(a,b){return c.__awaiter(this,void 0,void 0,function(){var e,d,m,f,h;return c.__generator(this,function(c){switch(c.label){case 0:return[4,this.load(b)];
case 1:c.sent();if(!this.statisticsInfo)throw new g("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");e=this.fieldsIndex.get(a);if(!e)throw new g("scenelayer:field-unexisting","Field '"+a+"' does not exist on the layer");d=0;for(m=this.statisticsInfo;d<m.length;d++)if(f=m[d],f.name===e.name)return h=B.join(this.parsedUrl.path,f.href),[2,x(h,{query:{f:"json"},responseType:"json",signal:b?b.signal:null}).then(function(a){return a.data})];throw new g("scenelayer:no-cached-statistics",
"Cached statistics for this attribute are not available");}})})};b.prototype.saveAs=function(a,b){return c.__awaiter(this,void 0,void 0,function(){var e=this;return c.__generator(this,function(d){return[2,this._saveAs(a,c.__assign(c.__assign({},b),{getTypeKeywords:function(){return e._getTypeKeywords()},portalItemLayerType:"scene"}))]})})};b.prototype.save=function(){return c.__awaiter(this,void 0,void 0,function(){var a,b=this;return c.__generator(this,function(e){a={getTypeKeywords:function(){return b._getTypeKeywords()},
portalItemLayerType:"scene"};return[2,this._save(a)]})})};b.prototype.validateLayer=function(a){if(a.layerType&&-1===W.indexOf(a.layerType))throw new g("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:a.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new g("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(1<this.version.major)throw new g("layer:service-version-too-new",
"Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});a=this.normalReferenceFrame;var b=this.spatialReference,c=!1,d=!1;if(null==a)d=c=!0;else switch(b=b&&b.isGeographic,a){case "east-north-up":case "earth-centered":c=!0;d=b;break;case "vertex-reference-frame":c=!0;d=!b;break;default:c=!1}if(!c)throw new g("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!d)throw new g("scenelayer:incompatible-normal-reference-frame",
"Normal reference frame is incompatible with layer spatial reference.");};b.prototype._getTypeKeywords=function(){var a=[];if("points"===this.profile)a.push("Point");else if("mesh-pyramids"===this.profile)a.push("3DObject");else throw new g("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);return a};b.prototype._populateFieldUsageInfo=function(){this._fieldUsageInfo={};if(this.fields)for(var a=function(a){var c=!(!b.attributeStorageInfo||!b.attributeStorageInfo.some(function(b){return b.name===
a.name})),e=!!(b.associatedLayer&&b.associatedLayer.fields&&b.associatedLayer.fields.some(function(b){return b&&a.name===b.name}));b._fieldUsageInfo[a.name]={supportsLabelingInfo:c,supportsRenderer:c,supportsPopupTemplate:c||e,supportsLayerQuery:e}},b=this,c=0,d=this.fields;c<d.length;c++)a(d[c])};b.prototype._applyAssociatedLayerOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields){for(var a=null,b=0,c=this.associatedLayer.fields;b<c.length;b++){var d=c[b];this.getField(d.name)||
(a||(a=this.fields?this.fields.slice():[]),a.push(d.clone()))}a&&this._set("fields",a)}a=["popupTemplate","popupEnabled"];b=D.getProperties(this);for(c=0;c<a.length;c++)d=a[c],this._buddyIsMoreImportant(d)&&(b.setDefaultOrigin(this.associatedLayer.originOf(d)),b.set(d,this.associatedLayer[d]),b.setDefaultOrigin("user"))}};b.prototype._setAssociatedFeatureLayer=function(a){return c.__awaiter(this,void 0,void 0,function(){var b,d,f;return c.__generator(this,function(c){switch(c.label){case 0:b=new N.FetchAssociatedFeatureLayer(this,
a),c.label=1;case 1:return c.trys.push([1,3,,4]),d=this,[4,b.fetch()];case 2:return d.associatedLayer=c.sent(),[3,4];case 3:return f=c.sent(),h.isAbortError(f)||this._logWarningOnPopupEnabled(),[3,4];case 4:return[2]}})})};b.prototype._logWarningOnPopupEnabled=function(){var a=this;C.whenValidOnce(this,["popupTemplate","popupEnabled"],function(){return a.popupEnabled&&null!=a.popupTemplate}).then(function(){return function(){var b="this SceneLayer: "+a.title;null==a.attributeStorageInfo?f.warn("Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on "+
b):f.info("Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on "+b)}})};b.prototype._buddyIsMoreImportant=function(a){if(!this.associatedLayer)return!1;var b=this.originIdOf(a);a=this.associatedLayer.originIdOf(a);return null!=a&&2>=a?null==b||2>b:null!=a&&3>=a?null==b||3>b:!1};b.prototype._validateElevationInfo=function(){var a=this.elevationInfo;a&&("mesh-pyramids"===this.profile&&"absolute-height"!==a.mode&&f.warn(".elevationInfo\x3d","Mesh scene layers only support absolute-height elevation mode"),
a.featureExpressionInfo&&"0"!==a.featureExpressionInfo.expression&&f.warn(".elevationInfo\x3d","Scene layers do not support featureExpressionInfo"))};c.__decorate([d.property({types:{key:"type",base:L.default,typeMap:{selection:M}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],b.prototype,"featureReduction",void 0);c.__decorate([d.property({type:[R.default],json:{read:!1,origins:{"web-scene":{read:{source:"layerDefinition.rangeInfos"},
write:{target:"layerDefinition.rangeInfos"}}}}})],b.prototype,"rangeInfos",void 0);c.__decorate([d.property({json:{read:!1}})],b.prototype,"associatedLayer",void 0);c.__decorate([d.property({type:["show","hide"]})],b.prototype,"listMode",void 0);c.__decorate([d.property({type:["ArcGISSceneServiceLayer"]})],b.prototype,"operationalLayerType",void 0);c.__decorate([d.property({json:{read:!1},readOnly:!0})],b.prototype,"type",void 0);c.__decorate([d.property(c.__assign(c.__assign({},t.fields),{readOnly:!0,
json:{read:!1,origins:{service:{read:!0}}}}))],b.prototype,"fields",void 0);c.__decorate([d.property({readOnly:!0,dependsOn:["fields"]})],b.prototype,"fieldsIndex",null);c.__decorate([d.property(t.outFields)],b.prototype,"outFields",void 0);c.__decorate([d.property({type:l.I3SNodePageDefinition,readOnly:!0})],b.prototype,"nodePages",void 0);c.__decorate([d.property({type:[l.I3SMaterialDefinition],readOnly:!0})],b.prototype,"materialDefinitions",void 0);c.__decorate([d.property({type:[l.I3STextureSetDefinition],
readOnly:!0})],b.prototype,"textureSetDefinitions",void 0);c.__decorate([d.property({type:[l.I3SGeometryDefinition],readOnly:!0})],b.prototype,"geometryDefinitions",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"serviceUpdateTimeStamp",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"attributeStorageInfo",void 0);c.__decorate([d.property({readOnly:!0})],b.prototype,"statisticsInfo",void 0);c.__decorate([d.property({type:String,json:{origins:{service:{read:!1,write:!1}},
read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],b.prototype,"definitionExpression",void 0);c.__decorate([d.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],b.prototype,"path",void 0);c.__decorate([d.property(k.elevationInfo)],b.prototype,"elevationInfo",null);c.__decorate([d.property({type:String,dependsOn:["profile"]})],b.prototype,"geometryType",null);c.__decorate([d.property(k.labelsVisible)],b.prototype,
"labelsVisible",void 0);c.__decorate([d.property({type:[Q],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:p.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:p.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],b.prototype,"labelingInfo",void 0);c.__decorate([d.property(k.legendEnabled)],b.prototype,"legendEnabled",void 0);c.__decorate([d.property(k.opacityDrawingInfo)],b.prototype,
"opacity",void 0);c.__decorate([d.property({types:w.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:q}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:q},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],b.prototype,"renderer",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,"cachedDrawingInfo",void 0);c.__decorate([d.reader("service","cachedDrawingInfo")],b.prototype,"readCachedDrawingInfo",null);c.__decorate([d.property(k.popupEnabled)],
b.prototype,"popupEnabled",void 0);c.__decorate([d.property({type:v,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],b.prototype,"popupTemplate",void 0);c.__decorate([d.property({readOnly:!0,json:{read:!1},dependsOn:["fields","title","attributeStorageInfo","associatedLayer"]})],b.prototype,"defaultPopupTemplate",null);c.__decorate([d.property({type:String,json:{read:!1}})],b.prototype,"objectIdField",void 0);c.__decorate([d.reader("service","objectIdField",["objectIdField","fields"])],
b.prototype,"readObjectIdField",null);c.__decorate([d.property({json:{read:!1}})],b.prototype,"objectIdFilter",void 0);c.__decorate([d.property({type:String,json:{read:!1}})],b.prototype,"profile",void 0);c.__decorate([d.reader("service","profile",["store.profile"])],b.prototype,"readProfile",null);c.__decorate([d.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],b.prototype,"normalReferenceFrame",void 0);c.__decorate([d.property(K.screenSizePerspectiveEnabled)],
b.prototype,"screenSizePerspectiveEnabled",void 0);return b=c.__decorate([d.subclass("esri.layers.SceneLayer")],b)}(J.SceneService(F.ArcGISService(G.OperationalLayer(H.PortalLayer(I.ScaleRangeLayer(A.MultiOriginJSONMixin(E)))))))});