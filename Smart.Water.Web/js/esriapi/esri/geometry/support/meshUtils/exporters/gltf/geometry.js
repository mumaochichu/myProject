// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports ../../../.. ../../../../../core/mathUtils ../../../../../core/libs/gl-matrix-2/vec3 ../../../../../core/libs/gl-matrix-2/vec3f64".split(" "),function(x,m,r,h,k,l){Object.defineProperty(m,"__esModule",{value:!0});m.smoothNormalsMesh=function(g){if(g.components){for(var l=0,m=g.components;l<m.length;l++){var n=m[l];if("smooth"===n.shading&&n.faces){var a=g;a.vertexAttributes.normal||(a.vertexAttributes.normal=new Float32Array(a.vertexAttributes.position.length));for(var r=n.faces.length/
3,e=0;e<r;++e){var b=n.faces[3*e+0],c=n.faces[3*e+1],d=n.faces[3*e+2],f=k.vec3.set(u,a.vertexAttributes.position[3*b+0],a.vertexAttributes.position[3*b+1],a.vertexAttributes.position[3*b+2]),q=k.vec3.set(v,a.vertexAttributes.position[3*c+0],a.vertexAttributes.position[3*c+1],a.vertexAttributes.position[3*c+2]),t=k.vec3.set(w,a.vertexAttributes.position[3*d+0],a.vertexAttributes.position[3*d+1],a.vertexAttributes.position[3*d+2]),q=k.vec3.subtract(q,q,f),f=k.vec3.subtract(t,t,f),f=k.vec3.cross(q,q,
f);h.isNaN(a.vertexAttributes.normal[3*b+0])&&(a.vertexAttributes.normal[3*b+0]=0);h.isNaN(a.vertexAttributes.normal[3*b+1])&&(a.vertexAttributes.normal[3*b+1]=0);h.isNaN(a.vertexAttributes.normal[3*b+2])&&(a.vertexAttributes.normal[3*b+2]=0);h.isNaN(a.vertexAttributes.normal[3*c+0])&&(a.vertexAttributes.normal[3*c+0]=0);h.isNaN(a.vertexAttributes.normal[3*c+1])&&(a.vertexAttributes.normal[3*c+1]=0);h.isNaN(a.vertexAttributes.normal[3*c+2])&&(a.vertexAttributes.normal[3*c+2]=0);h.isNaN(a.vertexAttributes.normal[3*
d+0])&&(a.vertexAttributes.normal[3*d+0]=0);h.isNaN(a.vertexAttributes.normal[3*d+1])&&(a.vertexAttributes.normal[3*d+1]=0);h.isNaN(a.vertexAttributes.normal[3*d+2])&&(a.vertexAttributes.normal[3*d+2]=0);a.vertexAttributes.normal[3*b+0]+=f[0];a.vertexAttributes.normal[3*b+1]+=f[1];a.vertexAttributes.normal[3*b+2]+=f[2];a.vertexAttributes.normal[3*c+0]+=f[0];a.vertexAttributes.normal[3*c+1]+=f[1];a.vertexAttributes.normal[3*c+2]+=f[2];a.vertexAttributes.normal[3*d+0]+=f[0];a.vertexAttributes.normal[3*
d+1]+=f[1];a.vertexAttributes.normal[3*d+2]+=f[2]}for(e=0;e<a.vertexAttributes.normal.length;e+=3)k.vec3.set(p,a.vertexAttributes.normal[e],a.vertexAttributes.normal[e+1],a.vertexAttributes.normal[e+2]),k.vec3.normalize(p,p),a.vertexAttributes.normal[e+0]=p[0],a.vertexAttributes.normal[e+1]=p[1],a.vertexAttributes.normal[e+2]=p[2]}}g.vertexAttributesChanged()}};m.computeOrigin=function(g){return new r.Point({x:g.extent.xmax-g.extent.width/2,y:g.extent.ymax-g.extent.height/2,z:g.extent.zmin,spatialReference:g.extent.spatialReference})};
var u=l.vec3f64.create(),v=l.vec3f64.create(),w=l.vec3f64.create(),p=l.vec3f64.create()});