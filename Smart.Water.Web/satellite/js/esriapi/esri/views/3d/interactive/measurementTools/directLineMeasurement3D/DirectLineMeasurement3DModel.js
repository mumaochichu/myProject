// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.16/esri/copyright.txt for details.
//>>built
define("require exports tslib ../../../../../intl ../../../../../core/Accessor ../../../../../core/Handles ../../../../../core/mathUtils ../../../../../core/Quantity ../../../../../core/quantityFormatUtils ../../../../../core/unitUtils ../../../../../core/watchUtils ../../../../../core/accessorSupport/decorators ../../../../../core/libs/gl-matrix-2/vec3 ../../../../../core/libs/gl-matrix-2/vec3f64 ../../../../../geometry/Point ../../../../../geometry/support/geodesicUtils ../support/UnitNormalizer ../../../support/earthUtils ../../../support/projectionUtils ../../../support/PropertiesPool".split(" "),
function(u,G,d,r,z,A,l,m,k,v,B,e,w,n,x,C,D,E,f,F){var y=E.earthRadius*Math.PI/180;u=function(t){function b(){var a=null!==t&&t.apply(this,arguments)||this;a._tempStartPosition=n.vec3f64.create();a._tempEndPosition=n.vec3f64.create();a._tempCornerPosition=n.vec3f64.create();a._unitNormalizer=new D;a._handles=new A;a._propertiesPool=new F.default({startPoint:x,endPoint:x},a);a.cursorPoint=null;a.state="initial";a.mode="auto";a.unit="metric";a.active=!1;a.directDistance=null;a.horizontalDistance=null;
a.verticalDistance=null;a.geodesicDistance=null;a.geodesicAngle=null;a.triangleCollapseRatioThreshold=.03;a.geodesicMeasurementDistanceThreshold=1E5;return a}d.__extends(b,t);b.prototype.initialize=function(){var a=this;r.loadMessageBundle("esri/core/t9n/Units").then(function(c){a.messages=c});this._handles.add(r.onLocaleChange(function(){return d.__awaiter(a,void 0,void 0,function(){var a;return d.__generator(this,function(c){switch(c.label){case 0:return a=this,[4,r.loadMessageBundle("esri/core/t9n/Units")];
case 1:return a.messages=c.sent(),[2]}})})}));this._handles.add(B.init(this.sceneView,"spatialReference",function(c){a._unitNormalizer.spatialReference=c}),"scene-view");this.reset()};b.prototype.destroy=function(){this._handles.destroy();this._handles=null;this._propertiesPool.destroy();this._propertiesPool=null};Object.defineProperty(b.prototype,"startPoint",{set:function(a){if(a){var c=this._propertiesPool.get("startPoint");c.copy(a);this._set("startPoint",c);this._updateMeasurement()}else this._set("startPoint",
null)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"startPointSurfaceLocation",{set:function(a){this._set("startPointSurfaceLocation",a);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"endPoint",{set:function(a){if(a){var c=this._propertiesPool.get("endPoint");c.copy(a);this._set("endPoint",c);this._updateMeasurement()}else this._set("endPoint",null)},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"endPointSurfaceLocation",
{set:function(a){this._set("endPointSurfaceLocation",a);this._updateMeasurement()},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"measurementSurfaceLocation",{get:function(){var a=this.startPointSurfaceLocation,c=this.endPointSurfaceLocation;return null==a||null==c||"above-the-surface"===a&&"below-the-surface"===c||"below-the-surface"===a&&"above-the-surface"===c||"on-the-surface"===a&&"on-the-surface"===c?"camera-dependent":"above-the-surface"===a||"above-the-surface"===c?"above-the-surface":
"below-the-surface"},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"validMeasurement",{get:function(){return!!this.startPoint&&!!this.endPoint},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"isMeasuring",{get:function(){return!!this.startPoint},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"geodesicDistanceExceeded",{get:function(){return this.horizontalDistance&&this.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold},enumerable:!0,
configurable:!0});Object.defineProperty(b.prototype,"measurementMode",{get:function(){var a=this.mode;if("auto"===a){a="euclidean";if("degrees"===this.unit||"degrees-minutes-seconds"===this.unit)a="geodesic";this.geodesicDistanceExceeded&&(a="geodesic")}return a},enumerable:!0,configurable:!0});Object.defineProperty(b.prototype,"triangleView",{get:function(){var a=this._collapseTriangle(),c=this.messages,b=null,d=null,e=null,g=this.directDistance,d="geodesic"===this.measurementMode?this.geodesicDistance:
this.horizontalDistance,h=this.verticalDistance,f=null;switch(this.unit){case "metric":b=c&&g&&k.formatMetricLength(c,g);d=c&&d&&k.formatMetricLength(c,d);e=c&&h&&k.formatMetricVerticalLength(c,h);f=g&&g.toUnit("meters");break;case "imperial":b=c&&g&&k.formatImperialLength(c,g);d=c&&d&&k.formatImperialLength(c,d);e=c&&h&&k.formatImperialVerticalLength(c,h);f=g&&g.toUnit(v.preferredImperialLengthUnit(g.value,g.unit));break;case "degrees":d=c&&this.geodesicAngle&&k.formatDecimal(c,this.geodesicAngle,
"degrees");f=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;case "degrees-minutes-seconds":d=this.geodesicAngle&&k.formatDMS(this.geodesicAngle);f=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;default:b=c&&g&&k.formatDecimal(c,g,this.unit),d=c&&d&&k.formatDecimal(c,d,this.unit),e=c&&h&&k.formatDecimal(c,h,this.unit),f=g&&g.toUnit(this.unit)}c=1;f&&(c=l.nextHighestPowerOfTen(f.value/30),c*="degrees"===f.unit?y:v.convertUnit(1,f.unit,"meters"),c/=this._unitNormalizer.normalizeDistance(1));
return{visible:this.validMeasurement&&!this.startPoint.equals(this.endPoint),mode:this.measurementMode,collapsed:a,directLabel:b,horizontalLabel:d,verticalLabel:e,stripeLength:c}},enumerable:!0,configurable:!0});b.prototype.reset=function(){this.clearMeasurement()};b.prototype.clearMeasurement=function(){this.state="initial";this.cursorPoint=this.endPoint=this.startPoint=null;this._clearOverride("measurementSurfaceLocation");this._updateMeasurement()};b.prototype.finishMeasurement=function(){if(!this._isOverridden("measurementSurfaceLocation")){var a=
this.measurementSurfaceLocation;this._override("measurementSurfaceLocation","camera-dependent"===a?this.sceneView.state.camera.aboveGround?"above-the-surface":"below-the-surface":a)}this.state="measured"};b.prototype._collapseTriangle=function(){return!this.validMeasurement||this.startPoint.equals(this.endPoint)||"geodesic"===this.measurementMode?!0:Math.min(this.verticalDistance.value/this.horizontalDistance.value,this.horizontalDistance.value/this.verticalDistance.value)<this.triangleCollapseRatioThreshold};
b.prototype._exactGeodesicDistanceAndAngle=function(a,c){f.pointToWGS84ComparableLonLat(a,p);f.pointToWGS84ComparableLonLat(c,q);a=l.deg2rad(p[0]);c=l.deg2rad(p[1]);var b=l.deg2rad(q[0]),d=l.deg2rad(q[1]);a=l.acosClamped(Math.sin(c)*Math.sin(d)+Math.cos(c)*Math.cos(d)*Math.cos(Math.abs(b-a)));a=l.rad2deg(a);c={distance:0};C.inverseGeodeticSolver(c,[p[0],p[1]],[q[0],q[1]]);return{distance:new m(c.distance,"meters"),angle:new m(a,"degrees")}};b.prototype._approximateGeodesicDistanceAndAngle=function(a){return{distance:new m(a,
"meters"),angle:new m(a/y,"degrees")}};b.prototype._euclideanDistances=function(a,c){a.z>c.z&&(a=[a,a=c][0]);var b=a.clone();b.z=c.z;var d=this._tempStartPosition,e=this._tempEndPosition,g=this._tempCornerPosition,h=this.sceneView.spatialReference,h=f.canProject(h,f.WGS84ECEFSpatialReference)?f.WGS84ECEFSpatialReference:h;f.pointToVector(a,d,h);f.pointToVector(c,e,h);f.pointToVector(b,g,h);b=w.vec3.distance(d,e);e=w.vec3.distance(g,e);a=Math.abs(c.z-a.z);b=this._unitNormalizer.normalizeDistance(b);
e=this._unitNormalizer.normalizeDistance(e);a=this._unitNormalizer.normalizeElevation(a);return{direct:new m(b,"meters"),horizontal:new m(e,"meters"),vertical:new m(a,"meters")}};b.prototype._updateMeasurement=function(){if(this.startPoint&&this.endPoint){var a=this._euclideanDistances(this.startPoint,this.endPoint),b=f.canProjectToWGS84ComparableLonLat(this.sceneView.spatialReference)?this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint):this._approximateGeodesicDistanceAndAngle(a.horizontal.value);
this._set("directDistance",a.direct);this._set("horizontalDistance",a.horizontal);this._set("verticalDistance",a.vertical);this._set("geodesicDistance",b.distance);this._set("geodesicAngle",b.angle)}else this._set("directDistance",null),this._set("horizontalDistance",null),this._set("verticalDistance",null),this._set("geodesicDistance",null),this._set("geodesicAngle",null)};d.__decorate([e.property()],b.prototype,"messages",void 0);d.__decorate([e.property({constructOnly:!0})],b.prototype,"sceneView",
void 0);d.__decorate([e.property({value:null})],b.prototype,"startPoint",null);d.__decorate([e.property({value:null})],b.prototype,"startPointSurfaceLocation",null);d.__decorate([e.property({value:null})],b.prototype,"endPoint",null);d.__decorate([e.property({value:null})],b.prototype,"endPointSurfaceLocation",null);d.__decorate([e.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],b.prototype,"measurementSurfaceLocation",null);d.__decorate([e.property()],b.prototype,"cursorPoint",
void 0);d.__decorate([e.property()],b.prototype,"state",void 0);d.__decorate([e.property()],b.prototype,"mode",void 0);d.__decorate([e.property()],b.prototype,"unit",void 0);d.__decorate([e.property()],b.prototype,"active",void 0);d.__decorate([e.property({readOnly:!0,dependsOn:["startPoint","endPoint"]})],b.prototype,"validMeasurement",null);d.__decorate([e.property({readOnly:!0,dependsOn:["startPoint"]})],b.prototype,"isMeasuring",null);d.__decorate([e.property({readOnly:!0})],b.prototype,"directDistance",
void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"horizontalDistance",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"verticalDistance",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"geodesicDistance",void 0);d.__decorate([e.property({readOnly:!0})],b.prototype,"geodesicAngle",void 0);d.__decorate([e.property({readOnly:!0,dependsOn:["horizontalDistance","geodesicMeasurementDistanceThreshold"]})],b.prototype,"geodesicDistanceExceeded",null);d.__decorate([e.property({readOnly:!0,
dependsOn:["horizontalDistance","unit","geodesicDistanceExceeded"]})],b.prototype,"measurementMode",null);d.__decorate([e.property({readOnly:!0,dependsOn:"messages unit measurementMode startPoint endPoint triangleCollapseRatioThreshold".split(" ")})],b.prototype,"triangleView",null);d.__decorate([e.property()],b.prototype,"triangleCollapseRatioThreshold",void 0);d.__decorate([e.property()],b.prototype,"geodesicMeasurementDistanceThreshold",void 0);return b=d.__decorate([e.subclass("esri.views.3d.interactive.measurementTools.directLineMeasurement3D.DirectLineMeasurement3DModel")],
b)}(z);var p=n.vec3f64.create(),q=n.vec3f64.create();return u});