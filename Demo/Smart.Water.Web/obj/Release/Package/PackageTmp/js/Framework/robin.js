function StringBuilder(t) { this.Strings = [], this.Append = function (t) { this.Strings.push(t) }, this.ToString = function () { return this.Strings.join("") }, this.Clear = function () { this.Strings.length = 0 }, "undefined" != typeof t && null != t && this.Append(t) } this.Robin || (Robin = {}), this["Robin.Window"] || (Robin.Window = {}), this["Robin.Graphic"] || (Robin.Graphic = {}), this["Robin.HeatMap"] || (Robin.HeatMap = {}), Robin.HeatMap.heatLayer = null, Robin.HeatMap.data = [], Robin.Window.instances = [], Robin.Window._sequnce = 0, Robin.Window.InfoPanel = function (t, n, i) { var e = !1; if ($.each(Robin.Window.instances, function (t, n) { if (i.id || (i.id = "infoPanel_" + ++Robin.Window._sequnce), n && n.id == i.id) { e = !0; var o = n.obj; return o && "minimized" == o.status && o.normalize(), !1 } }), e) return $.each(Robin.Window.instances, function (t, n) { var e = n.obj; return n.id == i.id ? !0 : void (e && "minimized" != e.status && e.minimize()) }), !1; var o = { headerTitle: "", autoclose: 0, position: "center", resizable: "disabled", theme: "light", content: "", draggable: { appendTo: "#Main_Map_DIV", containment: "parent", opacity: 1, revertDuration: 1, drag: function (t, n) { } }, callback: [function (t) { }] }; t && (o.headerTitle = t), n && (o.content = n), i && (o = $.extend(!0, o, i)); var a = $.jsPanel(o); 0 != i.minimizeOthers && $.each(Robin.Window.instances, function (t, n) { var i = n.obj; i && "minimized" != i.status && i.minimize() }), Robin.Window.instances.push({ id: i.id, obj: a }) }, Robin.Window.CloseAllInfoPanel = function () { Robin.Window._closeAll = !0, $.each(Robin.Window.instances, function (t, n) { if (!n || !n.obj) return !0; var i = n.obj; i.close() }), Robin.Window._closeAll = !1 }, Robin.Window.MinInfoPanelByID = function (t) { $.each(Robin.Window.instances, function (n, i) { if (null != i && i.id == t) { var e = i.obj; e.smallify() } }) }, Robin.Window.minimizeInfoPanelByID = function (t) { $.each(Robin.Window.instances, function (n, i) { if (null != i && i.id == t) { var e = i.obj; e.minimize() } }) }, Robin.Window.normalizeInfoPanelByID = function (t) { $.each(Robin.Window.instances, function (n, i) { if (null != i && i.id == t) { var e = i.obj; e.normalize() } }) }, Robin.Window.niniAll = function () { $.each(Robin.Window.instances, function (t, n) { var i = n.obj; i && "minimized" != i.status && i.minimize() }) }, Robin.Window.GetInfoPanelByID = function (t) { var n = null; return $.each(Robin.Window.instances, function (i, e) { return null != e && e.id == t ? void (n = e.obj) : void 0 }), n }, Robin.Window.Render = function (t, n, i) { var e, o = null; i && (e = i.title, o = i.replace); var a = Robin.Template.GetLayerInfoByName(t); a && (i && i.layerInfo && (a = $.extend(!0, a, i.layerInfo)), Robin.Template.GetInfoRenderWithUrl(a.TemplatePath, n, function (t) { var n = { callback: [function (t) { var n = ""; a.ScriptPath && (n += '<Script src ="' + a.ScriptPath + '"></Script>'), a.CssPath && (n += '<link href="' + a.CssPath + '" rel="stylesheet" />'), n && t.append(n) }] }; a.PanelConfig && (n = $.extend(!0, n, $.parseJSON(a.PanelConfig))), i.id && (n.id = i.id), Robin.Window.InfoPanel(e ? e : a.AliasName, t, n) }, o)) }, Robin.SMS = { send: function (t) { var n = "?"; if (t && t.PHONE) t.Action = "Send"; else { if (!t || !t.DESTNUMBER) return !1; t.Action = "CustomSend" } return n += $.param(t), $.ajax({ dataType: "JSON", url: Robin.Utils.Host.DirectPath() + "Plugins/SMS/SendTaskHandler.ashx" + n, cache: !1, success: function (n) { $.isFunction(t.success) && t.success(n) }, error: function (n) { $.isFunction(t.error) && t.error(n) } }), !0 }, sendData: function (t) { $.each(t, function (t, n) { if (!n.SENDMESSAGE) return !0; var i, e = ""; if (n.message) e = n.message; else { if ($.each(Robin.Data.monitor, function (t, e) { return e.BMID == n.STATION_KEY ? (i = e, !1) : void 0 }), void 0 == i) return !0; e += i.BMMC; var o; if ($.each(Robin.Data.config, function (t, i) { return i.STATION_KEY == n.STATION_KEY && i.TAG_CODE == n.TAG_KEY ? (o = i, !1) : void 0 }), void 0 == o) return !0; switch (e += " " + o.TAG_NAME + "当前值:" + n.TAG_VALUE, n.TAG_VALUE > o.MAX_VALUE && (e += "高于" + o.MAX_VALUE), n.TAG_VALUE > o.MIN_VALUE && (e += "低于于" + o.MIN_VALUE), n.LEVEL) { case "1": e += " 达到一级预警"; break; case "2": e += " 达到二级预警"; break; default: e += " 达到三级预警" } } $.each(Robin.Data.monitorPhone, function (t, i) { if (i.STATIONKEY == n.STATION_KEY) { if (n.GROUPIDS.indexOf("<" + i.PHONEGROUP + ">") <= 0) return !0; var o, a = !1; if ($.each(Robin.SMS.sendHistory, function (t, i) { return i.stationKey == n.STATION_KEY && i.tagKey == n.TAG_KEY ? (a = !0, o = i, !1) : void 0 }), a) if (o.level > n.LEVEL) Robin.SMS.send({ PHONE: n.PHONE, CONTENT: e }); else { var r = (Robin.SMS.getDate(n.TIME).getTime() - Robin.SMS.getDate(o.time).getDate()) / 124416e6; r > Robin.SMS.interval && Robin.SMS.send({ PHONE: n.PHONE, CONTENT: e }) } else Robin.SMS.sendHistory.push({ stationKey: n.STATION_KEY, tagKey: n.TAG_KEY, time: n.TIME, level: n.LEVEL }), Robin.SMS.send({ PHONE: n.PHONE, CONTENT: e }) } }) }) }, getDate: function (t) { var n = t, i = n.split(" "), e = i[0].split("-"), o = i[1].split(":"), a = new Date(e[0], e[1], e[2], o[0], o[1], o[2]); return a }, sendHistory: [{ stationKey: "330521011196JSD0001", tagKey: "DQ_PSSW001", time: "2014-12-18 11:19:36", level: "1" }], interval: 10 }, Robin.LED = { _datas: [], _id: null, placeholder: "^message^", list: function (t, n, i) { if (t) { Robin.LED._id = t, Robin.LED._listCallbackFunction = n && $.isFunction(n) ? n : null; var e, o, a, r = Robin.LED._datas, l = r.length; if (!i && l > 0) for (e = 0; l > e; e++) if (o = r[e], o.id == t) return void Robin.LED._listCallback(o.data); a = Robin.Setting.GlobalSetting.RestAPIService + Robin.Setting.GlobalSetting.LED.service + Robin.LED._id, Robin.Utils.GetScript(a, "Robin.LED._listCallback") } }, set: function (t, n) { var i, e, o = Robin.LED._datas, a = o.length, r = n; if (!(0 >= a)) for (i = 0; a > i; i++) if (e = o[i].data, e[i].Id == t) { n = e[i].MESSAGEFOMAT.replace(Robin.LED.placeholder, n), $.post(Robin.Setting.GlobalSetting.RestAPIService + "/DataService/OperLED", { ID: t, Message: r }, function (t) { }), Robin.SMS.send({ PHONE: e[i].PHONE, CONTENT: n }); break } }, _listCallbackFunction: null, _listCallback: function (t) { var n, i, e, o = Robin.LED._datas, a = o.length; if (e = Robin.LED._id, a > 0) for (n = 0; a > n; n++) if (i = o[n], i.id == e) { Robin.LED._datas = Robin.LED._datas.slice(n); break } Robin.LED._datas.push({ id: e, data: t }), Robin.LED._listCallbackFunction && Robin.LED._listCallbackFunction(t) }, judge: function (t) { var n, i, e, o, a = t.length; for (o = 0; a > o; o++) if (e = t[o], void 0 != e.STATION_KEY && "" != e.STATION_KEY && (i = e.STATION_KEY.substr(6, 6), "011196" == i)) switch (e.LEVEL) { case "1": Robin.LED.list(e.STATION_KEY, function (t) { $.each(t, function (t, i) { n = "前方桥涵洞严重积水，所有车辆禁止行驶。  积水深度" + e.TAG_VALUE + "厘米", Robin.LED.set(i.Id, n) }) }); break; case "2": Robin.LED.list(e.STATION_KEY, function (t) { $.each(t, function (t, i) { n = "前方桥涵洞积水，车辆请慢行。积水深度:" + e.TAG_VALUE + "厘米", Robin.LED.set(i.Id, n) }) }); break; case "3": Robin.LED.list(e.STATION_KEY, function (t) { $.each(t, function (t, i) { n = "", Robin.LED.set(i.Id, n) }) }) } } }, Robin.Data = { init: function (t) { var n = Robin.Setting.GlobalSetting, i = n.RestAPIService + n.InitDataService; Robin.Data.configState = 0, Robin.Data.alertState = 0, Robin.Data.monitorState = 0, Robin.Data.monitorTypeState = 0, t && $.isFunction(t) && (Robin.Data._customCallback = t), Robin.Utils.GetScript(i, "Robin.Data._initCallback") }, _initCallback: function (t) { if (500 == t.status) return void alert(t.data); if (t = t.data) { Robin.Data.configState = 1, Robin.Data.alertState = 1, Robin.Data.monitorState = 1, Robin.Data.monitorTypeState = 1, $.each(t.ConfigList, function (t, n) { var i = n.STATION_KEY.substr(6, 6), e = !0; if (Robin.Setting.GlobalSetting.MonitorType && (e = !1, $.each(Robin.Setting.GlobalSetting.MonitorType, function (t, n) { return n.key == i ? (e = !0, !1) : void 0 })), e) { var o = {}; $.extend(o, n), Robin.Data.config.push(o) } }), $.each(t.MonitorList, function (t, n) { var i = n.BMID.substr(6, 6), e = !0; if (Robin.Setting.GlobalSetting.MonitorType && (e = !1, $.each(Robin.Setting.GlobalSetting.MonitorType, function (t, n) { return n.key == i ? (e = !0, !1) : void 0 })), e) { var o = {}; $.extend(o, n), Robin.Data.monitor.push(o) } }), Robin.Data.waterLinkPumpSite = t.waterLinkPumpSiteList, Robin.Data.pumpStationWithPump = t.pumpStationWithPumpList, Robin.Data.rainFall = t.rainFallList, Robin.Data.alert = t.AlertList, Robin.Data.monitorType = t.MonitorTypeList; var n = Robin.Data._initPipeLayerInfos; n && $.isFunction(n) && n() } var i, e = Robin.Data._customCallback; i = Robin.Data.onInit, i && $.isFunction(i) && i(), e && (e(t), Robin.Data._customCallback = null) }, _customCallback: null, _getConfigData: function () { var t = Robin.Setting.GlobalSetting, n = t.RestAPIService + t.ConfigService; Robin.Data.configState = 0, Robin.Utils.GetScript(n, function (t) { Robin.Data.configState = 1, $.each(t, function (t, n) { var i = n.STATION_KEY.substr(6, 6), e = !0; if (Robin.Setting.GlobalSetting.MonitorType && (e = !1, $.each(Robin.Setting.GlobalSetting.MonitorType, function (t, n) { return n.key == i ? (e = !0, !1) : void 0 })), e) { var o = {}; $.extend(o, n), Robin.Data.config.push(o) } }) }) }, _getAlertData: function () { var t = Robin.Setting.GlobalSetting, n = t.RestAPIService + t.InitDataService; Robin.Data.alertState = 0, Robin.Utils.GetScript(n, function (t) { Robin.Data.alertState = 1, $.each(t.AlertList, function (t, n) { var i = n.STATION_KEY.substr(6, 6), e = !0; if (Robin.Setting.GlobalSetting.MonitorType && (e = !1, $.each(Robin.Setting.GlobalSetting.MonitorType, function (t, n) { return n.key == i ? (e = !0, !1) : void 0 })), e) { var o = {}; $.extend(o, n), Robin.Data.alert.push(o) } }) }) }, _getMonitorData: function () { var t = Robin.Setting.GlobalSetting, n = t.RestAPIService + t.BasicMonitorService; Robin.Data.monitorState = 0, Robin.Utils.GetScript(n, function (t) { Robin.Data.monitorState = 1, $.each(t, function (t, n) { var i = n.BMID.substr(6, 6), e = !0; if (Robin.Setting.GlobalSetting.MonitorType && (e = !1, $.each(Robin.Setting.GlobalSetting.MonitorType, function (t, n) { return n.key == i ? (e = !0, !1) : void 0 })), e) { var o = {}; $.extend(o, n), Robin.Data.monitor.push(o) } }) }) }, _getMonitorTypeData: function () { var t = Robin.Setting.GlobalSetting, n = t.RestAPIService + t.BasicMonitorService; Robin.Data.monitorTypeState = 0, Robin.Utils.GetScript(n, function (t) { Robin.Data.monitorTypeState = 1, Robin.Data.monitorType = t }) }, onInit: null, onAlertUpdate: null, configState: -1, config: [], monitorPhone: [], alert: [], alertState: -1, monitor: [], report: [], waterLinkPumpSite: [], pumpStationWithPump: [], rainFall: [], monitorState: -1, monitorType: [], monitorTypeState: -1, ignoreCallback: !1, PipeLayerInfos: [], _initPipeLayerInfos: function () { Robin.Data.monitorType && $.each(Robin.Data.monitorType, function (t, n) { if (void 0 != n.LXBS && "" != n.LXBS && void 0 != n.TEMPLATEPATH && "" != n.TEMPLATEPATH) { var i = {}; i.LayerName = n.LXBS, i.LayerCode = n.LXBS, i.LayerType = n.TYPE_KEY, i.AliasName = n.TYPE_NAME, i.MapService = n.SPACESERVICEURL, i.Icon = n.ICON, i.TemplatePath = n.TEMPLATEPATH, i.ScriptPath = n.SCRIPTPATH, i.CssPath = n.CSSPATH, i.PanelConfig = n.PANELCONFIG, Robin.Data.PipeLayerInfos.push(i) } }), Robin.Setting.PipeLayerInfos && $.each(Robin.Setting.PipeLayerInfos, function (t, n) { if (void 0 != n.LayerName && "" != n.LayerName && void 0 != n.TemplatePath && "" != n.TemplatePath) { var i = -1; if ($.each(Robin.Data.PipeLayerInfos, function (e, o) { return o.LayerName == n.LayerName ? ($.extend(Robin.Data.PipeLayerInfos[e], Robin.Setting.PipeLayerInfos[t]), i = e, !1) : void 0 }), -1 == i) { var e = {}; $.extend(e, Robin.Setting.PipeLayerInfos[t]), Robin.Data.PipeLayerInfos.push(e) } } }) } }, Robin.HeatMap.HeatData = function (t, n, i) { var e = {}, o = {}, a = {}, o = {}; return e.attributes = {}, a.wkid = t, a = a.wkid, o.spatialReference = a, o.type = "point", o.x = n, o.y = i, e.geometry = o, e }, Robin.HeatMap.AddMap = function (t, n, i, e, o, a, r, l) { if (Robin.HeatMap.heatLayer) { var s = t.getLayer(Robin.HeatMap.heatLayer.id); s && null != s && (t.removeLayer(s), Robin.HeatMap.heatLayer = null) } var p = { config: { useLocalMaximum: !0, radius: 60, gradient: {} }, map: t, domNodeId: e, opacity: .55 }, c = {}, u = {}, b = {}; c[l] = "rgb(000,000,255)", c[r] = "rgb(000,255,255)", c[a] = "rgb(000,255,000)", c[o] = "rgb(255,255,000)", c["1.00"] = "rgb(255,000,000)", u.gradient = c, b.config = u; var f = $.extend(!0, {}, p, b); dojo.connect(dijit.byId(n), "resize", t, t.resize), Robin.HeatMap.heatLayer = new HeatmapLayer(f), t.addLayer(Robin.HeatMap.heatLayer), t.resize(), Robin.HeatMap.data = i, Robin.HeatMap.GetFeatures(), dojo.connect(t, "onExtentChange", Robin.HeatMap.GetFeatures) }, Robin.HeatMap.GetFeatures = function () { null != Robin.HeatMap.heatLayer && Robin.HeatMap.heatLayer.setData(Robin.HeatMap.data) }, Robin.HeatMap.ClearHeatLayer = function (t) { if (Robin.HeatMap.heatLayer) { var n = t.getLayer(Robin.HeatMap.heatLayer.id); null != n && (t.removeLayer(n), Robin.HeatMap.heatLayer = null) } }, Robin.Host = { DirectPath: function () { var t = location.pathname; return t = t.substring(0, t.indexOf("/", 1)), "/" != t.substring(0, 1) && (t = "/" + t), location.protocol + "//" + location.host + t + "/" } }, this.Robin || (Robin = {}), this["Robin.Application"] || (Robin.Application = {}), this["Robin.Logger"] || (Robin.Logger = {}), this["Robin.Template"] || (Robin.Template = {}), Robin.Logger.Minlevel = 1, Robin.Logger.HideTimeout = 1e4, Robin.Application.InitializeCompleteModules = {}, Robin.Application.ContextData = null, Robin.Application.EventData = null, Robin.Application.PublishData = null, Robin.Logger.Info = function (t, n) { Robin.Logger.NotyInfo("information", 1, t, n) }, Robin.Logger.Alert = function (t, n) { Robin.Logger.NotyInfo("alert", 4, t, n) }, Robin.Logger.Warning = function (t, n) { Robin.Logger.NotyInfo("warning", 8, t, n) }, Robin.Logger.Error = function (t, n) { Robin.Logger.NotyInfo("error", 16, t, n) }, Robin.Logger.NotyInfo = function (t, n, i, e) { n < Robin.Logger.Minlevel || (Robin.IsEmpty(e) && (e = "bottomRight"), null != i && (i = "undefined" != typeof i.number && "description" != typeof i.number ? i.name + ";" + i.number + ";" + i.description + ";" + i.message + ";" + i.stack + ";" : i.toString(), noty ? noty({ text: i, type: t, layout: e }).setTimeout(Robin.Logger.HideTimeout) : alert("NotyInfo --> " + i))) }, Robin.Application.LoadCSS = function (t) { $('<link  rel="stylesheet" type="text/css" />').appendTo($("head").get(0)).attr("href", t) }, Robin.Application.LoadJavascript = function (t) { $("<script>").attr({ language: "javascript", type: "application/javascript", src: t }).appendTo("head") }, Robin._LOADHTMLCACHE = {}, Robin.Application.LoadHtml = function (t, n, i) { Robin.IsEmpty(Robin._LOADHTMLCACHE[t]) ? $.get(t, null, function (e, o) { Robin._LOADHTMLCACHE[t] = e, "string" == typeof n ? $("#" + n).html(Robin._LOADHTMLCACHE[t]) : n.html(Robin.Template._HTMLCACHE[t]), Robin.IsEmpty(i) || "function" != typeof i || i() }, "html") : ("string" == typeof n ? $("#" + n).html(Robin._LOADHTMLCACHE[t]) : n.html(Robin._LOADHTMLCACHE[t]), Robin.IsEmpty(i) || "function" != typeof i || i()) }, Robin.Application.LoadModule = function (t) { if ("string" != typeof t) { var n = t.Container; Robin.IsEmpty(n) && (n = $("#_BodyDIV")); var i = n.data("_AppName"); if (t.Container = n, Robin.IsEmpty(t.Name) || Robin.IsEmpty(Robin.Application.InitializeCompleteModules[t.Name])) if (Robin.IsEmpty(t.Element)) $.get(t.Url, null, function (e, o) { Robin.IsEmpty(i) || Robin.IsEmpty(Robin.Application.InitializeCompleteModules[i]) || (Robin.Application.InitializeCompleteModules[i].Visibility = !1, Robin.Application.InitializeCompleteModules[i].JqueryObject.css("display", "none")); var a = $("<div align='center'></div>"); if (a.append($(e)), n.append(a), t.JqueryObject = a, Robin.IsEmpty(t.Name) || (Robin.Application.InitializeCompleteModules[t.Name] = t), n.data("_AppName", t.Name), t.LoadCompleted = !0, t.Container.css({ opacity: .1 }), t.Container.animate({ opacity: 1 }, 300), t.Visibility = !0, $.isFunction(t.Callback) && t.Callback(t), t.HasJsFild) { var r = t.Url.substring(0, t.Url.lastIndexOf(".")) + ".js"; RequireJS([r], function () { try { window.eval("" + t.Name + "_Start('" + t.Name + "')") } catch (n) { Robin.Logger.Info(n) } }) } }, "html"); else { Robin.IsEmpty(i) || Robin.IsEmpty(Robin.Application.InitializeCompleteModules[i]) || (Robin.Application.InitializeCompleteModules[i].Visibility = !1, Robin.Application.InitializeCompleteModules[i].JqueryObject.css("display", "none")); var e = $("<div align='center'></div>"); if (e.append(t.Element), n.append(e), t.JqueryObject = e, Robin.IsEmpty(t.Name) || (Robin.Application.InitializeCompleteModules[t.Name] = t), n.data("_AppName", t.Name), t.LoadCompleted = !0, t.Container.css({ opacity: .1 }), t.Container.animate({ opacity: 1 }, 300), t.Visibility = !0, $.isFunction(t.Callback) && t.Callback(t), t.HasJsFild) { var o = t.Url.substring(0, t.Url.lastIndexOf(".")) + ".js"; RequireJS([o], function () { try { window.eval("" + t.Name + "_Start('" + t.Name + "')") } catch (n) { Robin.Logger.Info(n) } }) } } else { if (i == t.Name) return; if (!Robin.IsEmpty(i) && !Robin.IsEmpty(Robin.Application.InitializeCompleteModules[i])) { Robin.Application.InitializeCompleteModules[i].Visibility = !1; var a = Robin.Application.InitializeCompleteModules[i].JqueryObject; a.css("display", "none"), a[0].style.display = "none" } var t = Robin.Application.InitializeCompleteModules[t.Name]; n.data("_AppName", t.Name), t.Container.css({ opacity: .1 }), t.Container.animate({ opacity: 1 }, 500), t.Visibility = !0, t.JqueryObject.css("display", "") } } else if (!Robin.IsEmpty(Robin.Application.InitializeCompleteModules[t])) { var r = Robin.Application.InitializeCompleteModules[t], i = r.Container.data("_AppName"); Robin.IsEmpty(i) || Robin.IsEmpty(Robin.Application.InitializeCompleteModules[i]) || (Robin.Application.InitializeCompleteModules[i].Visibility = !1, Robin.Application.InitializeCompleteModules[i].JqueryObject.css("display", "none")), r.Container.data("_AppName", t), r.JqueryObject.css("display", ""), r.Container.css({ opacity: .1 }), r.Container.animate({ opacity: 1 }, 300), r.Visibility = !0 } }, Robin.Application.UnLoadModule = function (t) { Robin.IsEmpty(Robin.Application.InitializeCompleteModules[t]) || (Robin.Application.InitializeCompleteModules[t].JqueryObject.remove(), null == Robin.Application.InitializeCompleteModules[t].JqueryObject, delete Robin.Application.InitializeCompleteModules[t].JqueryObject), Robin.Application.InitializeCompleteModules[t] = null, delete Robin.Application.InitializeCompleteModules[t] }, Robin.Application.GetApplicationActivatedModule = function () { var t = $("#_BodyDIV").data("_AppName"); return Robin.IsEmpty(t) ? null : Robin.Application.InitializeCompleteModules[t] }, Robin.Application.GetModule = function (t) { return Robin.IsEmpty(t) || Robin.IsEmpty(Robin.Application.InitializeCompleteModules[t]) ? void 0 : Robin.Application.InitializeCompleteModules[t] }, Robin.Application.Module = function (t, n, i, e, o, a) { this.Name = t, this.JqueryObject = null, this.ContextData = new Robin.ContextData, this.Url = n, this.Element = null, this.Callback = i, this.Container = e, this.Visibility = !0, this.Enable = !0, this.HasJsFild = o, this.LoadCompleted = !1, this.EventData = new Robin.EventData, a && (this.Url = a + this.Url) }, Robin.IsEmpty = function (t) { return "undefined" == typeof t ? !0 : null == t ? !0 : "" == t ? !0 : !1 }, Robin.GetString = function (t) { return "undefined" == typeof t ? "" : null == t ? "" : "" == t ? "" : t.toString() }, Robin.ContextData = function () { this.contextDataObjects = {}, this.SetObject = function (t, n) { this.contextDataObjects[t] = n }, this.GetObject = function (t) { return this.contextDataObjects[t] }, this.Remove = function (t) { return this.contextDataObjects[t] = null, delete this.contextDataObjects[t], !0 }, this.RemoveAll = function () { contextDataObjects = {} } }, Robin.Application.ContextData = new Robin.ContextData, Robin.EventData = function () { this.listeners = {}, this.addEventListener = function (t, n, i) { for (var e = [], o = arguments.length, a = 0; o > a; a++) e.push(arguments[a]); e = e.length > 3 ? e.splice(3, e.length - 1) : [], "undefined" != typeof this.listeners[t] ? this.listeners[t].push({ scope: i, callback: n, args: e }) : this.listeners[t] = [{ scope: i, callback: n, args: e }] }, this.removeEventListener = function (t, n, i) { if ("undefined" != typeof this.listeners[t]) { for (var e = this.listeners[t].length, o = [], a = 0; e > a; a++) { var r = this.listeners[t][a]; r.scope == i && r.callback == n || o.push(r) } this.listeners[t] = o } }, this.hasEventListener = function (t, n, i) { if ("undefined" != typeof this.listeners[t]) { var e = this.listeners[t].length; if (void 0 === n && void 0 === i) return e > 0; for (var o = 0; e > o; o++) { var a = this.listeners[t][o]; if ((i ? a.scope == i : !0) && a.callback == n) return !0 } } return !1 }, this.dispatch = function (t, n) { for (var i = 0, e = { type: t, target: n }, o = [], a = arguments.length, r = 0; a > r; r++) o.push(arguments[r]); if (o = o.length > 2 ? o.splice(2, o.length - 1) : [], o = [e].concat(o), "undefined" != typeof this.listeners[t]) for (var l = this.listeners[t].length, r = 0; l > r; r++) { var s = this.listeners[t][r]; if (s && s.callback) { var p = o.concat(s.args); s.callback.apply(s.scope, p), i += 1 } } }, this.getEvents = function () { var t = ""; for (var n in this.listeners) for (var i = this.listeners[n].length, e = 0; i > e; e++) { var o = this.listeners[n][e]; t += o.scope && o.scope.className ? o.scope.className : "anonymous", t += " listen for '" + n + "'\n" } return t } }, Robin.Application.EventData = new Robin.EventData, Robin.PublishData = function () { this.baseDataObjects = {}, this.devDataObjects = {}, this.init = function (t) { }, this.Refresh = function () { this.baseDataObjects = {}, this.devDataObjects = {}, this.init() } }, Robin.Application.PublishData = new Robin.PublishData, Robin.Template._HTMLCACHE = {}, Robin.Template.RenderWithHtml = function (t, n, i, e) { var o = $.templates(t).render(n); return Robin.IsEmpty(i) ? (Robin.IsEmpty(e) || "function" != typeof e || e(), o) : void ("string" == typeof i ? ($("#" + i).html(o), Robin.IsEmpty(e) || "function" != typeof e || e()) : (i.html(o), Robin.IsEmpty(e) || "function" != typeof e || e())) }, Robin.Template.RenderWithUrl = function (t, n, i, e) { Robin.IsEmpty(Robin.Template._HTMLCACHE[t]) ? $.get(t, null, function (o, a) { Robin.Template._HTMLCACHE[t] = o, Robin.Template.RenderWithHtml(o, n, i, e) }, "html") : Robin.Template.RenderWithHtml(Robin.Template._HTMLCACHE[t], n, i, e) }, Robin.Template.RenderWithName = function (t, n, i) { var e = $.render[t](n); "string" == typeof i ? $("#" + i).html(e) : i.html(e) }, Robin.Template.CompiledTemplate = function (t) { return $.templates(t) }, Robin.Template.RegisterTemplate = function (t, n) { return $.templates(t, n) }, Robin.Template.RenderWithHtml = function (t, n, i, e) { var o = $.templates(t).render(n); return Robin.IsEmpty(i) ? (Robin.IsEmpty(e) || "function" != typeof e || e(), o) : void ("string" == typeof i ? ($("#" + i).html(o), Robin.IsEmpty(e) || "function" != typeof e || e()) : (i.html(o), Robin.IsEmpty(e) || "function" != typeof e || e())) }, Robin.Template.GetInfoRenderWithUrl = function (url, data, callback, replace) { var htmlResult; Robin.IsEmpty(Robin.Template._HTMLCACHE[url]) ? $.get(url, null, function (html, textStatus) { if (replace) for (var length = replace.arr1.length, i = 0; length > i; i++) html = html.replace(eval("/" + replace.arr1[i] + "/gi"), replace.arr2[i]); Robin.Template._HTMLCACHE[url] = html, htmlResult = $.templates(html).render(data), callback && $.isFunction(callback) && callback(htmlResult) }, "html") : (htmlResult = $.templates(Robin.Template._HTMLCACHE[url]).render(data), callback && $.isFunction(callback) && callback(htmlResult)) }, Robin.Template.GetTemplatePathByLayerInfoName = function (t) { var n = null; return Robin.Data && Robin.Data.PipeLayerInfos && $.each(Robin.Data.PipeLayerInfos, function (i, e) { return e.LayerName == t ? (n = e.TemplatePath, !1) : void 0 }), n }, Robin.Template.GetLayerInfoByName = function (t) { var n = null; return Robin.Data && Robin.Data.PipeLayerInfos && $.each(Robin.Data.PipeLayerInfos, function (i, e) { return e.LayerName == t ? (n = e, !1) : void 0 }), n }, Robin.Application.retainedDecimalPlaces = function (t, n) { try { return t ? t = parseFloat(t).toFixed(n) : "0" } catch (i) { return t } }, this["Robin.Map"] || (Robin.Map = {}), Robin.Map = { Map2DControl: null, mapType: "未定义", init: function () { var t = Robin.Setting.GlobalSetting.Map; if (void 0 != t.current && $.isNumeric(t.current) && t.datas && t.datas.length >= t.current) { var n = t.datas[t.current], i = n.file; n.file.indexOf("http://") < 0 && n.file.indexOf("https://") < 0 && (i = Robin.Utils.Host.DirectPath() + n.file), Robin.Application.LoadJavascript(i), $.extend(!0, Robin.Map, Robin.MapInstance) } }, InitMap: function (t) { }, Tool: { toScreen: function (t) { } }, Query: function (t, n, i, e) { }, Search: {}, Printing: {}, Analysis: {}, Geometry: { drawPoint: function (t, n, i) { }, drawPolygon: function (t) { }, drawPolyline: function (t) { }, drawGraphic: function (t, n, i, e) { } }, Event: { bindClickEvent: function (t, n) { } }, MapService: {}, addLayer: function (t) { }, GetPoint: function (t, n) { }, GetPolygon: function () { }, GetPolyline: function () { }, GetGraphic: function (t, n, i) { }, GetGraphicLayer: function (t, n) { }, GetLayer: function (t, n, i) { }, ShowGraphic: function (t, n, i, e, o, a, r) { }, ClearLayer: function (t, n) { }, GetGraphicByGeometry: function (t) { }, Fly2Geometry: function (t, n, i) { }, Extent1ContainExtent2: function (t, n) { }, Union2Extent: function (t, n) { }, GetFullExtentFromPoints: function (t, n) { }, Symbol: { markSymbol: function () { }, fillSymbol: function () { }, lineSymbol: function () { }, txtSymbol: function (t, n, i, e) { }, customMarkSymbol: function (t, n) { }, customFillSymbol: function (t) { }, customPicFillSymbol: function (t, n, i) { }, customLineSymbol: function (t, n) { }, pictureMarkerSymbol: function (t, n, i, e, o) { } } }, Array.prototype.Compact = function () { for (var t = this, n = 0; n < t.length; n++) ("undefined" == typeof t[n] || null == t[n]) && (t.RemoveAt(n), n--); return t }, Array.prototype.SortNumber = function (t) { return null == this || 1 == this.length ? this : "number" == typeof this[0] ? this.sort(function (t, n) { return t - n }) : "object" == typeof this[0] && "string" == typeof t ? this.sort(function (n, i) { return n[t] > i[t] ? 1 : -1 }) : void 0 }, Array.prototype.SortNumberDesc = function (t) { return null == this || 1 == this.length ? this : "number" == typeof this[0] ? this.sort(function (t, n) { return n - t }) : "object" == typeof this[0] && "string" == typeof t ? this.sort(function (n, i) { return i[t] > n[t] ? 1 : -1 }) : void 0 }, Array.prototype.RemoveAt = function (t) { return 0 > t || t >= this.length ? this : this.splice(t, 1) }, Array.prototype.IndexOf = function (t) { for (var n = 0; n < this.length; n++) if (this[n] == t) return n; return -1 }, Array.prototype.LastIndexOf = function (t) { for (var n = this.length - 1; n >= 0; n--) if (this[n] == t) return n; return -1 }, Array.prototype.Contains = function (t) { return -1 != this.IndexOf(t) }, Array.prototype.Copy = function () { return this.concat() }, Array.prototype.InsertAt = function (t, n) { this.splice(n, 0, t) }, Array.prototype.InsertBefore = function (t, n) { var i = this.IndexOf(n); -1 == i ? this.push(t) : this.splice(i, 0, t) }, Array.prototype.Remove = function (t) { var n = this.IndexOf(t); return -1 != n ? (this.splice(n, 1), !0) : !1 }, Array.prototype.AddRange = function (t) { if (null != t && 0 != t.length) for (var n = 0; n < t.length; n++) this.push(t[n]) }, Array.prototype.InsertAt = function (t, n) { this.splice(n, 0, t) }, Array.prototype.InsertBefore = function (t, n) { var i = this.IndexOf(n); -1 == i ? this.push(t) : this.splice(i, 0, t) }, Array.prototype.Unique = function () { for (var t = [], n = 0; n < this.length; n++) t.Contains(this[n]) || t.push(this[n]); this.length = t.length; for (var n = 0; n < t.length; n++) this[n] = t[n] }, String.prototype.LTrim = function () { return this.replace(/^\s*/, "") }, String.prototype.RTrim = function () { return this.replace(/\s*$/, "") }, String.prototype.Trim = function () { return this.replace(/(^\s+)|\s+$/g, "") }, String.prototype.EndWith = function (t) { return this.substr(this.length - t.length) == t }, String.prototype.StartWith = function (t) { return this.substr(0, t.length) == t }, String.prototype.endWith = String.prototype.EndWith, String.prototype.startWith = String.prototype.StartWith, String.prototype.Format = function () { for (var t = this, n = 0; n < arguments.length; n++) t = t.replace("{" + n + "}", arguments[n]); return t }, String.prototype.GetFormatParameters = function () { var t = this, n = /\{[^\{\}]*\}/gi, i = t.match(n); if (null == i) return null; for (var e = 0; e < i.length; e++) i[e] = i[e].substring(1, i[e].length - 1); return i }, String.prototype.RemoveSpaces = function () { return this.replace(new RegExp(" ", "gi"), "") }, String.prototype.RemoveExtraSpaces = function () { return this.replace(/\s+/g, " ") }, String.prototype.EncodeURI = function () { var t; return t = escape(this), t = t.replace(/\+/g, "%2B") }, String.prototype.DecodeURI = function () { return unescape(this) }, String.prototype.ConvertEntity = function () { if (this.length < 1) return ""; var t = this.toString(); return t = t.replace(/&/gi, "&amp;"), t = t.replace(/</gi, "&lt;"), t = t.replace(/>/gi, "&gt;"), t = t.replace(/'/gi, "&apos;"), t = t.replace(/"/gi, "&quot;") }, String.prototype.DeconvertEntity = function () { if (this.length < 1) return ""; var t = this.toString(); return t = t.replace(/&lt;/gi, "<"), t = t.replace(/&gt;/gi, ">"), t = t.replace(/&apos;/gi, "'"), t = t.replace(/&quot;/gi, '"'), t = t.replace(/&amp;/gi, "&") }, String.prototype.IsEmail = function () { return /^([a-z][a-z0-9\_\.]*[a-z0-9])(@)(([a-z0-9][a-z0-9\-]*[a-z0-9][\.])+(com|cn|net|hk|tw|au|uk|de|tv|info|biz))$/gi.test(this) }, String.prototype.IsNumber = function () { var t = /^\d*$/; return t.test(this) }, String.prototype.Camelize = function () { for (var t = this.split("-"), n = t[0], i = 1; i < t.length; i++) { var e = t[i]; n += e.charAt(0).toUpperCase() + e.substring(1) } return n }, String.prototype.Left = function (t) { return isNaN(t) || null == t ? t = this.length : (parseInt(t) < 0 || parseInt(t) > this.length) && (t = this.length), this.substr(0, t) }, String.prototype.Right = function (t) { return isNaN(t) || null == t ? t = this.length : (parseInt(t) < 0 || parseInt(t) > this.length) && (t = this.length), this.substring(this.length - t, this.length) }, String.prototype.IsLongDate = function () { var t = this.replace(/(^\s*)|(\s*$)/g, "").match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/); if (null == t) return !1; var n = new Date(t[1], t[3] - 1, t[4], t[5], t[6], t[7]); return n.getFullYear() == t[1] && n.getMonth() + 1 == t[3] && n.getDate() == t[4] && n.getHours() == t[5] && n.getMinutes() == t[6] && n.getSeconds() == t[7] }, String.prototype.IsShortDate = function () { var t = this.replace(/(^\s*)|(\s*$)/g, "").match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/); if (null == t) return !1; var n = new Date(t[1], t[3] - 1, t[4]); return n.getFullYear() == t[1] && n.getMonth() + 1 == t[3] && n.getDate() == t[4] }, String.prototype.GetByteForUTF = function () { var t = this; return t = t.replace(/[\u0000-\u007f]/g, "a"), t = t.replace(/[\u0080-\u07ff]/g, "aa"), t = t.replace(/[\u0800-\uffff]/g, "aaa"), t.length }, String.prototype.GetByteForGB = function () { var t = this; return t.replace(/[^\u0000-\u007f]/g, "aa").length }, String.prototype.IsDate = function () { return this.IsLongDate() || this.IsShortDate() }, String.prototype.ExistChinese = function () { return /^[\x00-\xff]*$/.test(this) ? !1 : !0 }, String.prototype.IsColor = function () { return /^[0-9a-fA-F]{6}$/gi.test(this) }, String.prototype.ToCase = function () { for (var t = "", n = 0; n < this.length; n++) t += String.fromCharCode(this.charCodeAt(n) > 0 && this.charCodeAt(n) < 255 ? this.charCodeAt(n) + 65248 : this.charCodeAt(n)); return t }, String.prototype.ToHtmlEncode = function () { var t = this; return t = t.replace(/&/g, "&amp;"), t = t.replace(/</g, "&lt;"), t = t.replace(/>/g, "&gt;"), t = t.replace(/\'/g, "&apos;"), t = t.replace(/\"/g, "&quot;"), t = t.replace(/\n/g, "<br>"), t = t.replace(/\ /g, "&nbsp;"), t = t.replace(/\t/g, "&nbsp;&nbsp;&nbsp;&nbsp;") }, String.prototype.IsPlusNumeric = function () { return isNaN(this) || -1 != this.indexOf("-") ? !1 : !0 }, String.prototype.IsNumeric = function () { return isNaN(this) ? !1 : !0 }, String.prototype.IsInteger = function () { return isNaN(this) || -1 != this.indexOf(".") || -1 != this.indexOf("-") ? !1 : !0 }, String.prototype.GetQuery = function (t, n) { var i = window.location.href.split(t + "=")[1]; return !i || i.length < 1 ? n : (i = i.split("&")[0], i = i.split("#")[0]) }, String.prototype.DisplayLength = function () { for (var t = this, n = 0, i = 0; i < t.length; i++) { var e = t.charCodeAt(i); n += e >= 1 && 126 >= e || e >= 65376 && 65439 >= e ? .85 : 2 } return n }, Number.prototype.ToFixed = function (t) { return isNaN(t) || null == t ? t = 0 : 0 > t && (t = 0), Math.round(this * Math.pow(10, t)) / Math.pow(10, t) }, Number.prototype.Inrange = function (t, n) { return this > t && n > this }, Error.prototype.toString = function () { return this.message }, Function.prototype.Bind = function (t) { var n = this; return function () { n.apply(t, arguments) } }, Array.prototype.Clone = function () { if (0 == this.length) return []; for (var t = [], n = 0; n < this.length; n++) { var i = this[n]; t.push(null == i ? null : i.Clone) } return t }, Function.prototype.CreateCallback = function () { var t = arguments, n = this; return function () { return n.apply(window, t) } }, Function.prototype.CreateDelegate = function (t, n, i) { var e = this; return function () { var o = n || arguments; if (i === !0) o = Array.prototype.slice.call(arguments, 0), o = o.concat(n); else if ("number" == typeof i) { o = Array.prototype.slice.call(arguments, 0); var a = [i, 0].concat(n); Array.prototype.splice.apply(o, a) } return e.apply(t || window, o) } }, Function.prototype.Defer = function (t, n, i, e) { var o = this.CreateDelegate(n, i, e); return t ? setTimeout(o, t) : (o(), 0) }, Function.prototype.CreateSequence = function (t, n) { if ("function" != typeof t) return this; var i = this; return function () { var e = i.apply(this || window, arguments); return t.apply(n || this || window, arguments), e } }, Function.prototype.CreateInterceptor = function (t, n) { if ("function" != typeof t) return this; var i = this; return function () { return t.target = this, t.method = i, t.apply(n || this || window, arguments) !== !1 ? i.apply(this || window, arguments) : void 0 } }, Date.prototype.Format = function (t) { var n = { "M+": this.getMonth() + 1, "d+": this.getDate(), "h+": this.getHours() % 12 == 0 ? 12 : this.getHours() % 12, "H+": this.getHours(), "m+": this.getMinutes(), "s+": this.getSeconds(), "q+": Math.floor((this.getMonth() + 3) / 3), S: this.getMilliseconds() }, i = { 0: "/u65e5", 1: "/u4e00", 2: "/u4e8c", 3: "/u4e09", 4: "/u56db", 5: "/u4e94", 6: "/u516d" }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))), /(E+)/.test(t) && (t = t.replace(RegExp.$1, (RegExp.$1.length > 1 ? RegExp.$1.length > 2 ? "/u661f/u671f" : "/u5468" : "") + i[this.getDay() + ""])); for (var e in n) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? n[e] : ("00" + n[e]).substr(("" + n[e]).length))); return t };