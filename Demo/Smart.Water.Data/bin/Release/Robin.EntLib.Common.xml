<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Robin.EntLib.Common</name>
    </assembly>
    <members>
        <member name="T:Robin.EntLib.Common.DynamicScript.ScriptEngine">
            <summary>
            动态脚本执行引擎。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.References(System.String)">
            <summary>
            添加一个程序集路径到脚本引擎编译器中。
            </summary>
            <param name="assembly">程序集路径（绝对路径）；</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.Using(System.String)">
            <summary>
            添加一个引用到脚本中使此命名空间可用。
            </summary>
            <param name="Namespace">命名空间名称（没有分号和Using），例如 "System.Drawing"。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.SetStaticFunction(System.Type,System.String)">
            <summary>
            设置一个静态函数到当前动态脚本中。
            </summary>
            <param name="typeOfAssembly">静态函数所属程序集。</param>
            <param name="MethodName">函数名称。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.SetMemberFunction(System.Object,System.String)">
            <summary>
            设置一个函数到当前动态脚本中。
            </summary>
            <param name="instance">函数所属实例。</param>
            <param name="MethodName">函数名称。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.SetCode(System.String)">
            <summary>
            设置脚本代码。
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.DeclareGlobal(System.String,System.Type)">
            <summary>
            在脚本上下文中定义全局变量，使脚本可以访问到外界对象。
            </summary>
            <param name="name">变量名称。</param>
            <param name="t">变量类型。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.DeclareGlobal(System.String,System.Type,System.Object)">
            <summary>
            在脚本上下文中定义全局变量，并赋予默认的值，使脚本可以访问到外界对象。
            </summary>
            <param name="name">变量名称。</param>
            <param name="t">变量类型。</param>
            <param name="defaultvalue">默认值。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.GlobalSet(System.String,System.Object)">
            <summary>
            在脚本运行时设置全局变量。
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.GlobalGet(System.String)">
            <summary>
            在脚本运行时获取全局变量。
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.GetFunction(System.String)">
            <summary>
            得到动态脚本中定义的函数。
            </summary>
            <param name="methodName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.Execute(System.String,System.Object[])">
            <summary>
            执行动态脚本中定义的函数。
            </summary>
            <param name="methodName">函数名称。</param>
            <param name="parameters">函数所需参数列表。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptEngine.Compile">
            <summary>
            编译脚本为内存程序集。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.DynamicScript.ScriptEngine.IsCompiled">
            <summary>
            脚本是否已经被编译。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.DynamicScript.ScriptInfo">
            <summary>
            动态脚本配置信息。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.DynamicScript.ScriptInfo.IsCodeCompiled">
            <summary>
            是否已经编译。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.DynamicScript.ScriptInfo.ScriptEngine">
            <summary>
            编译后的脚步挂接的ScriptEngine对象。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.DynamicScript.ScriptInfo.ScriptName">
            <summary>
            动态脚本名称唯一标识。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.DynamicScript.ScriptInfo.Description">
            <summary>
            动态脚本描述。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.DynamicScript.ScriptInfo.References">
            <summary>
            当前扩展需要装载的程序集。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.DynamicScript.ScriptInfo.Using">
            <summary>
            当前扩展需要添加的引用。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.DynamicScript.ScriptInfo.Code">
            <summary>
            扩展代码。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.DynamicScript.ScriptManager">
            <summary>
            动态脚本管理者
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptManager.ClearAll">
            <summary>
            清除所有的缓存。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptManager.AddScriptInfo(Robin.EntLib.Common.DynamicScript.ScriptInfo)">
            <summary>
            添加一个脚本配置到容器中。
            </summary>
            <param name="info">脚本引擎名称。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptManager.RefreshScriptInfo(Robin.EntLib.Common.DynamicScript.ScriptInfo)">
            <summary>
            刷新容器中的脚本对象。
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptManager.Remove(System.String)">
            <summary>
            从容器中移除一个脚本。
            </summary>
            <param name="scriptName">脚本唯一标示。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptManager.Execute(System.String,System.String,System.Object[])">
            <summary>
             执行动态函数。
            </summary>
            <param name="scriptName">脚本名称。</param>
            <param name="methodName">方法名称。</param>
            <param name="parameters">参数列表。</param>
        </member>
        <member name="M:Robin.EntLib.Common.DynamicScript.ScriptManager.TestScriptInfo(Robin.EntLib.Common.DynamicScript.ScriptInfo)">
            <summary>
            测试当前脚本配置语法是否正确，当编译失败会抛出异常信息！
            </summary>
            <param name="info">需要测试的脚步配置。</param>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.IServicesDetection">
            <summary>
            检查当前系统环境。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledIIS4">
            <summary>
            是否安装IIS4。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledIIS5">
            <summary>
            是否安装IIS5。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledIIS51">
            <summary>
            是否安装IIS51。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledIIS6">
            <summary>
            是否安装IIS6。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledIIS7">
            <summary>
            是否安装IIS7。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledCommon">
            <summary>
            是否安装Common Internet Information Services。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledASP">
            <summary>
            是否安装Active Server Pages。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledFTP">
            <summary>
            是否安装File Transfer Protocol (FTP)。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledInetMgr">
            <summary>
            是否安装Internet Information Services Manager。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledInternetDataConnector">
            <summary>
            是否安装Internet Data Connector。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledNNTP">
            <summary>
            是否安装Network News Transfer Protocl (NNTP) service。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledServerSideIncludes">
            <summary>
            是否安装Server-Side Includes 。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledSMTP">
            <summary>
            是否安装Simple Mail Transfer Protocol (SMTP) service 。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledWebDAV">
            <summary>
            是否安装Web Distributed Authoring and Versioning (WebDAV) publishing。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledWWW">
            <summary>
            是否安装World Wide Web (WWW) service 。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledRemoteAdmin">
            <summary>
            是否安装Remote administration。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledRemoteBitsISAPI">
            <summary>
            是否安装Internet Server Application Programming Interface (ISAPI) for Background Intelligent Transfer Service (BITS) server extensions 。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledRemoteBits">
            <summary>
            是否安装Background Intelligent Transfer Service (BITS) server extensions。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledRemoteFrontPageExtensions">
            <summary>
            是否安装FrontPage server extensions。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledInternetPrinting">
            <summary>
            是否安装 Internet printing 。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledTSWebClient">
            <summary>
            是否安装ActiveX control and sample pages for hosting Terminal Services client。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledWCF">
            <summary>
            是否安装WCF。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledWPF">
            <summary>
            是否安装WPF。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledWF">
            <summary>
            是否安装WF。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsInstalledCardSpace">
            <summary>
            是否安装CardSpace。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsAspNetRegisteredFx10">
            <summary>
            是否安装.NET Framework 1.0。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsAspNetRegisteredFx11">
            <summary>
            是否安装.NET Framework 1.1。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsAspNetRegisteredFx20">
            <summary>
            是否安装.NET Framework 2.0。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsAspNetRegisteredFx30">
            <summary>
            是否安装.NET Framework 3.0。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsAspNetRegisteredFx35">
            <summary>
            是否安装.NET Framework 3.5。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.IServicesDetection.IsAspRegistered">
            <summary>
            是否安装ASP。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.ServicesDetection">
            <summary>
            检查当前系统环境
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledIIS4">
            <summary>
            是否安装IIS4。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledIIS5">
            <summary>
            是否安装IIS5。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledIIS51">
            <summary>
            是否安装IIS51。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledIIS6">
            <summary>
            是否安装IIS6。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledIIS7">
            <summary>
            是否安装IIS7。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledCommon">
            <summary>
            是否安装Common Internet Information Services。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledASP">
            <summary>
            是否安装Active Server Pages。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledFTP">
            <summary>
            是否安装File Transfer Protocol (FTP)。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledInetMgr">
            <summary>
            是否安装Internet Information Services Manager。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledInternetDataConnector">
            <summary>
            是否安装Internet Data Connector。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledNNTP">
            <summary>
            是否安装Network News Transfer Protocl (NNTP) service。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledServerSideIncludes">
            <summary>
            是否安装Server-Side Includes 。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledSMTP">
            <summary>
            是否安装Simple Mail Transfer Protocol (SMTP) service 。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledWebDAV">
            <summary>
            是否安装Web Distributed Authoring and Versioning (WebDAV) publishing。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledWWW">
            <summary>
            是否安装World Wide Web (WWW) service 。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledRemoteAdmin">
            <summary>
            是否安装Remote administration。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledRemoteBitsISAPI">
            <summary>
            是否安装Internet Server Application Programming Interface (ISAPI) for Background Intelligent Transfer Service (BITS) server extensions 。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledRemoteBits">
            <summary>
            是否安装Background Intelligent Transfer Service (BITS) server extensions。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledRemoteFrontPageExtensions">
            <summary>
            是否安装FrontPage server extensions。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledInternetPrinting">
            <summary>
            是否安装 Internet printing 。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledTSWebClient">
            <summary>
            是否安装ActiveX control and sample pages for hosting Terminal Services client。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledWCF">
            <summary>
            是否安装WCF。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledWPF">
            <summary>
            是否安装WPF。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledWF">
            <summary>
            是否安装WF。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsInstalledCardSpace">
            <summary>
            是否安装CardSpace。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsAspNetRegisteredFx10">
            <summary>
            是否安装.NET Framework 1.0。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsAspNetRegisteredFx11">
            <summary>
            是否安装.NET Framework 1.1。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsAspNetRegisteredFx20">
            <summary>
            是否安装.NET Framework 2.0。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsAspNetRegisteredFx30">
            <summary>
            是否安装.NET Framework 3.0。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsAspNetRegisteredFx35">
            <summary>
            是否安装.NET Framework 3.5。
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.Environment.ServicesDetection.IsAspRegistered">
            <summary>
            是否安装ASP。
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersion.Fx10">
            <summary>
            .NET Framework 1.0
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersion.Fx11">
            <summary>
            .NET Framework 1.1
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersion.Fx20">
            <summary>
            .NET Framework 2.0
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersion.Fx30">
            <summary>
            .NET Framework 3.0
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersion.Fx35">
            <summary>
            .NET Framework 3.5 (Orcas)
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection">
            <summary>
            Provides support for determining if a specific version of the .NET
            Framework runtime is installed and the service pack level for the
            runtime version.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx10RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx10RegKeyValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx10SPxMSIRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx10SPxOCMRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx10SPxRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx11RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx20RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx35RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx11PlusRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30PlusRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx11PlusSPxRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx20PlusBuildRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30PlusVersionRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx35PlusBuildRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30PlusWCFRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30PlusWPFRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30PlusWFRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.Netfx30PlusWFPlusVersionRegValueName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.CardSpaceServicesRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.CardSpaceServicesPlusImagePathRegName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetRegistryValue``1(Microsoft.Win32.RegistryHive,System.String,System.String,Microsoft.Win32.RegistryValueKind,``0@)">
            <summary>
            Gets the registry value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hive">The hive.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="kind">The kind.</param>
            <param name="data">The data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx10Installed">
            <summary>
            Determines whether [is netfx10 installed].
            </summary>
            <returns><c>true</c> if [is netfx10 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx11Installed">
            <summary>
            Determines whether [is netfx11 installed].
            </summary>
            <returns><c>true</c> if [is netfx11 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx20Installed">
            <summary>
            Determines whether [is netfx20 installed].
            </summary>
            <returns><c>true</c> if [is netfx20 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx30Installed">
            <summary>
            Determines whether [is netfx30 installed].
            </summary>
            <returns><c>true</c> if [is netfx30 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx35Installed">
            <summary>
            Determines whether [is netfx35 installed].
            </summary>
            <returns><c>true</c> if [is netfx35 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx10SPLevel">
            <summary>
            Gets the netfx10 SP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx11SPLevel">
            <summary>
            Gets the netfx11 SP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx20SPLevel">
            <summary>
            Gets the netfx20 SP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30SPLevel">
            <summary>
            Gets the netfx30 SP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx35SPLevel">
            <summary>
            Gets the netfx35 SP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx10ExactVersion">
            <summary>
            Gets the netfx10 exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx11ExactVersion">
            <summary>
            Gets the netfx11 exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx20ExactVersion">
            <summary>
            Gets the netfx20 exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30ExactVersion">
            <summary>
            Gets the netfx30 exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx35ExactVersion">
            <summary>
            Gets the netfx35 exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx30CardSpaceInstalled">
            <summary>
            Determines whether [is netfx30 card space installed].
            </summary>
            <returns><c>true</c> if [is netfx30 card space installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30CardSpaceSPLevel">
            <summary>
            Gets the netfx30 card space SP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30CardSpaceExactVersion">
            <summary>
            Gets the netfx30 card space exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx30WCFInstalled">
            <summary>
            Determines whether [is netfx30 WCF installed].
            </summary>
            <returns><c>true</c> if [is netfx30 WCF installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30WCFSPLevel">
            <summary>
            Gets the netfx30 WCFSP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30WCFExactVersion">
            <summary>
            Gets the netfx30 WCF exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx30WPFInstalled">
            <summary>
            Determines whether [is netfx30 WPF installed].
            </summary>
            <returns><c>true</c> if [is netfx30 WPF installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30WPFSPLevel">
            <summary>
            Gets the netfx30 WPFSP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30WPFExactVersion">
            <summary>
            Gets the netfx30 WPF exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsNetfx30WFInstalled">
            <summary>
            Determines whether [is netfx30 WF installed].
            </summary>
            <returns><c>true</c> if [is netfx30 WF installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30WFSPLevel">
            <summary>
            Gets the netfx30 WFSP level.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetNetfx30WFExactVersion">
            <summary>
            Gets the netfx30 WF exact version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsTabletOrMediaCenter">
            <summary>
            Determines whether [is tablet or media center].
            </summary>
            <returns><c>true</c> if [is tablet or media center]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsInstalled(Robin.EntLib.Common.Environment.Support.FrameworkVersion)">
            <summary>
            Determines if the specified .NET Framework version is installed
            on the local computer.
            </summary>
            <param name="frameworkVersion">One of the
            <see cref="T:Robin.EntLib.Common.Environment.Support.FrameworkVersion"/> values.</param>
            <returns><see langword="true"/> if the specified .NET Framework
            version is installed; otherwise <see langword="false"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.IsInstalled(Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary)">
            <summary>
            Determines if the specified .NET Framework Foundation Library is
            installed on the local computer.
            </summary>
            <param name="foundationLibrary">One of the
            <see cref="T:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary"/> values.</param>
            <returns><see langword="true"/> if the specified .NET Framework
            Foundation Library is installed; otherwise <see langword="false"/>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetServicePackLevel(Robin.EntLib.Common.Environment.Support.FrameworkVersion)">
            <summary>
            Retrieves the service pack level for the specified .NET Framework
            version.
            </summary>
            <param name="frameworkVersion">One of the
            <see cref="T:Robin.EntLib.Common.Environment.Support.FrameworkVersion"/> values.</param>
            <returns>An <see cref="T:System.Int32">integer</see> value representing
            the service pack level for the specified .NET Framework version. If
            the specified .NET Frameowrk version is not found, -1 is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetServicePackLevel(Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary)">
            <summary>
            Retrieves the service pack level for the specified .NET Framework
            Foundation Library.
            </summary>
            <param name="foundationLibrary">One of the
            <see cref="T:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary"/> values.</param>
            <returns>An <see cref="T:System.Int32">integer</see> value representing
            the service pack level for the specified .NET Framework Foundation
            Library. If the specified .NET Frameowrk Foundation Library is not
            found, -1 is returned.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetExactVersion(Robin.EntLib.Common.Environment.Support.FrameworkVersion)">
            <summary>
            Retrieves the exact version number for the specified .NET Framework
            version.
            </summary>
            <param name="frameworkVersion">One of the
            <see cref="T:Robin.EntLib.Common.Environment.Support.FrameworkVersion"/> values.</param>
            <returns>A <see cref="T:System.Version">version</see> representing
            the exact version number for the specified .NET Framework version.
            If the specified .NET Frameowrk version is not found, a
            <see cref="T:System.Version"/> is returned that represents a 0.0.0.0 version
            number.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.FrameworkVersionDetection.GetExactVersion(Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary)">
            <summary>
            Retrieves the exact version number for the specified .NET Framework
            Foundation Library.
            </summary>
            <param name="foundationLibrary">One of the
            <see cref="T:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary"/> values.</param>
            <returns>A <see cref="T:System.Version">version</see> representing
            the exact version number for the specified .NET Framework Foundation
            Library. If the specified .NET Frameowrk Foundation Library is not
            found, a <see cref="T:System.Version"/> is returned that represents a
            0.0.0.0 version number.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.Common">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.ASP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.FTP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.InetMgr">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.InternetDataConnector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.NNTP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.ServerSideIncludes">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.SMTP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.WebDAV">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.WWW">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.RemoteAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.BitsISAPI">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.FrontPageExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.InternetPrinting">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent.TSWebClient">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IISRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IISRegKeyValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IISRegKeyMinorVersionValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IISComponentRegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.Netfx11RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.Netfx20RegKeyName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.NetRegKeyValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.GetRegistryValue``1(Microsoft.Win32.RegistryHive,System.String,System.String,Microsoft.Win32.RegistryValueKind,``0@)">
            <summary>
            Gets the registry value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="hive">The hive.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="kind">The kind.</param>
            <param name="data">The data.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsIIS4Installed">
            <summary>
            Determines whether [is II s4 installed].
            </summary>
            <returns><c>true</c> if [is II s4 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsIIS5Installed">
            <summary>
            Determines whether [is II s5 installed].
            </summary>
            <returns><c>true</c> if [is II s5 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsIIS51Installed">
            <summary>
            Determines whether [is II S51 installed].
            </summary>
            <returns><c>true</c> if [is II S51 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsIIS6Installed">
            <summary>
            Determines whether [is II s6 installed].
            </summary>
            <returns><c>true</c> if [is II s6 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsIIS7Installed">
            <summary>
            Determines whether [is II s7 installed].
            </summary>
            <returns><c>true</c> if [is II s7 installed]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsIISComponentInstalled(System.String)">
            <summary>
            Determines whether [is IIS component installed] [the specified subcomponent].
            </summary>
            <param name="subcomponent">The subcomponent.</param>
            <returns><c>true</c> if [is IIS component installed] [the specified subcomponent]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsAspNet10Registered">
            <summary>
            Determines whether [is ASP net10 registered].
            </summary>
            <returns><c>true</c> if [is ASP net10 registered]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsAspNet11Registered">
            <summary>
            Determines whether [is ASP net11 registered].
            </summary>
            <returns><c>true</c> if [is ASP net11 registered]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsAspNet20Registered">
            <summary>
            Determines whether [is ASP net20 registered].
            </summary>
            <returns><c>true</c> if [is ASP net20 registered]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsInstalled(Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion)">
            <summary>
            Determines whether the specified IIS version is installed.
            </summary>
            <param name="iisVersion">The IIS version.</param>
            <returns><c>true</c> if the specified IIS version is installed; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsInstalled(Robin.EntLib.Common.Environment.Support.InternetInformationServicesComponent)">
            <summary>
            Determines whether the specified subcomponent is installed.
            </summary>
            <param name="subcomponent">The subcomponent.</param>
            <returns><c>true</c> if the specified subcomponent is installed; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsAspRegistered">
            <summary>
            Determines whether [is ASP registered].
            </summary>
            <returns><c>true</c> if [is ASP registered]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Environment.Support.InternetInformationServicesDetection.IsAspNetRegistered(Robin.EntLib.Common.Environment.Support.FrameworkVersion)">
            <summary>
            Determines whether [is ASP net registered] [the specified framework version].
            </summary>
            <param name="frameworkVersion">The framework version.</param>
            <returns><c>true</c> if [is ASP net registered] [the specified framework version]; otherwise, <c>false</c>.</returns>
            <remarks></remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion">
            <summary>
            
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion.IIS4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion.IIS5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion.IIS51">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion.IIS6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.InternetInformationServicesVersion.IIS7">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.Support.SystemMetric">
            <summary>
            Flags used with the Windows API GetSystemMetrics(SystemMetric smIndex)
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXSCREEN">
            <summary>
             Width of the screen of the primary display monitor, in pixels. 
            This is the same values obtained by calling GetDeviceCaps as 
            follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYSCREEN">
            <summary>
            Height of the screen of the primary display monitor, in pixels. 
            This is the same values obtained by calling GetDeviceCaps as 
            follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYVSCROLL">
            <summary>
            Width of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXVSCROLL">
            <summary>
            Height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYCAPTION">
            <summary>
            Height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXBORDER">
            <summary>
            Width of a window border, in pixels. This is equivalent to the
            SM_CXEDGE value for windows with the 3-D look. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYBORDER">
            <summary>
            Height of a window border, in pixels. This is equivalent to the 
            SM_CYEDGE value for windows with the 3-D look. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has
            a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the
            height of the horizontal border and SM_CYFIXEDFRAME is the width
            of the vertical border. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has
            a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the
            height of the horizontal border and SM_CYFIXEDFRAME is the width
            of the vertical border. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYVTHUMB">
            <summary>
            Height of the thumb box in a vertical scroll bar, in pixels
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXHTHUMB">
            <summary>
            Width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXICON">
            <summary>
            Default width of an icon, in pixels. The LoadIcon function can 
            load only icons with the dimensions specified by SM_CXICON and
            SM_CYICON
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYICON">
            <summary>
            Default height of an icon, in pixels. The LoadIcon function can 
            load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXCURSOR">
            <summary>
            Width of a cursor, in pixels. The system cannot create 
            cursors of other sizes.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYCURSOR">
            <summary>
            Height of a cursor, in pixels. The system cannot create cursors
             of other sizes.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMENU">
            <summary>
            Height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXFULLSCREEN">
            <summary>
            Width of the client area for a full-screen window on the primary
            display monitor, in pixels. To get the coordinates of the portion 
            of the screen not obscured by the system taskbar or by application 
            desktop toolbars, call the SystemParametersInfo function with the
            SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYFULLSCREEN">
            <summary>
            Height of the client area for a full-screen window on the primary
            display monitor, in pixels. To get the coordinates of the portion
            of the screen not obscured by the system taskbar or by application
            desktop toolbars, call the SystemParametersInfo function with the
            SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the
            height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a wheel is installed; zero otherwise
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYHSCROLL">
            <summary>
            Height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXHSCROLL">
            <summary>
            Width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; zero
            otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_SWAPBUTTON">
            <summary>
            Nonzero if the left and right mouse buttons are reversed; zero
            otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_RESERVED1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_RESERVED2">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_RESERVED3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_RESERVED4">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMIN">
            <summary>
            Minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMIN">
            <summary>
            Minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXSIZE">
            <summary>
            Width of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYSIZE">
            <summary>
            Height of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window 
            that can be resized, in pixels. SM_CXSIZEFRAME is the width of the
            horizontal border, and SM_CYSIZEFRAME is the height of the
            vertical border. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window 
            that can be resized, in pixels. SM_CXSIZEFRAME is the width of the
            horizontal border, and SM_CYSIZEFRAME is the height of the 
            vertical border. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMINTRACK">
            <summary>
            Minimum tracking width of a window, in pixels. The user cannot drag
            the window frame to a size smaller than these dimensions. A window
            can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMINTRACK">
            <summary>
            Minimum tracking height of a window, in pixels. The user cannot 
            drag the window frame to a size smaller than these dimensions. A 
            window can override this value by processing the WM_GETMINMAXINFO
            message
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXDOUBLECLK">
            <summary>
            Width of the rectangle around the location of a first click in a 
            double-click sequence, in pixels. The second click must occur 
            within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK 
            for the system to consider the two clicks a double-click
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYDOUBLECLK">
            <summary>
            Height of the rectangle around the location of a first click in a
            double-click sequence, in pixels. The second click must occur 
            within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK
            for the system to consider the two clicks a double-click. (The two
            clicks must also occur within a specified time.) 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXICONSPACING">
            <summary>
            Width of a grid cell for items in large icon view, in pixels. Each
            item fits into a rectangle of size SM_CXICONSPACING by 
            SM_CYICONSPACING when arranged. This value is always greater 
            than or equal to SM_CXICON
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYICONSPACING">
            <summary>
            Height of a grid cell for items in large icon view, in pixels. 
            Each item fits into a rectangle of size SM_CXICONSPACING by 
            SM_CYICONSPACING when arranged. This value is always greater than
            or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding
            menu-bar item; zero if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are
            installed; zero otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; zero otherwise. 
            (WinMe/95/98): Unicode
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CMOUSEBUTTONS">
            <summary>
            Number of buttons on mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0  
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_SECURE">
            <summary>
            Nonzero if security is present; zero otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXEDGE">
            <summary>
            Width of a 3-D border, in pixels. This is the 3-D counterpart 
            of SM_CXBORDER.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYEDGE">
            <summary>
            Height of a 3-D border, in pixels. This is the 3-D counterpart 
            of SM_CYBORDER.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMINSPACING">
            <summary>
            Width of a grid cell for a minimized window, in pixels. Each 
            minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMINSPACING">
            <summary>
            Height of a grid cell for a minimized window, in pixels. Each 
            minimized window fits into a rectangle this size when arranged. 
            This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXSMICON">
            <summary>
            Recommended width of a small icon, in pixels. Small icons typically
            appear in window captions and in small icon view
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYSMICON">
            <summary>
            Recommended height of a small icon, in pixels. Small icons 
            typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYSMCAPTION">
            <summary>
            Height of a small caption, in pixels
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXSMSIZE">
            <summary>
            Width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYSMSIZE">
            <summary>
            Height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMENUSIZE">
            <summary>
            Width of menu bar buttons, such as the child window close button
            used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMENUSIZE">
            <summary>
            Height of menu bar buttons, such as the child window close button
            used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_ARRANGE">
            <summary>
            Flags specifying how the system arranged minimized windows
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMINIMIZED">
            <summary>
            Width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMINIMIZED">
            <summary>
            Height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMAXTRACK">
            <summary>
            Default maximum width of a window that has a caption and sizing 
            borders, in pixels. This metric refers to the entire desktop. The
            user cannot drag the window frame to a size larger than these 
            dimensions. A window can override this value by processing the 
            WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMAXTRACK">
            <summary>
            Default maximum height of a window that has a caption and sizing 
            borders, in pixels. This metric refers to the entire desktop. The
            user cannot drag the window frame to a size larger than these 
            dimensions. A window can override this value by processing the 
            WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMAXIMIZED">
            <summary>
            Default width, in pixels, of a maximized top-level window on the
            primary display monitor.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMAXIMIZED">
            <summary>
            Default height, in pixels, of a maximized top-level window on the 
            primary display monitor.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_NETWORK">
            <summary>
            Least significant bit is set if a network is present; otherwise, 
            it is cleared. The other bits are reserved for future use
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CLEANBOOT">
            <summary>
            Value that specifies how the system was started: 0-normal, 
            1-failsafe, 2-failsafe /w net
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXDRAG">
            <summary>
            Width of a rectangle centered on a drag point to allow for limited
            movement of the mouse pointer before a drag operation begins, 
            in pixels. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYDRAG">
            <summary>
            Height of a rectangle centered on a drag point to allow for limited
            movement of the mouse pointer before a drag operation begins. This 
            value is in pixels. It allows the user to click and release the 
            mouse button easily without unintentionally starting a drag 
            operation.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information
            visually in situations where it would otherwise present the 
            information only in audible form; zero otherwise. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXMENUCHECK">
            <summary>
            Width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYMENUCHECK">
            <summary>
            Height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; 
            zero otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages,
            zero if not.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; zero otherwise. This value is 
            rarely zero, because of support for virtual mice and because some 
            systems detect the presence of the port instead of the presence of
            a mouse.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_XVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the top of the virtual screen.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_YVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the left of the virtual screen.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Width of the virtual screen.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Height of the virtual screen.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CMONITORS">
            <summary>
            Number of display monitors on the desktop.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_SAMEDISPLAYFORMAT">
            <summary>
            Windows XP (v5.1+) Nonzero if all the display monitors have the 
            same color format, zero otherwise. Note that two displays can have
            the same bit depth, but different color formats. For example, the 
            red, green, and blue pixels can be encoded with different numbers
            of bits, or those bits can be located in different places in a 
            pixel's color value. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_IMMENABLED">
            <summary>
            Windows XP (v5.1+) Nonzero if Input Method Manager/Input Method 
            Editor features are enabled; zero otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CXFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Width of the left and right edges of the focus 
            rectangle drawn by DrawFocusRect. This value is in pixels. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CYFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Height of the top and bottom edges of the focus 
            rectangle drawn by DrawFocusRect. This value is in pixels. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC 
            edition, zero if not.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media 
            Center Edition, zero if not.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CMETRICS_OTHER">
            <summary>
            Metrics Other
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CMETRICS_2000">
            <summary>
            Metrics Windows 2000
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_CMETRICS_NT">
            <summary>
            Metrics Windows NT
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_REMOTESESSION">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal 
            Services environment. If the calling process is associated with a 
            Terminal Services client session, the return value is nonzero. If 
            the calling process is associated with the Terminal Server console 
            session, the return value is zero. The console session is not 
            necessarily the physical console - see WTSGetActiveConsoleSessionId 
            for more information. 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_SHUTTINGDOWN">
            <summary>
            Windows XP (v5.1+) Nonzero if the current session is shutting down; 
            zero otherwise.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.SystemMetric.SM_REMOTECONTROL">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal 
            Services environment. Its value is nonzero if the current session 
            is remotely controlled; zero otherwise.
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary.WCF">
            <summary>
            Windows Communication Foundation
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary.WPF">
            <summary>
            Windows Presentation Foundation
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary.WF">
            <summary>
            Windows Workflow Foundation
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Environment.Support.WindowsFoundationLibrary.CardSpace">
            <summary>
            Windows CardSpace
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.FTP.FTPClient">
            <summary>
            轻量级FTP客户端方法
            </summary>
            <remarks>
            This class does not hold open an FTP connection but
            instead is stateless: for each FTP request it
            connects, performs the request and disconnects.
            </remarks>
        </member>
        <member name="F:Robin.EntLib.Common.FTP.FTPClient._currentDirectory">
            <summary>
            当前目录
            </summary>
            <remarks>Defaults to the root '/'</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.#ctor">
            <summary>
            Blank constructor
            </summary>
            <remarks>Hostname, username and password must be set manually</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.#ctor(System.String)">
            <summary>
            Constructor just taking the hostname
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor taking hostname, username and password
            </summary>
            <param name="Hostname">in either ftp://ftp.host.com or ftp.host.com form</param>
            <param name="Username">Leave blank to use 'anonymous' but set password to your email</param>
            <param name="Password"></param>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.ListDirectory(System.String)">
            <summary>
            Return a simple directory listing
            </summary>
            <param name="directory">Directory to list, e.g. /pub</param>
            <returns>A list of filenames and directories as a List(of String)</returns>
            <remarks>For a detailed directory listing, use ListDirectoryDetail</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.ListDirectoryDetail(System.String)">
            <summary>
            Return a detailed directory listing
            </summary>
            <param name="directory">Directory to list, e.g. /pub/etc</param>
            <returns>An FTPDirectory object</returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.Upload(System.String,System.String)">
            <summary>
            Copy a local file to the FTP server
            </summary>
            <param name="localFilename">Full path of the local file</param>
            <param name="targetFilename">Target filename, if required</param>
            <returns></returns>
            <remarks>If the target filename is blank, the source filename is used
            (assumes current directory). Otherwise use a filename to specify a name
            or a full path and filename if required.</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.Upload(System.IO.FileInfo,System.String)">
            <summary>
            Upload a local file to the FTP server
            </summary>
            <param name="fi">Source file</param>
            <param name="targetFilename">Target filename (optional)</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.Download(System.String,System.String,System.Boolean)">
            <summary>
            Copy a file from FTP server to local
            </summary>
            <param name="sourceFilename">Target filename, if required</param>
            <param name="localFilename">Full path of the local file</param>
            <returns></returns>
            <remarks>Target can be blank (use same filename), or just a filename
            (assumes current directory) or a full path and filename</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.Download(Robin.EntLib.Common.FTP.FTPFileInfo,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <param name="localFilename"></param>
            <param name="PermitOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.Download(Robin.EntLib.Common.FTP.FTPFileInfo,System.IO.FileInfo,System.Boolean)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <param name="localFI"></param>
            <param name="PermitOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.Download(System.String,System.IO.FileInfo,System.Boolean)">
            <summary>
            
            </summary>
            <param name="sourceFilename"></param>
            <param name="targetFI"></param>
            <param name="PermitOverwrite"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.FtpDelete(System.String)">
            <summary>
            Delete remote file
            </summary>
            <param name="filename">filename or full path</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.FtpFileExists(System.String)">
            <summary>
            Determine if file exists on remote FTP site
            </summary>
            <param name="filename">Filename (for current dir) or full path</param>
            <returns></returns>
            <remarks>Note this only works for files</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.GetFileSize(System.String)">
            <summary>
            Determine size of remote file
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <remarks>Throws an exception if file does not exist</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.FtpRename(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="sourceFilename"></param>
            <param name="newName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.FtpCreateDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="dirpath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.FtpDeleteDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="dirpath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.GetCredentials">
            <summary>
            Get the credentials from username/password
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.GetFullPath(System.String)">
            <summary>
            returns a full path using CurrentDirectory for a relative file reference
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.AdjustDir(System.String)">
            <summary>
            Amend an FTP path so that it always starts with /
            </summary>
            <param name="path">Path to adjust</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.GetStringResponse(System.Net.FtpWebRequest)">
            <summary>
            Obtains a response stream as a string
            </summary>
            <param name="ftp">current FTP request</param>
            <returns>String containing response</returns>
            <remarks>FTP servers typically return strings with CR and
            not CRLF. Use respons.Replace(vbCR, vbCRLF) to convert
            to an MSDOS string</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPClient.GetSize(System.Net.FtpWebRequest)">
            <summary>
            Gets the size of an FTP request
            </summary>
            <param name="ftp"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPClient.Hostname">
            <summary>
            Hostname
            </summary>
            <value></value>
            <remarks>Hostname can be in either the full URL format
            ftp://ftp.myhost.com or just ftp.myhost.com
            </remarks>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPClient.Username">
            <summary>
            Username property
            </summary>
            <value></value>
            <remarks>Can be left blank, in which case 'anonymous' is returned</remarks>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPClient.Password">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPClient.CurrentDirectory">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.FTP.FTPDirectory">
            <summary>
            Stores a list of files and directories from an FTP result
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPDirectory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPDirectory.#ctor(System.String,System.String)">
            <summary>
            Constructor: create list from a (detailed) directory string
            </summary>
            <param name="dir">directory listing string</param>
            <param name="path"></param>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPDirectory.GetFiles(System.String)">
            <summary>
            Filter out only files from directory listing
            </summary>
            <param name="ext">optional file extension filter</param>
            <returns>FTPdirectory listing</returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPDirectory.GetDirectories">
            <summary>
            Returns a list of only subdirectories
            </summary>
            <returns>FTPDirectory list</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPDirectory.FileExists(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPDirectory.GetParentDirectory(System.String)">
            <summary>
            
            </summary>
            <param name="dir"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.FTP.FTPDirectoryEntryTypes">
            <summary>
            Identifies entry as either File or Directory
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.FTP.FTPDirectoryEntryTypes.File">
             <summary>
            
             </summary>
        </member>
        <member name="F:Robin.EntLib.Common.FTP.FTPDirectoryEntryTypes.Directory">
             <summary>
            
             </summary>
        </member>
        <member name="T:Robin.EntLib.Common.FTP.FTPFileInfo">
            <summary>
            Represents a file or directory entry from an FTP listing
            </summary>
            <remarks>
            This class is used to parse the results from a detailed
            directory list from FTP. It supports most formats of
            </remarks>
        </member>
        <member name="F:Robin.EntLib.Common.FTP.FTPFileInfo._ParseFormats">
            <summary>
            List of REGEX formats for different FTP server listing formats
            </summary>
            <remarks>
            The first three are various UNIX/LINUX formats, fourth is for MS FTP
            in detailed mode and the last for MS FTP in 'DOS' mode.
            I wish VB.NET had support for Const arrays like C# but there you go
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.FTP.FTPFileInfo.#ctor(System.String,System.String)">
            <summary>
            Constructor taking a directory listing line and path
            </summary>
            <param name="line">The line returned from the detailed directory list</param>
            <param name="path">Path of the directory</param>
            <remarks></remarks>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.FullName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.Filename">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.Path">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.FileType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.FileDateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.Permission">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.Extension">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.FTP.FTPFileInfo.NameOnly">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.AppConfigHelper">
            <summary>
            应用配置文件帮助类。
            </summary>
            <remarks><appSettings></appSettings>之间的配置节点</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.AppConfigHelper.GetConfigValueOfKey(System.String)">
            <summary>
            得到一个配置键。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.AppConfigHelper.CreateConfigValueOfKey(System.String,System.String)">
            <summary>
            添加一个键值对。
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.AppConfigHelper.UpdateKey(System.String,System.String)">
            <summary>
            更新一个键值对。
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ArgumentHelper">
            <summary>
            参数工具类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArgumentHelper.AssertNotNull``1(``0,System.String)">
            <summary>
            断言指定实例不为空
            </summary>
            <typeparam name="T">实例类型</typeparam>
            <param name="arg">实例变量</param>
            <param name="argName">实例名</param>
            <exception cref="T:System.ArgumentNullException">当断言不成立,抛出参数为空异常</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArgumentHelper.AssertStringNotEmpty(System.String)">
            <summary>
            断言指定字符串不为空
            </summary>
            <param name="argName">字符串</param>
            <exception cref="T:System.ArgumentNullException">当断言不成立,抛出参数为空异常</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArgumentHelper.AssertEnumMember``1(``0)">
            <summary>
            断言指定枚举值是否属于该枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="enumValue">枚举值</param>
            <exception cref="T:System.ArgumentNullException">当断言不成立,抛出参数为空异常</exception>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ArithmeticHelper">
            <summary>
            算法处理帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArithmeticHelper.BubbleSort(System.Int32[])">
            <summary>
            冒泡排序法，对整数进行排序
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArithmeticHelper.BubbleSort(System.Double[])">
            <summary>
            冒泡排序法，对浮点数进行排序
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArithmeticHelper.BubbleSort(System.String[])">
            <summary>
            冒泡排序法，对字符串进行排序
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ArrayHelper">
            <summary>
            对稀疏数组进行处理的帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.CompactStringArray(System.String[])">
            <summary>
            返回稠密字符串数组
            </summary>
            <param name="src">源字符串数组</param>
            <returns>稠密数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.CompactArray(System.Collections.ArrayList,System.Object[])">
            <summary>
            从新的对象数组里面抽取非空对象复制到arraylist中。
            </summary>
            <param name="arraylist">ArrayList对象</param>
            <param name="newValue">set操作时的value</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.Compact``1(``0[])">
            <summary>
            清除数组中的空对象。
            </summary>
            <param name="value">数组对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.Reverse``1(``0[])">
            <summary>
            将数组元素反转。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.Slice``1(``0[],System.Int32,System.Int32)">
            <summary>
            从已有的数组中返回选定的元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">选取数据的源数组。</param>
            <param name="start">规定从何处开始选取。</param>
            <param name="end">规定从何处结束选取。</param>
            <returns>返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.Slice``1(``0[],System.Int32)">
            <summary>
            从已有的数组中返回选定的元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">选取数据的源数组。</param>
            <param name="start">规定从何处开始选取。</param>
            <returns>返回一个新的数组，包含从 start 开始的所有元素。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.AddItemToArrayList(System.Collections.ArrayList,System.Object)">
            <summary>
            往ArrayList中添加指定对象，并判断对象是否已经在 Arraylist中存在。
            如果已经存在，将不重复添加。
            </summary>
            <param name="arr">ArrayList对象</param>
            <param name="obj"> 要添加的对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.AppendItems``1(``0[],``0[])">
            <summary>
            追加数组到已有数组中。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="addItems"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.RemoveItemFromArrayList(System.Collections.ArrayList,System.Object)">
            <summary>
            从ArrayList中删除指定对象
            </summary>
            <param name="arr">ArrayList对象</param>
            <param name="obj"> 要删除的对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.ArrayMerge``1(``0[],``0[])">
            <summary>合并两个数组</summary>
            <typeparam name="T">数组类型</typeparam>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns>合并后的数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.ReadAllBytesFromStream(System.IO.Stream)">
            <summary>
            从流里读出所有所有的字节数据
            </summary>
            <param name="stream"></param>
            <returns></returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.AddArrayItem``1(``0[],``0)">
            <summary>
            将数据项添加到数组中去
            </summary>
            <typeparam name="T">数组类型</typeparam>
            <param name="array">数组</param>
            <param name="item">要添加的数据项</param>
            <returns>处理后的数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.RemoveArrayItem``1(``0[],``0)">
            <summary>
            删除数组中的对应项。
            </summary>
            <typeparam name="T">数组类型。</typeparam>
            <param name="array">数组。</param>
            <param name="item">要删除的数据项。</param>
            <returns>处理后的数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.RemoveArrayItem``1(``0[],System.Int32)">
            <summary>
            删除数组中的对应项。
            </summary>
            <typeparam name="T">数组类型。</typeparam>
            <param name="array">数组。</param>
            <param name="index">要删除的数据项的索引。</param>
            <returns>处理后的数组。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.HasValue``1(``0[],``0)">
            <summary>
            检查当前数值是否在数组中存在。
            </summary>
            <typeparam name="T">数组类型。</typeparam>
            <param name="array">数组。</param>
            <param name="checkedValue">需要检查的值。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.HasValue(System.String[],System.String)">
            <summary>
            判断值是否包含在数组中。
            </summary>
            <param name="arr"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.HasValue(System.Int32[],System.Int32)">
            <summary>
            判断值是否包含在数组中。
            </summary>
            <param name="arr"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.SubArray``1(``0[],System.Int32,System.Int32)">
            <summary>
            获取数组的某一部分元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.SubArray``1(``0[],System.Int32)">
            <summary>
            获取数组的某一部分元素。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.CopyToList``1(System.Collections.Generic.List{``0},``0[])">
            <summary>
            拷贝数组到List中（拷贝前清空List）。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="arr"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.AddToList``1(System.Collections.Generic.List{``0},``0[])">
            <summary>
            追加数组到List中。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="arr"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.Join(System.String[],System.String)">
            <summary>
            把数组中的所有元素放入一个字符串。
            </summary>
            <param name="list">需要连接的数组。</param>
            <param name="separator">指定的元素分隔符.</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ArrayHelper.Join``1(``0[],System.String)">
            <summary>
            把数组中的所有元素放入一个字符串。
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">需要连接的数组。</param>
            <param name="separator">指定的元素分隔符.</param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Base64Helper">
            <summary>
            Base64编码帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.EncodingForString(System.String,System.Text.Encoding)">
            <summary>
            将字符串使用base64算法加密。
            </summary>
            <param name="sourceString">待加密的字符串</param>
            <param name="ens">System.Text.Encoding 对象，如创建中文编码集对象：System.Text.Encoding.GetEncoding(54936)</param>
            <returns>加码后的文本字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.EncodingForString(System.String)">
            <summary>
            将字符串使用base64算法加密
            </summary>
            <param name="sourceString">待加密的字符串</param>
            <returns>加码后的文本字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.DecodingForString(System.String,System.Text.Encoding)">
            <summary>
            从base64编码的字符串中还原字符串，支持中文
            </summary>
            <param name="base64String">base64加密后的字符串</param>
            <param name="ens">System.Text.Encoding 对象，如创建中文编码集对象：System.Text.Encoding.GetEncoding(54936)</param>
            <returns>还原后的文本字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.DecodingForString(System.String)">
            <summary>
            从base64编码的字符串中还原字符串，支持中文
            </summary>
            <param name="base64String">base64加密后的字符串</param>
            <returns>还原后的文本字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.EncodingForFile(System.String)">
            <summary>
            对任意类型的文件进行base64加码
            </summary>
            <param name="fileName">文件的路径和文件名</param>
            <returns>对文件进行base64编码后的字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.SaveDecodingToFile(System.String,System.String)">
            <summary>
            把经过base64编码的字符串保存为文件
            </summary>
            <param name="base64String">经base64加码后的字符串</param>
            <param name="fileName">保存文件的路径和文件名</param>
            <returns>保存文件是否成功</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.EncodingFileFromUrl(System.String,System.Net.WebClient)">
            <summary>
            从网络地址一取得文件并转化为base64编码
            </summary>
            <param name="url">文件的url地址,一个绝对的url地址</param>
            <param name="objWebClient">System.Net.WebClient 对象</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.EncodingFileFromUrl(System.String)">
            <summary>
            从网络地址一取得文件并转化为base64编码
            </summary>
            <param name="url">文件的url地址,一个绝对的url地址</param>
            <returns>将文件转化后的base64字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.DecryptFile(System.String,System.String)">
            <summary>   
            解码文件。   
            </summary>   
            <param name="inputFilename">输入文件。</param>   
            <param name="outputFilename">输出文件。</param>   
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64Helper.EncryptFile(System.String,System.String)">
            <summary>   
            编码文件。   
            </summary>   
            <param name="inputFilename">输入文件。</param>   
            <param name="outputFilename">输出文件。</param>   
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Base64UrlHelper">
            <summary>
            Base64的url帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64UrlHelper.StringToUrlBase64(System.String)">
            <summary>
            String 转换  UrlBase64，使之适合在url中使用
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64UrlHelper.UrlBase64ToString(System.String)">
            <summary>
            UrlBase64 转换  String
            </summary>
            <param name="urlBase64str"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64UrlHelper.StringToUrlBase64(System.String,System.Text.Encoding)">
            <summary>
            String 转换  UrlBase64，使之适合在url中使用
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64UrlHelper.UrlBase64ToString(System.String,System.Text.Encoding)">
            <summary>
            UrlBase64 转换  String
            </summary>
            <param name="urlBase64str"></param>
            <param name="enc"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64UrlHelper.Base64ToUrlBase64(System.String)">
            <summary>
            Base64 转换 UrlBase64，使之适合在url中使用
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Base64UrlHelper.UrlBase64ToBase64(System.String)">
            <summary>
            UrlBase64 转换 Base64
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.BinarySerializer">
            <summary>
            二进制对象的序列化和反序列化。
            </summary>
            <author>mxq</author>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.#ctor">
            <summary>
            默认构造子。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.Serialize(System.Object)">
            <summary>
            把一个对象序列化为字节。
            </summary>
            <param name="value">需要序列化的对象。</param>
            <returns>对象的二进制序列化。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.Deserializer(System.Byte[])">
            <summary>
            从字节流中反序列化成对象。
            </summary>
            <param name="bytes">保存对象数据的二进制字节。</param>
            <returns>反序列化生成的对象。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.SaveAsBinary(System.Object,System.String)">
            <summary>
            把对象以二进制的方式存储到磁盘上。 
            </summary>
            <param name="objectToSave">需要存储的对象。</param>
            <param name="path">对象存储的路径。</param>
            <returns>如果存储成功，返回True，否则返回False。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.LoadBinaryFile(System.String)">
            <summary>
            从磁盘上一个二进制文件中装载对象。
            </summary>
            <param name="path">二进制文件的路径。</param>
            <returns>二进制文件反序列化后的对象。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.BinaryDeserialize``1(System.Byte[])">
            <summary>
            反序列化
            </summary>
            <param name="data">字节数组</param>
            <returns>类型实例</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.BinarySerializer.BinarySerialize``1(``0)">
            <summary>
            序列化
            </summary>
            <param name="obj">类型实例</param>
            <returns>字节数组</returns>
            <remarks>
            </remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CacheHelper">
            <summary>
            缓存管理类
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CacheHelper.DayFactor">
            <summary>
            DayFactor
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CacheHelper.HourFactor">
            <summary>
            HourFactor
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CacheHelper.MinuteFactor">
            <summary>
            MinuteFactor
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CacheHelper.SecondFactor">
            <summary>
            SecondFactor
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.ReSetFactor(System.Int32)">
            <summary>
            
            </summary>
            <param name="cacheFactor"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.#cctor">
            <summary>
            确保当前HttpContext只有一个Cache实例
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Clear">
            <summary>
            清空Cache
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.RemoveByPattern(System.String)">
            <summary>
            根据正则表达式的模式移除Cache
            </summary>
            <param name="pattern">模式</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Remove(System.String)">
            <summary>
            根据键值移除Cache
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Insert(System.String,System.Object)">
            <summary>
            把对象加载到Cache
            </summary>
            <param name="key">键</param>
            <param name="obj">对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            把对象加载到Cache,附加缓存依赖信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Insert(System.String,System.Object,System.Int32)">
            <summary>
            把对象加载到Cache,附加过期时间信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Insert(System.String,System.Object,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            把对象加载到Cache,附加过期时间信息和优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
            <param name="priority"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32)">
            <summary>
            把对象加载到Cache,附加缓存依赖和过期时间(多少秒后过期)
            (默认优先级为High)
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            把对象加载到Cache,附加缓存依赖和过期时间(多少秒后过期)及优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
            <param name="seconds"></param>
            <param name="priority"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.MicroInsert(System.String,System.Object,System.Int32)">
            <summary>
            把对象加到缓存并忽略优先级
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="seconds"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Max(System.String,System.Object)">
            <summary>
            把对象加到缓存,并把过期时间设为最大值
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Max(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            把对象加到缓存,并把过期时间设为最大值,附加缓存依赖信息
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Permanent(System.String,System.Object)">
            <summary>
            插入持久性缓存
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Permanent(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            插入持久性缓存,附加缓存依赖
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
            <param name="dep"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Get(System.String)">
            <summary>
            根据键获取被缓存的对象
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.Get``1(System.String)">
            <summary>
            根据键获取被缓存的对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CacheHelper.SecondFactorCalculate(System.Int32)">
            <summary>
            Return int of seconds * SecondFactor
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CaptchaHelper">
            <summary>
            3D验证码
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CaptchaHelper.Generate(System.String)">
            <summary>
            
            </summary>
            <param name="captchaText"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ChineseToSpellHelper">
            <summary>
            汉字转拼音帮助类。 
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ChineseToSpellHelper.ChsStringToSpell(System.String)">
            <summary>
            将一串中文转化为拼音
            如果给定的字符为非中文汉字将不执行转化，直接返回原字符；
            </summary>
            <param name="chinese">指定汉字</param>
            <returns>拼音码</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ChineseToSpellHelper.GetHeadOfChs(System.String)">
            <summary>
            将一串中文转化为拼音首字母。
            </summary>
            <param name="chsstr">指定汉字</param>
            <returns>拼音首字母</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ChineseToSpellHelper.SingleChsToSpell(System.String)">
            <summary>
            单个汉字转化为拼音
            </summary>
            <param name="singleChs">单个汉字</param>
            <returns>拼音</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ChineseToSpellHelper.GetHeadOfSingleChs(System.String)">
            <summary>
            得到单个汉字拼音的首字母
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ChineseToSpellHelper.GetPYString(System.String)">
            <summary>
            得到汉字的拼音。
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ClassHelper">
            <summary>
            类帮助器，可以动态对类,类成员进行控制（添加，删除）,目前只支持属性控制。
            注意，属性以外的其它成员会被清空，功能还有待完善，使其不影响其它成员。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.CreateInstance(System.Type)">
            
            <summary>
            根据类的类型型创建类实例。
            </summary>
            <param name="t">将要创建的类型。</param>
            <returns>返回创建的类实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.CreateInstance(System.String,System.Collections.Generic.List{Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo})">
            
            <summary>
            根据类的名称，属性列表创建型实例。
            </summary>
            <param name="className">将要创建的类的名称。</param>
            <param name="lcpi">将要创建的类的属性列表。</param>
            <returns>返回创建的类实例</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.CreateInstance(System.Collections.Generic.List{Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo})">
            
            <summary>
            根据属性列表创建类的实例，默认类名为DefaultClass，由于生成的类不是强类型，所以类名可以忽略。
            </summary>
            <param name="lcpi">将要创建的类的属性列表</param>
            <returns>返回创建的类的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.SetPropertyValue(System.Object,System.String,System.Object)">
            
            <summary>
            根据类的实例设置类的属性。
            </summary>
            <param name="classInstance">将要设置的类的实例。</param>
            <param name="propertyName">将要设置属性名。</param>
            <param name="propertSetValue">将要设置属性值。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.GetPropertyValue(System.Object,System.String)">
            
            <summary>
            根据类的实例获取类的属性。
            </summary>
            <param name="classInstance">将要获取的类的实例</param>
            <param name="propertyName">将要设置的属性名。</param>
            <returns>返回获取的类的属性。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.BuildType">
            
            <summary>
            创建一个没有成员的类型的实例，类名为"DefaultClass"。
            </summary>
            <returns>返回创建的类型的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.BuildType(System.String)">
            
            <summary>
            根据类名创建一个没有成员的类型的实例。
            </summary>
            <param name="className">将要创建的类型的实例的类名。</param>
            <returns>返回创建的类型的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.AddProperty(System.Type,System.Collections.Generic.List{Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo})">
            
            <summary>
            添加属性到类型的实例，注意：该操作会将其它成员清除掉，其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="lcpi">表示属性的一个列表。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.AddProperty(System.Type,Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo)">
            
            <summary>
            添加属性到类型的实例，注意：该操作会将其它成员清除掉，其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="cpi">表示一个属性。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.DeleteProperty(System.Type,System.String)">
            
            <summary>
            从类型的实例中移除属性，注意：该操作会将其它成员清除掉，其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="propertyName">要移除的属性。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.DeleteProperty(System.Type,System.Collections.Generic.List{System.String})">
            
            <summary>
            从类型的实例中移除属性，注意：该操作会将其它成员清除掉，其功能有待完善。
            </summary>
            <param name="classType">指定类型的实例。</param>
            <param name="ls">要移除的属性列表。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.MergeProperty(System.Type,System.Collections.Generic.List{Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo})">
            
            <summary>
            把类型的实例t和lcpi参数里的属性进行合并。
            </summary>
            <param name="t">实例t</param>
            <param name="lcpi">里面包含属性列表的信息。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.SeparateProperty(System.Type,System.Collections.Generic.List{System.String})">
            
            <summary>
            从类型的实例t的属性移除属性列表lcpi，返回的新属性列表在lcpi中。
            </summary>
            <param name="t">类型的实例t。</param>
            <param name="ls">要移除的属性列表。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.AddPropertyToTypeBuilder(System.Reflection.Emit.TypeBuilder,System.Collections.Generic.List{Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo})">
            
            <summary>
            把lcpi参数里的属性加入到myTypeBuilder中。注意：该操作会将其它成员清除掉，其功能有待完善。
            </summary>
            <param name="myTypeBuilder">类型构造器的实例。</param>
            <param name="lcpi">里面包含属性列表的信息。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.AddPropertyToType(System.Type,System.Collections.Generic.List{Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo})">
            
            <summary>
            把属性加入到类型的实例。
            </summary>
            <param name="classType">类型的实例。</param>
            <param name="lcpi">要加入的属性列表。</param>
            <returns>返回处理过的类型的实例。</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo">
            
            <summary>
            自定义的属性信息类型。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.#ctor">
            
            <summary>
            空构造。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.#ctor(System.String,System.String)">
            
            <summary>
            根据属性类型名称，属性名称构造实例。
            </summary>
            <param name="type">属性类型名称。</param>
            <param name="propertyName">属性名称。</param>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.Type">
            
            <summary>
            获取或设置属性类型名称。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.PropertyName">
            
            <summary>
            获取或设置属性名称。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.FieldName">
            
            <summary>
            获取属性字段名称。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.SetPropertyMethodName">
            
            <summary>
            获取属性在IL中的Set方法名。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ClassHelper.CustPropertyInfo.GetPropertyMethodName">
            
            <summary>
             获取属性在IL中的Get方法名。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CloneHelper">
            <summary>
            对象的深度拷贝帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.String[])">
            <summary>
            对输入的src数组进行深拷贝。
            </summary>
            <param name="src">需要拷贝的数组。</param>
            <returns>src数组的深度拷贝副本。</returns>
            <example>
            <code>
            
            </code></example>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.Double[])">
            <summary>
            对输入的src数组进行深拷贝
            </summary>
            <param name="src">需要拷贝的数组</param>
            <returns>src数组的深度拷贝副本</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.Single[])">
            <summary>
            对输入的src数组进行深拷贝
            </summary>
            <param name="src">需要拷贝的数组</param>
            <returns>src数组的深度拷贝副本</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.Int32[])">
            <summary>
            对输入的src数组进行深拷贝
            </summary>
            <param name="src">需要拷贝的数组</param>
            <returns>src数组的深度拷贝副本</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.Byte[])">
            <summary>
            对输入的src数组进行深拷贝
            </summary>
            <param name="src">需要拷贝的数组</param>
            <returns>src数组的深度拷贝副本</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.ICloneable[],System.Type)">
            <summary>
            对输入的src数组进行深拷贝。要求数组中的元素实现ICloneable接口。
            </summary>
            <param name="src">需要拷贝的数组</param>
            <param name="type">数组元素的类型</param>
            <returns>src数组的深度拷贝副本</returns>
            <example>UtilHelper.DeepCopy(copy.PolygonSymbols,GetType()) as PolygonSymbol[]</example>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.DeepClone(System.Object)">
            <summary>
            对输入的src对象进行深拷贝，要求该对象实现ICloneable接口。
            </summary>
            <param name="src">需要拷贝的对象(此对象需要实现 <see cref="T:System.ICloneable">System.ICloneable</see> 接口。)</param>
            <returns>src对象的深度拷贝副本</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.Clone(System.Object)">
            <summary>
            克隆一个对象。
            </summary>
            <param name="data">源数据。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CloneHelper.Clone``1(``0)">
            <summary>
            克隆一个对象。
            </summary>
            <typeparam name="T">克隆对象的类型。</typeparam>
            <param name="data">需要克隆的对象。</param>
            <returns>深克隆后返回的对象。</returns>
        </member>
        <member name="T:CNDateHelper">
            <summary>
            农历属性
            </summary>
        </member>
        <member name="F:CNDateHelper.cnIntYear">
            <summary>
            农历年(整型)
            </summary>
        </member>
        <member name="F:CNDateHelper.cnIntMonth">
            <summary>
            农历月份(整型)
            </summary>
        </member>
        <member name="F:CNDateHelper.cnIntDay">
            <summary>
            农历天(整型)
            </summary>
        </member>
        <member name="F:CNDateHelper.cnStrYear">
            <summary>
            农历年(支干)
            </summary>
        </member>
        <member name="F:CNDateHelper.cnStrMonth">
            <summary>
            农历月份(字符)
            </summary>
        </member>
        <member name="F:CNDateHelper.cnStrDay">
            <summary>
            农历天(字符)
            </summary>
        </member>
        <member name="F:CNDateHelper.cnAnm">
            <summary>
            农历属象
            </summary>
        </member>
        <member name="F:CNDateHelper.cnSolarTerm">
            <summary>
            二十四节气
            </summary>
        </member>
        <member name="F:CNDateHelper.cnFtvl">
            <summary>
            阴历节日
            </summary>
        </member>
        <member name="F:CNDateHelper.cnFtvs">
            <summary>
            阳历节日
            </summary>
        </member>
        <member name="T:ChinaDateHelper">
            <summary>
            公历转农历
            </summary>
        </member>
        <member name="M:ChinaDateHelper.lYearDays(System.Int32)">
            <summary>
            传回农历y年的总天数
            </summary>
        </member>
        <member name="M:ChinaDateHelper.leapDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:ChinaDateHelper.leapMonth(System.Int32)">
            <summary>
            传回农历y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:ChinaDateHelper.monthDays(System.Int32,System.Int32)">
            <summary>
            传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:ChinaDateHelper.AnimalsYear(System.Int32)">
            <summary>
            传回农历y年的生肖
            </summary>
        </member>
        <member name="M:ChinaDateHelper.cyclicalm(System.Int32)">
            <summary>
            传入月日的offset 传回干支,0=甲子
            </summary>
        </member>
        <member name="M:ChinaDateHelper.cyclical(System.Int32)">
            <summary>
            传入offset 传回干支, 0=甲子
            </summary>
        </member>
        <member name="M:ChinaDateHelper.Lunar(System.Int32,System.Int32)">
            <summary>
            传出农历.year0 .month1 .day2 .yearCyl3 .monCyl4 .dayCyl5 .isLeap6
            </summary>
        </member>
        <member name="M:ChinaDateHelper.calElement(System.Int32,System.Int32,System.Int32)">
            <summary>
            传出y年m月d日对应的农历.year0 .month1 .day2 .yearCyl3 .monCyl4 .dayCyl5 .isLeap6
            </summary>
        </member>
        <member name="M:ChinaDateHelper.GetDaysByMonth(System.Int32,System.Int32)">
            <summary>
            传回公历y年m月的总天数
            </summary>
        </member>
        <member name="M:ChinaDateHelper.GetMondayDateByDate(System.DateTime)">
            <summary>
            根据日期值获得周一的日期
            </summary>
            <param name="dt">输入日期</param>
            <returns>周一的日期</returns>
        </member>
        <member name="M:ChinaDateHelper.getChinaDate(System.DateTime)">
            <summary>
            获取农历
            </summary>
        </member>
        <member name="T:ChineseCalendarHelper">
            <summary>
            中国日历
            </summary>
        </member>
        <member name="F:ChineseCalendarHelper.LunarDateArray">
             <summary>
             来源于网上的农历数据
             </summary>
             <remarks>
             数据结构如下，共使用17位数据
             第17位：表示闰月天数，0表示29天   1表示30天
             第16位-第5位（共12位）表示12个月，其中第16位表示第一月，如果该月为30天则为1，29天为0
             第4位-第1位（共4位）表示闰月是哪个月，如果当年没有闰月，则置0
            </remarks>
        </member>
        <member name="M:ChineseCalendarHelper.#ctor(System.DateTime)">
            <summary>
            用一个标准的公历日期来初使化
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            用农历的日期来初使化
            </summary>
            <param name="cy">农历年</param>
            <param name="cm">农历月</param>
            <param name="cd">农历日</param>
            <param name="leapMonthFlag">闰月标志</param>
        </member>
        <member name="M:ChineseCalendarHelper.GetChineseMonthDays(System.Int32,System.Int32)">
            <summary>
            //传回农历y年m月的总天数
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.GetChineseLeapMonth(System.Int32)">
            <summary>
            传回农历 y年闰哪个月 1-12 , 没闰传回 0
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.GetChineseLeapMonthDays(System.Int32)">
            <summary>
            传回农历y年闰月的天数
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.GetChineseYearDays(System.Int32)">
            <summary>
            取农历年一年的天数
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.GetChineseHour(System.DateTime)">
            <summary>
            获得当前时间的时辰
            </summary> 
        </member>
        <member name="M:ChineseCalendarHelper.CheckDateLimit(System.DateTime)">
            <summary>
            检查公历日期是否符合要求
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.CheckChineseDateLimit(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            检查农历日期是否合理
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.ConvertNumToChineseNum(System.Char)">
            <summary>
            将0-9转成汉字形式
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.BitTest32(System.Int32,System.Int32)">
            <summary>
            测试某位是否为真
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.ConvertDayOfWeek(System.DayOfWeek)">
            <summary>
            将星期几转成数字表示
            </summary>
        </member>
        <member name="M:ChineseCalendarHelper.CompareWeekDayHoliday(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            比较当天是不是指定的第周几
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.newCalendarHoliday">
            <summary>
            计算中国农历节日
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.WeekDayHoliday">
            <summary>
            按某月第几周第几日计算的节日
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.DateHoliday">
            <summary>
            按公历日计算的节日
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.Date">
            <summary>
            取对应的公历日期
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.WeekDay">
            <summary>
            取星期几
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.WeekDayStr">
            <summary>
            周几的字符
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.DateString">
            <summary>
            公历日期中文表示法 如一九九七年七月一日
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.IsLeapYear">
            <summary>
            当前是否公历闰年
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseConstellation">
            <summary>
            28星宿计算
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseHour">
            <summary>
            时辰
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.IsChineseLeapMonth">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.IsChineseLeapYear">
            <summary>
            当年是否有闰月
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseDay">
            <summary>
            农历日
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseDayString">
            <summary>
            农历日中文表示
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseMonth">
            <summary>
            农历的月份
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseMonthString">
            <summary>
            农历月份字符串
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseYear">
            <summary>
            取农历年份
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseYearString">
            <summary>
            取农历年字符串如，一九九七年
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseDateString">
            <summary>
            取农历日期表示法：农历一九九七年正月初五
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseTwentyFourDay">
            <summary>
            定气法计算二十四节气,二十四节气是按地球公转来计算的，并非是阴历计算的
            </summary>
            <remarks>
            节气的定法有两种。古代历法采用的称为"恒气"，即按时间把一年等分为24份，
            每一节气平均得15天有余，所以又称"平气"。现代农历采用的称为"定气"，即
            按地球在轨道上的位置为标准，一周360°，两节气之间相隔15°。由于冬至时地
            球位于近日点附近，运动速度较快，因而太阳在黄道上移动15°的时间不到15天。
            夏至前后的情况正好相反，太阳在黄道上移动较慢，一个节气达16天之多。采用
            定气时可以保证春、秋两分必然在昼夜平分的那两天。
            </remarks>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseTwentyFourPrevDay">
            <summary>
            当前日期前一个最近节气
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.ChineseTwentyFourNextDay">
            <summary>
            当前日期后一个最近节气
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.Constellation">
            <summary>
            计算指定日期的星座序号 
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.Animal">
            <summary>
            计算属相的索引，注意虽然属相是以农历年来区别的，但是目前在实际使用中是按公历来计算的
            鼠年为1,其它类推
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.AnimalString">
            <summary>
            取属相字符串
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.GanZhiYearString">
            <summary>
            取农历年的干支表示法如 乙丑年
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.GanZhiMonthString">
            <summary>
            取干支的月表示字符串，注意农历的闰月不记干支
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.GanZhiDayString">
            <summary>
            取干支日表示法
            </summary>
        </member>
        <member name="P:ChineseCalendarHelper.GanZhiDateString">
            <summary>
            取当前日期的干支表示法如 甲子年乙丑月丙庚日
            </summary>
        </member>
        <member name="T:ChineseCalendarHelper.SolarHolidayStruct">
            <summary>
            阳历
            </summary>
        </member>
        <member name="T:ChineseCalendarHelper.LunarHolidayStruct">
            <summary>
            农历
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CommandLineHelper">
            <summary>
            Command line helper class allows the developer to execute command line operations more easily.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CommandLineHelper.Run(System.String,System.String,System.String@)">
            <summary>
            Run a command line.
            </summary>
            <param name="fileName">Path and file name to execute.</param>
            <param name="arguments">Parameters to pass to the executable.</param>
            <param name="errorMessage">String variable to receive any error messages.</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CommandLineHelper.Run(System.String,System.String)">
            <summary>
            Run a command line.
            </summary>
            <param name="fileName">Path and file name to execute.</param>
            <param name="arguments">Arguments to pass to the executable.</param>
            <returns>String error message, or an empty string on success.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CommandLineHelper.Run(System.String)">
            <summary>
            Run a command line.
            </summary>
            <param name="fileName">Path and filename to execute.</param>
            <returns>String error message, or en empty string on success.</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CompactHelper">
            <summary>
            压缩帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.ZipFile(System.String,System.String)">
            <summary>
            功能：压缩文件（暂时只压缩文件夹下一级目录中的文件，文件夹及其子级被忽略）
            </summary>
            <param name="dirPath">被压缩的文件夹夹路径</param>
            <param name="zipFilePath">生成压缩文件的路径，为空则默认与被压缩文件夹同一级目录，名称为：文件夹名+.zip</param>
            <param name="err">出错信息</param>
            <returns>是否压缩成功</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.UnZipFile(System.String,System.String)">
            <summary>
            功能：解压zip格式的文件。
            </summary>
            <param name="zipFilePath">压缩文件路径</param>
            <param name="unZipDir">解压文件存放路径,为空时默认与压缩文件同一级目录下，跟压缩文件同名的文件夹</param>
            <param name="err">出错信息</param>
            <returns>解压是否成功</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.Compress(System.Byte[])">
            <summary>
            从原始字节数组生成已压缩的字节数组。
            </summary>
            <param name="bytesToCompress">原始字节数组。</param>
            <returns>返回已压缩的字节数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.Compress(System.String)">
            <summary>
            从原始字符串生成已压缩的字符串。
            </summary>
            <param name="stringToCompress">原始字符串。</param>
            <returns>返回已压缩的字符串。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.CompressFile(System.String)">
            <summary>
            返回压缩文件数据。
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.CompressFiles(System.String[])">
            <summary>
            返回压缩文件组数据。
            </summary>
            <param name="filePaths"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.CompressToByte(System.String)">
            <summary>
            从原始字符串生成已压缩的字节数组。
            </summary>
            <param name="stringToCompress">原始字符串。</param>
            <returns>返回已压缩的字节数组。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.DeCompress(System.String)">
            <summary>
            从已压缩的字符串生成原始字符串。
            </summary>
            <param name="stringToDecompress">已压缩的字符串。</param>
            <returns>返回原始字符串。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompactHelper.DeCompress(System.Byte[])">
            <summary>
            从已压缩的字节数组生成原始字节数组。
            </summary>
            <param name="bytesToDecompress">已压缩的字节数组。</param>
            <returns>返回原始字节数组。</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Comparer">
            <summary>
            对象比较器。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.Comparer.Compare(System.Object,System.Object)">
            <summary>
            比较两个对象。
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CompileHelper">
            <summary>
            动态编译公共操作类
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CompileHelper._options">
            <summary>
            编译器参数
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CompileHelper._assemblyName">
            <summary>
            输出程序集的名称
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CompileHelper._referencedAssemblies">
            <summary>
            程序集引用的列表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.CompileHelper._result">
            <summary>
            编译结果
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompileHelper.#ctor">
            <summary>
            初始化对象
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompileHelper.AddReferencedAssembly(System.String)">
            <summary>
            添加程序集引用
            </summary>
            <param name="referencedAssembly">引用的程序集，比如"System.dll",
            默认已添加了"System.dll","mscorlib.dll","System.Data.dll"</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompileHelper.AddReferencedAssembly(System.Type)">
            <summary>
            添加程序集引用
            </summary>
            <param name="type">表示要添加该类型所在的程序集</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompileHelper.CompileFromText(System.String[])">
            <summary>
            动态编译程序集( 从代码字符串生成 )
            </summary>
            <param name="sources">要编译的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CompileHelper.SetCompilerParameters">
            <summary>
            设置编译器参数
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.CompileHelper.OutputAssemblyName">
            <summary>
            输出程序集的名称,可指定绝对路径。
            如果不指定绝对路径,则输出到根目录。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ComputerHelper">
            <summary>
            计算机相关信息。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.CpuID">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.MacAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.DiskID">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.IpAddress">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.LoginUserName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.ComputerName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.SystemType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ComputerHelper.TotalPhysicalMemory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ComputerHelper.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ComputerHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ComputerHelper.GetUserName">
            <summary>
            操作系统的登录用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ComputerHelper.GetSystemType">
            <summary>
            PC类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ComputerHelper.GetTotalPhysicalMemory">
            <summary>
            物理内存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ComputerHelper.GetComputerName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.CookieHelper">
            <summary>
            Cookie相关操作
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.GetCookie(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="name">Cookie Name</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.GetCookie(System.String,System.Web.HttpRequest)">
            <summary>
            根据HttpRequest获取Cookie
            </summary>
            <param name="name">Cookie Name</param>
            <param name="request">HttpRequest Object</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.SetCookie(System.String,System.String)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">Cookie Name</param>
            <param name="value">设置的值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.SetCookie(System.String,System.String,System.Int32)">
            <summary>
            设置Cookie,加过期时间
            </summary>
            <param name="name">Cookie Name</param>
            <param name="value">设置的值</param>
            <param name="hours">过期时间(小时)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.SetCookie(System.String,System.String,System.Web.HttpResponse,System.Web.HttpRequest)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">Cookie Name</param>
            <param name="value">设置的值</param>
            <param name="response">HttpResponse</param>
            <param name="request">HttpRequest</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.SetCookie(System.String,System.String,System.Web.HttpResponse,System.Web.HttpRequest,System.Int32)">
            <summary>
            设置Cookie
            </summary>
            <param name="name">Cookie Name</param>
            <param name="value">设置的值</param>
            <param name="response">HttpResponse</param>
            <param name="request">HttpRequest</param>
            <param name="hours">过期时间(小时)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.RemoveCookie(System.String,System.Web.HttpRequest,System.Web.HttpResponse)">
            <summary>
            删除Cookie
            </summary>
            <param name="name">Cookie Name</param>
            <param name="Request">HttpRequest</param>
            <param name="Response">HttpResponse</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.CookieHelper.ClearCookie(System.String)">
            <summary>
            清理Cookie
            </summary>
            <param name="cookieName">Cookie Name</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.DataExtensionsHelper">
            <summary>
            DataTable与普通实体转换。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.ToDataTable(System.Collections.IList)">
            <summary>  
            将集合类转换成DataTable  
            </summary>  
            <param name="list">集合</param>  
            <returns></returns>  
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.ToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>  
            将泛型集合类转换成DataTable  
            </summary>  
            <typeparam name="T">集合项类型</typeparam>  
            <param name="list">集合</param>  
            <returns>数据集(表)</returns>  
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>  
            将泛型集合类转换成DataTable  
            </summary>  
            <typeparam name="T">集合项类型</typeparam>  
            <param name="list">集合</param>  
            <param name="propertyName">需要返回的列的列名</param>  
            <returns>数据集(表)</returns>  
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.FillModel``1(System.Data.DataSet)">
            <summary>
            填充对象列表：用DataSet的第一个表填充实体类
            </summary>
            <param name="ds">DataSet</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.FillModel``1(System.Data.DataSet,System.Int32)">
            <summary>  
            填充对象列表：用DataSet的第index个表填充实体类
            </summary>  
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.FillModel``1(System.Data.DataTable)">
            <summary>  
            填充对象列表：用DataTable填充实体类
            </summary>  
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DataExtensionsHelper.FillModel``1(System.Data.DataRow)">
            <summary>  
            填充对象：用DataRow填充实体类
            </summary>  
        </member>
        <member name="T:Robin.EntLib.Common.Helper.DateHelper">
            <summary>
             日期帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetChinaDate(System.DateTime)">
            <summary>
            获取农历
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetYear(System.DateTime)">
            <summary>
            获取农历年份
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetMonth(System.DateTime)">
            <summary>
            获取农历月份
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetDay(System.DateTime)">
            <summary>
            获取农历日期
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetSolarTerm(System.DateTime)">
            <summary>
            获取节气
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetHoliday(System.DateTime)">
            <summary>
            获取公历节日
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DateHelper.GetChinaHoliday(System.DateTime)">
            <summary>
            获取农历节日
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.DnsHelper">
            <summary>
            DnsHelper
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DnsHelper.GetHostName">
            <summary>
            用户的机器名
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DnsHelper.GetIPAddress">
            <summary>
            获得本机局域网IP地址   
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DnsHelper.GetDynamicIPAddress">
            <summary>
            获得拨号动态分配IP地址   
            </summary>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.DownloadHelper">
            <summary>
            下载帮助类
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.FileNameExtension(System.String)">
            <summary>
            参数为虚拟路径
            </summary>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.MapPathFile(System.String)">
            <summary>
            获取物理地址
            </summary>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.DownLoadold(System.String)">
            <summary>
            普通下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.DownLoad(System.String)">
            <summary>
            分块下载
            </summary>
            <param name="FileName">文件虚拟路径</param>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.ResponseFile(System.Web.HttpRequest,System.Web.HttpResponse,System.String,System.String,System.Int64)">
            <summary>
            输出硬盘文件，提供下载 支持大文件、续传、速度限制、资源占用小
            </summary>
            <param name="_Request">Page.Request对象</param>
            <param name="_Response">Page.Response对象</param>
            <param name="_fileName">下载文件名</param>
            <param name="_fullPath">带文件名下载路径</param>
            <param name="_speed">每秒允许下载的字节数</param>
            <returns>返回是否成功</returns>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.Download(System.Web.HttpResponse,System.IO.Stream,System.String,System.String)">
            <summary>
            Downloads the specified response.
            </summary>
            <param name="response">The response.</param>
            <param name="stream">The stream.</param>
            <param name="filename">The filename.</param>
            <param name="contentType">Type of the content.</param>
            <remarks></remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DownloadHelper.Download(System.Web.HttpResponse,System.Web.HttpRequest,System.Byte[],System.String)">
            <summary>
            Downloads the specified response.
            </summary>
            <param name="Response">The response.</param>
            <param name="Request">The request.</param>
            <param name="content">The content.</param>
            <param name="filename">The filename.</param>
            <remarks></remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Getter`1">
            <summary>
            获取值
            </summary>
            <typeparam name="TValue">值类型</typeparam>
            <param name="entity">实体</param>
            <returns>值</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Setter`1">
            <summary>
            设置值
            </summary>
            <typeparam name="TValue">值类型</typeparam>
            <param name="entity">实体</param>
            <param name="value">值</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.InstantiateObject`1">
            <summary>
            实例对象
            </summary>
            <typeparam name="TObject">对象类型</typeparam>
            <returns>对象</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Getter">
            <summary>
            获取值
            </summary>
            <param name="entity">实体</param>
            <returns>值</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.Setter">
            <summary>
            设置值
            </summary>
            <param name="entity">实体</param>
            <param name="value">值</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.InstantiateObject">
            <summary>
            实例对象
            </summary>
            <returns>对象</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.DynamicHelper">
            <summary>
            动态方法帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateInstantiateObject``1">
            <summary>
            对象创建
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <returns>对象</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateInstantiateObject(System.Type)">
            <summary>
            对象创建
            </summary>
            <param name="type">对象类型</param>
            <returns>对象</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter``2(System.Reflection.PropertyInfo)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter``1(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="type">对象类型</param>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter``1(System.Reflection.PropertyInfo)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            获取属性值
            </summary>
            <param name="type">对象类型</param>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter``2(System.Reflection.FieldInfo)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter``1(System.Type,System.Reflection.FieldInfo)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="type">对象类型</param>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter``1(System.Reflection.FieldInfo)">
            <summary>
            获取属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetter(System.Type,System.Reflection.FieldInfo)">
            <summary>
            获取属性值
            </summary>
            <param name="type">对象类型</param>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter``2(System.Reflection.PropertyInfo)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter``1(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="type">对象类型</param>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter``1(System.Reflection.PropertyInfo)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            设置属性值
            </summary>
            <param name="type">对象类型</param>
            <param name="propertyInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter``2(System.Reflection.FieldInfo)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter``1(System.Type,System.Reflection.FieldInfo)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="type">对象类型</param>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter``1(System.Reflection.FieldInfo)">
            <summary>
            设置属性值
            </summary>
            <typeparam name="TObject">泛型对象类型</typeparam>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetter(System.Type,System.Reflection.FieldInfo)">
            <summary>
            设置属性值
            </summary>
            <param name="type">对象类型</param>
            <param name="fieldInfo">属性</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetDynamicMethod``1(System.Type)">
            <summary>
            获取设置属性
            </summary>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="type">对象类型</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateGetDynamicMethod(System.Type)">
            <summary>
            获取设置属性
            </summary>
            <param name="type">对象类型</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetDynamicMethod``1(System.Type)">
            <summary>
            获取设置属性
            </summary>
            <typeparam name="TValue">泛型属性值类型</typeparam>
            <param name="type">对象类型</param>
            <returns>属性</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.DynamicHelper.CreateSetDynamicMethod(System.Type)">
            <summary>
            获取设置属性
            </summary>
            <param name="type">对象类型</param>
            <returns>属性</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.EmitHelper">
            <summary>
            反射发出辅助工具类
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.EmitHelper._assemblyBuilder">
            <summary>
            程序集生成器
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.EmitHelper._moduleBuilder">
            <summary>
            模块生成器
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.EmitHelper._typeBuilder">
            <summary>
            类型生成器
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.EmitHelper._ILGenerator">
            <summary>
            IL生成器
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.#ctor">
            <summary>
            初始化对象
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.#ctor(System.String)">
            <summary>
            初始化对象
            </summary>
            <param name="typeName">动态类型的名称,比如类名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.#ctor(System.String,System.String)">
            <summary>
            初始化对象
            </summary>
            <param name="assemblyName">动态程序集的名称</param>
            <param name="typeName">动态类型的名称,比如类名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.#ctor(System.String,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.String)">
            <summary>
            初始化对象
            </summary>
            <param name="assemblyName">动态程序集的名称</param>
            <param name="access">动态程序集的访问模式</param>
            <param name="moduleName">动态模块的名称</param>
            <param name="typeName">动态类型的名称,比如类名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.CreateMethod(System.String,System.Type[])">
            <summary>
            创建动态方法
            </summary>
            <param name="methodName">方法名</param>
            <param name="parameterTypes">返回值类型</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.CreateMethod(System.String,System.Type,System.Type[])">
            <summary>
            创建动态方法
            </summary>
            <param name="methodName">方法名</param>
            <param name="returnType">返回值类型</param>
            <param name="parameterTypes">参数类型列表</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.CreateMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])">
            <summary>
            创建动态方法
            </summary>
            <param name="methodName">方法名</param>
            <param name="methodAttributes">方法的修饰符,比如定义抽象方法，静态方法等</param>
            <param name="conventions">方法调用约定，比如实例方法调用，静态方法调用等</param>
            <param name="returnType">返回值类型</param>
            <param name="parameterTypes">参数类型列表</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EmitHelper.SaveAssembly(System.String)">
            <summary>
            保存程序集
            </summary>
            <param name="assemblyFileName">程序集文件名称</param>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.EmitHelper.Type">
            <summary>
            获取动态创建的类型
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.EmitHelper.ILGenerator">
            <summary>
            IL生成器
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.EqualHelper">
            <summary>
            判断对象是否相等的帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EqualHelper.AreEqual(System.String[],System.String[])">
            <summary>
            比较两个字符串数组是否相等
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EqualHelper.AreEqual(System.Double[],System.Double[])">
            <summary>
            比较两个doulbe类型数组是否相等
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EqualHelper.AreEqual(System.Single[],System.Single[])">
            <summary>
            比较两个float类型]数字是否相等
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EqualHelper.AreEqual(System.Int32[],System.Int32[])">
            <summary>
            比较两个int类型数组是否相等
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EqualHelper.AreEqual(System.Object[],System.Object[])">
            <summary>
            比较两个object类型数组是否相等
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EqualHelper.AreEqual(System.Object,System.Object)">
            <summary>
            比较两个object是否相等
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ErrorHelper">
            <summary>
            错误处理
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ErrorHelper.GetInnerException(System.Exception)">
            <summary>
            获取最内部的异常
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ErrorHelper.GetErrorWithoutHtml(System.Exception)">
            <summary>
            获取异常日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ErrorHelper.GetHtmlError(System.Exception)">
            <summary>
            Returns HTML an formatted error message.
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ErrorHelper.GetHtmlWithoutError">
            <summary>
            Get Log Html
            </summary>
            <returns>Result</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.EventRegistry">
            <summary>
            事件订阅和发布的注册类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EventRegistry.PublishEvents(System.Object)">
            <summary>
            发布sourceObject对象所有的事件。
            </summary>
            <param name="sourceObject">
            需要发布的包含事件的对象。
            </param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EventRegistry.Subscribe(System.Object)">
            <summary>
            添加订阅者。
            当订阅者有和事件兼容的方法，将订阅所有的事件。
            </summary>
            <param name="subscriber">The subscriber to use.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.EventRegistry.Subscribe(System.Object,System.Type)">
            <summary>
            添加订阅者，订阅者将订阅制定类型的对象内部的事件。
            </summary>
            <param name="subscriber">订阅者.</param>
            <param name="targetSourceType">
            订阅者订阅的对象的类型.
            </param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.FileHelper">
            <summary>
            公用帮助文件处理类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.Create(System.String)">
            <summary>
            新建文件
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.ReName(System.String,System.String)">
            <summary>
            重命名文件
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.Move(System.String,System.String)">
            <summary>
            移动文件
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.Delete(System.String)">
            <summary>
            删除文件
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.DeleteSearchPattern(System.String,System.String)">
            <summary>
            删除目录中指定的文件类型。
            </summary>
            <param name="path">要搜索的目录。</param>
            <param name="searchPattern">要与 path 中的文件名匹配的搜索字符串。此参数不能以两个句点（“..”）结束，不能在 System.IO.Path.DirectorySeparatorChar
                或 System.IO.Path.AltDirectorySeparatorChar 的前面包含两个句点（“..”），也不能包含 System.IO.Path.InvalidPathChars
                中的任何字符。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.DeleteReverseSearchPattern(System.String,System.String)">
            <summary>
            删除目录中指定的文件类型以外的文件。
            </summary>
            <param name="path">要搜索的目录。</param>
            <param name="searchPattern">要与 path 中的文件名匹配的搜索字符串。此参数不能以两个句点（“..”）结束，不能在 System.IO.Path.DirectorySeparatorChar
                或 System.IO.Path.AltDirectorySeparatorChar 的前面包含两个句点（“..”），也不能包含 System.IO.Path.InvalidPathChars
                中的任何字符。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.DeleteEmptyDirectory(System.String)">
            <summary>
            删除空目录。
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.DeleteDirectory(System.String)">
            <summary>
            删除文件夹包含的所有文件和文件夹。
            </summary>
            <param name="path">需要删除的文件夹路径。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetFileType(System.String)">
            <summary>
            获取文件扩展名
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetFileNameWithoutExtension(System.String)">
            <summary>
            返回不具有扩展名的指定路径字符串的文件名
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.ExistDirectory(System.String)">
            <summary>
            判断目标文件夹是否存在
            </summary>
            <param name="path">文件夹路径 绝对路径  如： e:\key</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.Create(System.String,System.String)">
            <summary>
            创建文件, 如果文件已经存在, 则更新内容
            </summary>
            <param name="fileName">文件名</param>
            <param name="content">文件内容</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.Create(System.String,System.String,System.Boolean)">
            <summary>
            创建文件, 如果已经存在,是否备份原文件(文件名后加.bak)
            </summary>
            <param name="fileName">文件名</param>
            <param name="content">文件内容</param>
            <param name="backup">是否备份</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.Backup(System.String)">
            <summary>
            备份指定文件为.bak
            </summary>
            <param name="fileName">备份文件</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CreateDirectoryOfFileName(System.String)">
            <summary>
            如果文件的目录不存在就建立目录
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CreateDirectory(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="directoryName">文件夹名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetFileNum(System.String)">
            <summary>
            获取某目录下的所有文件(包括子目录下文件)的数量
            </summary>
            <param name="srcPath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetFilesCount(System.IO.DirectoryInfo)">
            <summary>
            获取某目录下的所有文件(包括子目录下文件)的数量
            </summary>
            <param name="dirInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CopyDirectory(System.String,System.String)">
            <summary>
            复制文件夹中的所有内容及其子目录所有文件
            </summary>
            <param name="oldDir">源文件夹及其路径</param>
            <param name="newDir">目标文件夹及其路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.ReadFile(System.String)">
            <summary>
            以文件流的形式读取指定文件的内容。
            </summary>
            <param name="file">指定的文件及其全路径。</param>
            <returns>返回 String。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.WriteFile(System.String,System.String)">
            <summary>
            以文件流的形式将内容写入到指定文件中（如果该文件或文件夹不存在则创建）
            </summary>
            <param name="file">文件名和指定路径</param>
            <param name="fileContent">文件内容</param>
            <returns>返回布尔值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.WriteFile(System.String,System.String,System.Boolean)">
            <summary>
            以文件流的形式将内容写入到指定文件中（如果该文件或文件夹不存在则创建）
            </summary>
            <param name="file">文件名和指定路径</param>
            <param name="fileContent">文件内容</param>
            <param name="Append">是否追加指定内容到该文件中</param>
            <returns>返回布尔值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.FileIsExist(System.String)">
            <summary>
            文件是否存在或无权访问
            </summary>
            <param name="path">相对路径或绝对路径</param>
            <returns>如果是目录也返回false</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.DirectoryIsExist(System.String)">
            <summary>
            目录是否存在或无权访问
            </summary>
            <param name="path">相对路径或绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.FileIsReadOnly(System.String)">
            <summary>
            文件是否只读
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.SetFileReadonly(System.String,System.Boolean)">
            <summary>
            设置文件是否只读
            </summary>
            <param name="fullpath"></param>
            <param name="flag">true表示只读，反之</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetFileSize(System.String)">
            <summary>
            取文件长度
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetFileCreateTime(System.String)">
            <summary>
            取文件创建时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetLastWriteTime(System.String)">
            <summary>
            取文件最后存储时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.IsPathRooted(System.String)">
            <summary>
            指示一个路径是相对路径还是绝对路径
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetSystemDirectory">
            <summary>
            取系统目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetSpeicalFolder(System.Environment.SpecialFolder)">
            <summary>
            取系统的特别目录
            </summary>
            <param name="folderType"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetTempPath">
            <summary>
            返回当前系统的临时目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetInvalidPathChars">
            <summary>
            取路径中不充许存在的字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetCurrentDirectory">
            <summary>
            取当前目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.SetCurrentDirectory(System.String)">
            <summary>
            设当前目录
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CreateTempZeroByteFile">
            <summary>
            创建一个零字节临时文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetRandomFileName">
            <summary>
            创建一个随机文件名，不创建文件本身
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CompareFilesHash(System.String,System.String)">
            <summary>
            判断两个文件的哈希值是否一致
            </summary>
            <param name="fileName1"></param>
            <param name="fileName2"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CalcuDirectorySize(System.IO.DirectoryInfo,System.Boolean)">
            <summary>
            计算一个目录的大小
            </summary>
            <param name="di">指定目录</param>
            <param name="includeSubDir">是否包含子目录</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.CopyDirectory(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            复制目录到目标目录
            </summary>
            <param name="source">源目录</param>
            <param name="destination">目标目录</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.GetAllDrives">
            <summary>
            取系统所有的逻辑驱动器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FileHelper.IsDrivePath(System.String)">
            <summary>
            检测一个目录是不是根目录标志
            </summary>
            <param name="path">路径名称</param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.FTPHelper">
            <summary>
            FTP Client
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.#ctor">
            <summary>
            缺省构造函数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.#ctor(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="remoteHost"></param>
            <param name="remotePath"></param>
            <param name="remoteUser"></param>
            <param name="remotePass"></param>
            <param name="remotePort"></param>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strRemoteHost">
            <summary>
            FTP服务器IP地址
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strRemotePort">
            <summary>
            FTP服务器端口
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strRemotePath">
            <summary>
            当前服务器目录
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strRemoteUser">
            <summary>
            登录用户账号
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strRemotePass">
            <summary>
            用户登录密码
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.bConnected">
            <summary>
            是否登录
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Connect">
            <summary>
            建立连接 
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.DisConnect">
            <summary>
            关闭连接
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.SetTransferType(Robin.EntLib.Common.Helper.FTPHelper.TransferType)">
            <summary>
            设置传输模式
            </summary>
            <param name="ttType">传输模式</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.GetTransferType">
            <summary>
            获得传输模式
            </summary>
            <returns>传输模式</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Dir(System.String)">
            <summary>
            获得文件列表
            </summary>
            <param name="strMask">文件名的匹配字符串</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.GetFileSize(System.String)">
            <summary>
            获取文件大小
            </summary>
            <param name="strFileName">文件名</param>
            <returns>文件大小</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Delete(System.String)">
            <summary>
            删除
            </summary>
            <param name="strFileName">待删除文件名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Rename(System.String,System.String)">
            <summary>
            重命名(如果新文件名与已有文件重名,将覆盖已有文件)
            </summary>
            <param name="strOldFileName">旧文件名</param>
            <param name="strNewFileName">新文件名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Get(System.String,System.String)">
            <summary>
            下载一批文件
            </summary>
            <param name="strFileNameMask">文件名的匹配字符串</param>
            <param name="strFolder">本地目录(不得以结束)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Get(System.String,System.String,System.String)">
            <summary>
            下载一个文件
            </summary>
            <param name="strRemoteFileName">要下载的文件名</param>
            <param name="strFolder">本地目录(不得以结束)</param>
            <param name="strLocalFileName">保存在本地时的文件名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Put(System.String,System.String)">
            <summary>
            上传一批文件
            </summary>
            <param name="strFolder">本地目录(不得以结束)</param>
            <param name="strFileNameMask">文件名匹配字符(可以包含*和?)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.Put(System.String)">
            <summary>
            上传一个文件
            </summary>
            <param name="strFileName">本地文件名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.MkDir(System.String)">
            <summary>
            创建目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.RmDir(System.String)">
            <summary>
            删除目录
            </summary>
            <param name="strDirName">目录名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.ChDir(System.String)">
            <summary>
            改变目录
            </summary>
            <param name="strDirName">新的工作目录名</param>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strMsg">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.strReply">
            <summary>
            服务器返回的应答信息(包含应答码)
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.iReplyCode">
            <summary>
            服务器返回的应答码
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.socketControl">
            <summary>
            进行控制连接的socket
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.trType">
            <summary>
            传输模式
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.BLOCK_SIZE">
            <summary>
            接收和发送数据的缓冲区
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.FTPHelper.ASCII">
            <summary>
            编码方式
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.ReadReply">
            <summary>
            将一行应答字符串记录在strReply和strMsg
            应答码记录在iReplyCode
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.CreateDataSocket">
            <summary>
            建立进行数据连接的socket
            </summary>
            <returns>数据连接socket</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.CloseSocketConnect">
            <summary>
            关闭socket连接(用于登录以前)
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.ReadLine">
            <summary>
            读取Socket返回的所有字符串。
            </summary>
            <returns>包含应答码的字符串行</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.FTPHelper.SendCommand(System.String)">
            <summary>
            发送命令并获取应答码和最后一行应答字符串
            </summary>
            <param name="strCommand">命令</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.FTPHelper.TransferType">
            <summary>
            传输模式:二进制类型、ASCII类型
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.HashHelper">
            <summary>
            获取对象的 hash 代码帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.String[])">
            <summary>
            获取字符串数组的哈希代码
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.Double[])">
            <summary>
            获取double类型数组的哈希代码
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.Single[])">
            <summary>
            获取float类型数组的哈希代码
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.Int32[])">
            <summary>
            获取int类型数组的哈希代码
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.Object[])">
            <summary>
            获取object类型数组的哈希代码
            </summary>
            <param name="objs"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.Object)">
            <summary>
            获取object类型数组的哈希代码
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.String)">
            <summary>
            获取string类型数组的哈希代码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HashHelper.GetHashCode(System.Boolean)">
            <summary>
            获取string类型数组的哈希代码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="postData">post 提交的字符串</param>
            <param name="isPost">是否是post</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.GetHtml(System.String,System.Net.CookieContainer)">
            <summary>
            获取HTML
            </summary>
            <param name="url">地址</param>
            <param name="cookieContainer">CookieContainer</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.GetStream(System.String,System.Net.CookieContainer)">
            <param name="url">地址</param>
            <param name="cookieContainer">cookieContainer</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.NoHTML(System.String)">
            <summary>   
            清除HTML标记   
            </summary>   
            <param name="NoHTML">包括HTML的源码</param>   
            <returns>已经去除后的文字</returns>   
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.GetHref(System.String)">
            <summary>
            获取页面的链接正则
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.GetImgSrc(System.String,System.String)">
            <summary>
            匹配页面的图片地址
            </summary>
            <param name="imgHttp">要补充的http://路径信息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.GetImg(System.String,System.String)">
            <summary>
            匹配<img src="" />中的图片路径实际链接
            </summary>
            <param name="ImgString"><img src="" />字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.Get_Http(System.String)">
            <summary>
            以GET方式抓取远程页面内容
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.Post_Http(System.String,System.String,System.String)">
            <summary>
            以POST方式抓取远程页面内容
            </summary>
            <param name="postData">参数列表</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.ZipHtml(System.String)">
            <summary>
            压缩HTML输出
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.DelHtml(System.String,System.String)">
            <summary>
            过滤指定HTML标签
            </summary>
            <param name="s_TextStr">要过滤的字符</param>
            <param name="html_Str">a img p div</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.File(System.String,System.Web.UI.Page)">
            <summary>
            加载文件块
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.CSS(System.String,System.Web.UI.Page)">
            <summary>
            加载CSS样式文件
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HTMLHelper.JS(System.String,System.Web.UI.Page)">
            <summary>
            加载javascript脚本文件
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.HTMLHelper.CookieContainer">
            <summary> 
            Cookie
            </summary> 
        </member>
        <member name="P:Robin.EntLib.Common.Helper.HTMLHelper.Encoding">
            <summary> 
            语言
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.Helper.HttpHelper.cookieContainer">
            <summary>
            Cookie容器
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Robin.EntLib.Common.Helper.HttpHelper"/> class.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.#ctor(System.Net.CookieContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Robin.EntLib.Common.Helper.HttpHelper"/> class.
            </summary>
            <param name="cc">The cc.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Robin.EntLib.Common.Helper.HttpHelper"/> class.
            </summary>
            <param name="contentType">Type of the content.</param>
            <param name="accept">The accept.</param>
            <param name="userAgent">The user agent.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.#ctor(System.Net.CookieContainer,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Robin.EntLib.Common.Helper.HttpHelper"/> class.
            </summary>
            <param name="cc">The cc.</param>
            <param name="contentType">Type of the content.</param>
            <param name="accept">The accept.</param>
            <param name="userAgent">The user agent.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.GetHtml(System.String,System.String,System.Boolean,System.Net.CookieContainer)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <param name="cookieContainer">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.GetHtml(System.String,System.Net.CookieContainer)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="cookieContainer">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.GetHtml(System.String)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.HttpHelper.GetHtml(System.String,System.String,System.Boolean)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.HttpHelper.Encoding">
            <summary>
            获取网页源码时使用的编码
            </summary>
            <value></value>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,System.String)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>    
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.ImageWatermark(System.String,System.String,System.String)">
            <summary>
            图片水印处理方法
            </summary>
            <param name="path">需要加载水印的图片路径（绝对路径）</param>
            <param name="waterpath">水印图片（绝对路径）</param>
            <param name="location">水印位置（传送正确的代码）</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.GetLocation(System.String,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            图片水印位置处理方法
            </summary>
            <param name="location">水印位置</param>
            <param name="img">需要添加水印的图片</param>
            <param name="waterimg">水印图片</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.LetterWatermark(System.String,System.Int32,System.String,System.Drawing.Color,System.String)">
            <summary>
            文字水印处理方法
            </summary>
            <param name="path">图片路径（绝对路径）</param>
            <param name="size">字体大小</param>
            <param name="letter">水印文字</param>
            <param name="color">颜色</param>
            <param name="location">水印位置</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.GetLocation(System.String,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            文字水印位置的方法
            </summary>
            <param name="location">位置代码</param>
            <param name="img">图片对象</param>
            <param name="width">宽(当水印类型为文字时,传过来的就是字体的大小)</param>
            <param name="height">高(当水印类型为文字时,传过来的就是字符的长度)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.LDPic(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
            <summary>
            调整光暗
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
            <param name="val">增加或减少的光暗值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.RePic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            反色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.FD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            浮雕处理
            </summary>
            <param name="oldBitmap">原始图片</param>
            <param name="Width">原始图片的长度</param>
            <param name="Height">原始图片的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.ResizeImage(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            拉伸图片
            </summary>
            <param name="bmp">原始图片</param>
            <param name="newW">新的宽度</param>
            <param name="newH">新的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.FilPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            滤色处理
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.RevPicLR(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            左右翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.RevPicUD(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            上下翻转
            </summary>
            <param name="mybm">原始图片</param>
            <param name="width">原始图片的长度</param>
            <param name="height">原始图片的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.Compress(System.String,System.String)">
            <summary>
            压缩到指定尺寸
            </summary>
            <param name="oldfile">原文件</param>
            <param name="newfile">新文件</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.BWPic(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            转换为黑白图片
            </summary>
            <param name="mybt">要进行处理的图片</param>
            <param name="width">图片的长度</param>
            <param name="height">图片的高度</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ImageHelper.GetFrames(System.String,System.String)">
            <summary>
            获取图片中的各帧
            </summary>
            <param name="pPath">图片路径</param>
            <param name="pSavePath">保存路径</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.IniConfig">
            <summary>
            配置文件容器
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.JsonHelper">
            <summary>
            Json帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.DataTableToJson(System.Data.DataTable)">
            <summary>
            转换 DataTable 对象到 Json 字符串。转换后Json的使用方法和DataTable一致。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.DataTableToJsonArray(System.Data.DataTable)">
            <summary>
            把DataTable 转成 Json 格式 返回，转换后为一个数组对象，每条记录在数组中都有对应关系。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.SerializeObject(System.Object)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.SerializeObject(System.Xml.XmlNode)">
            <summary>
            
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.DeserializeObject(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.DeserializeObject(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.DeserializeDynamic(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.ToEscapedJavaScriptString(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.JsonHelper.GetJsonObject(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.MimeHelper">
            <summary>
            Helper methods for MIME types.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.MimeHelper.MapFileExtenstionToMimeType(System.String)">
            <summary>
            Mapps a file extension to a mime type.
            </summary>
            <param name="fileExtension">The file extension.</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.MimeHelper.CheckFillMappingDictionary">
            <summary>
            Checks the fill mapping dictionary.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.MimeHelper.mappings">
             <summary>
            
             </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.NetHelper">
            <summary>
            网络操作相关的类
            </summary>    
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetValidIP(System.String)">
            <summary>
            检查设置的IP地址是否正确，并返回正确的IP地址,无效IP地址返回"-1"。
            </summary>
            <param name="ip">设置的IP地址</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确，并返回正确的端口号,无效端口号返回-1。
            </summary>
            <param name="port">设置的端口号</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetIP4Address">
            <summary>
            获取IPV4格式的客户端地址（暂不考虑支持IPv6）。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>        
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>     
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.SendEmail(System.String,System.String,System.String,System.Boolean)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="receiveEmail">接收电子邮件的地址</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="IsEnableSSL">是否开启SSL</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NetHelper.SendEmail(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            发送电子邮件,所有SMTP配置信息均在config配置文件中system.net节设置.
            </summary>
            <param name="sendEmailAddress">发件人的电子邮件地址</param>
            <param name="senderName">发件人的显示名称</param>
            <param name="receiveEmail">接收电子邮件的地址</param>
            <param name="msgSubject">电子邮件的标题</param>
            <param name="msgBody">电子邮件的正文</param>
            <param name="isBodyHtmlFormat">邮件正文是否按Html格式发送</param>
            <param name="IsEnableSSL">是否开启SSL</param>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.NetHelper.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.NetHelper.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>        
        </member>
        <member name="P:Robin.EntLib.Common.Helper.NetHelper.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>        
        </member>
        <member name="T:Robin.EntLib.Common.Helper.NumberHelper">
            <summary>
            数字帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NumberHelper.X2X(System.String,System.Int32,System.Int32)">
            <summary>
            任意进制转换,将fromBase进制表示的value转换为toBase进制
            </summary>
            <param name="value"></param>
            <param name="fromBase">原来进制（2-36进制）</param>
            <param name="toBase">转换后的进制（2-36进制）</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.NumberHelper.x2h(System.String,System.Int32)">
            <summary>
            将指定基数的数字的 System.String 表示形式转换为等效的 64 位有符号整数。
            </summary>
            <param name="value">包含数字的 System.String。</param>
            <param name="fromBase">value 中数字的基数，它必须是[2,36]</param>
            <returns>等效于 value 中的数字的 64 位有符号整数。- 或 - 如果 value 为 null，则为零。</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ObjectFactory">
            <summary>
            配置对象创建工厂。所有配置对象存在于 “System.config”文件中。
            他是一个XML文件，节点的配置请参考 Spring.NET 的配置文档。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.ObjectFactory.ctx">
            <summary>
            Spring框架的容器对象。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.#ctor(System.String)">
            <summary>
            按配置文件初始化对象工厂。
            </summary>
            <param name="systemConfigPath">配置文件路径。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.ContainsObject(System.String)">
            <summary>
             对象工厂中是否定义了给定的名称匹配的对象（对象可能通过其他的
             途径而不通过配置来进行注册）。
            </summary>
            <param name="name">对象的名称。</param>
            <returns>如果对象已经在配置文件中定义，返回True，否则返回False。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.ContainsObjectDefinition(System.String)">
            <summary>
            检查配置文件中是否包含给定名称的对象定义。
            </summary>
            <param name="name">需要查找的对象的名称。</param>
            <returns>
            <see langword="true" /> 如果配置文件中存在给定的对象名称，则返回True。
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObjectDefinitionNameList">
            <summary>
            返回配置文件中所有的对象的名称。.
            </summary>
            <returns>
            返回配置文件中对象名称的数组，如果没有对象定义，则返回一个空的数组。
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObjectDefinitionNames">
            <summary>
            返回配置文件中所有的对象的名称。.
            </summary>
            <returns>
            返回配置文件中对象名称的数组，如果没有对象定义，则返回一个空的数组。
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObjectNameListForType(System.Type)">
            <summary>
            返回配置文件中给定的<see cref="T:System.Type" />类型 （包括他的子类）的所有
            配置对象的名称数组。
            </summary>
            <param name="type">
            需要匹配的类型， 可以是 class 或者 interface, 如果设置为 <see langword="null" />
            则匹配所有的对象.
            </param>
            <returns>
            返回配置文件中所有匹配对象的名称，如果没有匹配对象，将返回空数组。
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObjectNamesForType(System.Type)">
            <summary>
            返回配置文件中给定的<see cref="T:System.Type" />类型 （包括他的子类）的所有
            配置对象的名称数组。
            </summary>
            <param name="type">
            需要匹配的类型， 可以是 class 或者 interface, 如果设置为 <see langword="null" />
            则匹配所有的对象.
            </param>
            <returns>
            返回配置文件中所有匹配对象的名称，如果没有匹配对象，将返回空数组。
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObjectsOfType(System.Type)">
            <summary>
            返回所有匹配对象实例的键值对集合。
            </summary>
            <param name="type">
            给定的匹配类型 <see cref="T:System.Type" /> ，可以是类或者接口。
            </param>
            <returns>
            返回符合条件的<see cref="T:System.Collections.IDictionary" /> 集合，
            他包含了一个键为配置名称值为配置名称对应的配置对象实例的集合。
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.IsSingleton(System.String)">
            <summary>
            判断给定名称的对象是否为单例创建模式。
            </summary>
            <param name="name">需要判断的对象的配置名称。</param>
            <returns>如果是单例创建模式，返回True，否则返回False。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObject(System.String)">
            <summary>
             返回给定名称的对象实例。
            </summary>
            <param name="name">需要返回的对象的名称。</param>
            <returns>匹配给定名称的对象实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetObject(System.String,System.Type)">
            <summary>
            返回给定名称的实例，并且实例的类型需要和给定的类型保持一致性。
            </summary>
            <param name="name">需要返回的对象的名称。</param>
            <param name="requiredType">
            <see cref="T:System.Type" />返回对象需要匹配的类型，可以是
            接口或者类，当设置为父类的时候可以返回所有符合条件的子类。
            例如，如果设置为<see cref="T:System.Object" />类型
            这个方法将返回匹配的实例而不论实例所属类型。
            </param>
            <returns>匹配给定名称和类型的对象实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectFactory.GetType(System.String)">
            <summary>
            返回给定名称的对象的类型。
            </summary>
            <param name="name">需要测定的对象类型的配置名称。</param>
            <returns> 返回配置对象的类型。如果不能测定类型则返回 NULL。</returns>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ObjectFactory.SystemObjectService">
            <summary>
            系统对象服务。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ObjectFactory.ObjectDefinitionCount">
            <summary>
             返回配置文件中定义的对象的数目。.
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.ObjectFactory.Item(System.String)">
            <summary>
            返回给定名称的对象实例。
            </summary>
            <param name="name">需要返回的对象的名称。</param>
            <returns>匹配给定名称的对象实例。</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ObjectPool">
            <summary>
            使用该类需要引起注意的是，如果你没有使用对象池来创建一个对象，而用它的ReleaseObject,则可能会出现错误,
            特别是你设定的对象最大个数较小的时候。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.GetInstance">
            <summary>
            取得一个共享的实例
            </summary>
            <returns>the shared ObjectPool instance</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.RegisterType(System.Type,Robin.EntLib.Common.Helper.ObjectPool.CreateObject,System.Int16,System.Int16,System.Int32)">
            <summary>
            在对象池中登记一个给定的类型
            </summary>
            <param name="t"></param>
            <param name="createDelegate"></param>
            <param name="minPoolSize"></param>
            <param name="maxPoolSize"></param>
            <param name="creationTimeout"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.UnregisterType(System.Type)">
            <summary>
            在对象池中注销一个给定的类型
            </summary>
            <param name="t">pooled type</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.GetObject(System.Type)">
            <summary>
            从对象池中取一个指定对象
            </summary>
            <param name="t">type to retrieve from the pool</param>
            <returns>object of the given type</returns>
            <remarks>
            它可能是从对象池中取得一个对象，也可能是新建一个对象，如果对象
            池已达到它的最大数，那么它会进行等待，如果你在最初进行登记时指定
            了对象的创建时间，它会等到创建时间的结束，如果不成功，它返回null
            </remarks>
            <exception cref="T:Robin.EntLib.Common.Helper.ObjectPoolException">A creation timeout occurred.</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.ReleaseObject(System.Object)">
            <summary>
            释放对象
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.ExecuteFromPool(Robin.EntLib.Common.Helper.ObjectPool.UseObject,System.Type,System.Object[])">
            <summary>
            从线程池中取得一个对象，并执行完一个方法后，又重新将对象交还给线程池.
            </summary>
            <param name="useDelegate">delegate to invoke with object from pool</param>
            <param name="t">desired type of object from pool</param>
            <param name="arg">argument to supply to delegate</param>
            <remarks>
            This method ensures that an object is always returned to the pool
            after it is used, even if an exception occurs.  This alleviates the
            programmer from having to call ReleaseObject() to return the object
            to the pool.
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.GetObjectData(System.Type)">
            <summary>
            内部函数：取一个对象类型的汇聚
            </summary>
            <param name="t">pooled type</param>
            <returns>ObjectData associated with given type</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.AllocateObject(Robin.EntLib.Common.Helper.ObjectPool.ObjectData)">
            <summary>
            使用用户指定的对象创建代理函数创建一个对象
            </summary>
            <param name="data">object pool data for desired type</param>
            <returns>an object of the associated type</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.RetrieveFromPool(Robin.EntLib.Common.Helper.ObjectPool.ObjectData)">
            <summary>
            内部函数： 返回一个指定类型的对象
            </summary>
            <param name="data">object pool data for desired type</param>
            <returns>an object of the associated type</returns>
            <exception cref="T:Robin.EntLib.Common.Helper.ObjectPoolException">A creation timeout occurred.</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.DequeueFromPool(Robin.EntLib.Common.Helper.ObjectPool.ObjectData)">
            <summary>
            从对象池中取得一个对象
            </summary>
            <param name="data"></param>
            <returns>The first available object in the queue, or null if none is available.</returns>
            <remarks>
            This method assumes that the Monitor lock is held.
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.WaitForObject(Robin.EntLib.Common.Helper.ObjectPool.ObjectData,System.Int32)">
            <summary>
            等待一定时间取得一个对象    
            </summary>
            <param name="data"></param>
            <param name="waitTime"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectPool.ReturnToPool(System.Object,Robin.EntLib.Common.Helper.ObjectPool.ObjectData)">
            <summary>
            返回给定的对象到对象池
            </summary>
            <param name="obj">object to return to the pool</param>
            <param name="data">object data asosciated with object's type</param>
            <remarks>
            This method queues the object into the pool.  If the minimum number
            of objects are not available, then a reference to the object is
            enqueued to ensure the object remains available.  If the minimum
            number of objects are already available, then only a weak reference
            to the object is enqueued.  This permits the garbage collector to
            reclaim this memory so that the pool will eventually return to
            the minimum size.  In a busy system, however, the object can be
            reclaimed from the weak reference.
            
            Note that the data.inPool value only tracks strong reference in
            the pool, so we can track the actual number of real objects.
            </remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ObjectPool.ObjectData">
            <summary>
            对象类型的汇聚队列
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ObjectPool.CreateObject">
            <summary>
            Represents a method the creates a new object of type t.
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ObjectPool.UseObject">
            <summary>
            Represents a method that uses a given object from the pool.
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ObjectSerializatizer">
            <summary>
            序列化助手类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectSerializatizer.Serialize(System.Object)">
            <summary>
            将 obj 对象序列化成 byte[]
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ObjectSerializatizer.Deserialize(System.Byte[])">
            <summary>
            将 byte[] 反序列化成 obj 对象
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.POP3">
            <summary>
            邮件接收类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.POP3.#ctor(System.String,System.String,System.String)">
            <summary>
            POP3
            </summary>
            <param name="server">POP3服务器名称</param>
            <param name="userName">用户名</param>
            <param name="password">用户密码</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.POP3.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            POP3
            </summary>
            <param name="server">POP3服务器名称</param>
            <param name="port">端口号</param>
            <param name="userName">用户名</param>
            <param name="password">用户密码</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.POP3.GetNumberOfNewMessages">
            <summary>
            获得新邮件数量
            </summary>
            <returns>新邮件数量</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.POP3.GetNewMessages(System.String)">
            <summary>
            获取新邮件内容
            </summary>
            <param name="subj">邮件主题</param>
            <returns>新邮件内容</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.POP3.GetNewMessages(System.Int32)">
            <summary>
            获取新邮件内容
            </summary>
            <param name="nIndex">新邮件索引</param>
            <returns>新邮件内容</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.RandomHelper">
            <summary>
            使用Random类生成伪随机数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RandomHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RandomHelper.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            生成一个指定范围的随机整数，该随机数范围包括最小值，但不包括最大值
            </summary>
            <param name="minNum">最小值</param>
            <param name="maxNum">最大值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RandomHelper.GetRandomDouble">
            <summary>
            生成一个0.0到1.0的随机小数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RandomHelper.GetRandomArray``1(``0[])">
            <summary>
            对一个数组进行随机排序
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="arr">需要随机排序的数组</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.ReflectionHelper">
            <summary>
            反射帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance(System.String)">
            <summary>
            按指定的类型描述以默认的构造器建立一个任意类型。
            </summary>
            <param name="typeName">类型描述。</param>
            <returns>返回的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance(System.String,System.Type)">
            <summary>
            按指定的类型描述以默认的构造器建立一个类型。
            </summary>
            <param name="typeName">类型描述。</param>
            <param name="expectedType">期望实现的类型。</param>
            <returns>返回的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance(System.String,System.Type,System.Object[])">
            <summary>
            按指定的类型描述建立一个类型。
            </summary>
            <param name="typeName">类型描述。</param>
            <param name="expectedType">期望实现的类型。</param>
            <param name="args">构造器参数。</param>
            <returns>返回的实例。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetProperty(System.Object,System.String)">
            <summary>
            按描述读取实例属性值。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="propertyName">属性名。</param>
            <returns>返回属性值。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetProperty(System.Object,System.String,System.Object[])">
            <summary>
            按描述读取实例属性值。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="propertyName">属性名。</param>
            <param name="args">属性参数表。</param>
            <returns>返回属性值。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.SetProperty(System.Object,System.String,System.Object)">
            <summary>
            按描述设置实例属性值。
            </summary>
            <param name="instance">对象实例</param>
            <param name="propertyName">属性名</param>
            <param name="propertyValue">属性值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Invoke(System.Object,System.String)">
            <summary>
            按描述执行指定的没有参数的方法。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="methodName">方法名。</param>
            <returns>方法返回结果。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Invoke(System.Object,System.String,System.Object[])">
            <summary>
            按描述执行指定方法。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="methodName">方法名。</param>
            <param name="args">方法参数。</param>
            <returns>方法返回结果。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Invoke(System.Object,System.String,System.String[])">
            <summary>
            按描述执行指定方法。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="methodName">方法名。</param>
            <param name="jsonArgs">json 格式的方法参数。</param>
            <returns>方法返回结果。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.HTTPInvoke(System.Object,System.String,System.Web.HttpRequest)">
            <summary>
            按描述执行指定方法。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="methodName">方法名。</param>
            <param name="request">请求数据。</param>
            <returns>方法返回结果。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.InvokeXML(System.Object,System.String,System.String[])">
            <summary>
            按描述执行指定方法。
            </summary>
            <param name="instance">对象实例。</param>
            <param name="methodName">方法名。</param>
            <param name="xmlArgs">json 格式的方法参数。</param>
            <returns>方法返回结果。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
            得到一个程序集的版本号。
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.IsSubInterface(System.Type,System.Type)">
            <summary>
            判断某个类是否实现了某个接口。
            </summary>
            <param name="children"></param>
            <param name="parentInterface"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.LoadAssembly(System.String)">
            <summary>
            加载程序集
            </summary>
            <param name="assemblyName">程序集名称,不要加上程序集的后缀，如.dll</param> 
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetType(System.String)">
            <summary>
            获取本地程序集中的类型
            </summary>
            <param name="typeName">类型名称，范例格式："命名空间.类名",类型名称必须在本地程序集中</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetType(System.Reflection.Assembly,System.String)">
            <summary>
            获取指定程序集中的类型
            </summary>
            <param name="assembly">指定的程序集</param>
            <param name="typeName">类型名称，范例格式："命名空间.类名",类型名称必须在assembly程序集中</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance(System.Type,System.Object[])">
            <summary>
            动态创建对象实例
            </summary>
            <param name="type">类型</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance(System.String,System.Object[])">
            <summary>
            动态创建对象实例
            </summary>
            <param name="className">类名，格式:"命名空间.类名"</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance``1(System.Type,System.Object[])">
            <summary>
            创建类的实例
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="type">类型</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance``1(System.String,System.Object[])">
            <summary>
            创建类的实例
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="className">类名，格式:"命名空间.类名"</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance(System.Reflection.Assembly,System.String,System.Object[])">
            <summary>
            动态创建对象实例
            </summary>
            <param name="assembly">程序集</param>
            <param name="className">类名，格式:"命名空间.类名"</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateInstance``1(System.Reflection.Assembly,System.String,System.Object[])">
            <summary>
            动态创建对象实例
            </summary>
            <param name="assembly">程序集</param>
            <param name="className">类名，格式:"命名空间.类名"</param>
            <param name="parameters">传递给构造函数的参数</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateProxy(System.Type,System.String)">
            <summary>
            创建远程代理对象
            </summary>
            <param name="type">远程对象的类型</param>
            <param name="url">远程对象的URL地址</param>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CreateProxy``1(System.String)">
            <summary>
            创建远程代理对象
            </summary>
            <typeparam name="T">远程对象类</typeparam>
            <param name="url">远程对象的URL地址</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.IsDefinedAttribute``1(System.Reflection.MemberInfo)">
            <summary>
            检测在元素上是否使用了指定特性
            </summary>
            <typeparam name="T">特性</typeparam>
            <param name="element">成员元素</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetConstructorAttribute``2(System.Type[])">
            <summary>
            获取构造函数的自定义特性
            </summary>
            <typeparam name="T">目标类型,比如要获取类Class1的构造函数自定义属性Attribute1,
            则传入Class1</typeparam>
            <typeparam name="K">获取的自定义特性,比如Attribute1</typeparam>
            <param name="types">构造函数的数据类型列表,比如构造函数有两个参数:
            string param1,int param2 . 则传入typeof(string),typeof(int)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetPropertyAttribute``2(System.String)">
            <summary>
            获取属性的自定义特性
            </summary>
            <typeparam name="T">目标类型,比如要获取类Class1的构造函数自定义属性Attribute1,
            则传入Class1</typeparam>
            <typeparam name="K">获取的自定义特性,比如Attribute1</typeparam>
            <param name="propertyName">字符串形式的属性名</param> 
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetNamespace``1">
            <summary>
            获取类的命名空间
            </summary>
            <typeparam name="T">类名或接口名</typeparam>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            将值装载到目标对象的指定属性中
            </summary>
            <param name="target">要装载数据的目标对象</param>
            <param name="propertyName">目标对象的属性名</param>
            <param name="value">要装载的值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.SetValue(System.Object,System.Reflection.MemberInfo,System.Object)">
            <summary>
            设置成员的值
            </summary>
            <param name="target">要装载数据的目标对象</param>
            <param name="memberInfo">目标对象的成员</param>
            <param name="value">要装载的值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.CoerceValue(System.Type,System.Type,System.Object)">
            <summary>
            强制将值转换为指定类型
            </summary>
            <param name="propertyType">目标类型</param>
            <param name="valueType">值的类型</param>
            <param name="value">值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetPropertyType(System.Type)">
            <summary>
            获取类型,如果类型为Nullable(of T)，则返回Nullable(of T)的基础类型
            </summary>
            <param name="propertyType">需要转换的类型</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Map(System.Object,System.Object)">
            <summary>
            将源对象的数据装载到目标对象
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Map(System.Object,System.Object,System.String[])">
            <summary>
            将源对象的数据装载到目标对象
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
            <param name="ignoreList">被忽略装载的键名列表。如果属性为只读，则不应该装载数据，应把该属性名传入。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Map(System.Object,System.Object,System.Boolean,System.String[])">
            <summary>
            将源对象的数据装载到目标对象
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
            <param name="suppressExceptions">遇到错误,是否抛出异常,默认不抛出。如果要抛出异常，则传入false。</param>
            <param name="ignoreList">被忽略装载的键名列表。如果属性为只读，则不应该装载数据，应把该属性名传入。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.GetSourceProperties(System.Type)">
            <summary>
            获取类型所有可浏览属性
            </summary>
            <param name="sourceType">要获取属性列表的类型</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Map(System.Collections.IDictionary,System.Object)">
            <summary>
            将字典集合中的值装载到目标对象的指定属性中，属性名为字典中的键
            </summary>
            <param name="source">字典集合</param>
            <param name="target">目标对象</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Map(System.Collections.IDictionary,System.Object,System.String[])">
            <summary>
            将字典集合中的值装载到目标对象的指定属性中，属性名为字典中的键
            </summary>
            <param name="source">字典集合</param>
            <param name="target">目标对象</param>
            <param name="ignoreList">被忽略装载的键名列表。如果属性为只读，则不应该装载数据，应把该属性名传入。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.Map(System.Collections.IDictionary,System.Object,System.Boolean,System.String[])">
            <summary>
            将字典集合中的值装载到目标对象的指定属性中，属性名为字典中的键
            </summary>
            <param name="source">字典集合</param>
            <param name="target">目标对象</param>
            <param name="suppressExceptions">遇到错误,是否抛出异常,默认不抛出。如果要抛出异常，则传入false。</param>
            <param name="ignoreList">被忽略装载的键名列表。如果属性为只读，则不应该装载数据，应把该属性名传入。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.InvokeMethod``1(System.Type,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="type">类型，在该类型上执行方法。该重载方法只能执行
            构造函数不带参数的方法</param>
            <param name="methodName">调用的方法名</param>
            <param name="parameters">为调用方法传递的参数</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.InvokeMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            执行方法
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="instance">实例，在该实例上执行方法。</param>
            <param name="methodName">调用的方法名</param>
            <param name="parameters">调用的参数</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.ReflectionHelper.InvokeMethod``1(System.Object,System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            执行方法
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="instance">实例，在该实例上执行方法。</param>
            <param name="methodName">调用的方法名</param>
            <param name="flag">搜索标志</param>
            <param name="parameters">调用的参数</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.RMBHelper">
            <summary> 
            转换人民币大小金额。 
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.Convert(System.Decimal)">
            <summary>
            转换成人民币大写形式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.Convert(System.Double)">
            <summary>
            转换成人民币大写形式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.Convert(System.Single)">
            <summary>
            转换成人民币大写形式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.Convert(System.Int32)">
            <summary>
            转换成人民币大写形式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.Convert(System.Int64)">
            <summary>
            转换成人民币大写形式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.Convert(System.String)">
            <summary>
            转换成人民币大写形式
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.ConvertDecimal(System.String)">
            <summary>
            小数部分的处理
            </summary>
            <param name="decPart">需要处理的小数部分</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.GetUnit(System.Int32)">
            <summary>
            获取人民币中文形式的对应位置的单位标志
            </summary>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.DigToCC(System.Char)">
            <summary>
            数字转换为相应的中文字符 ( Digital To Chinese Char )
            </summary>
            <param name="c">以字符形式存储的数字</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.RMBHelper.CombinUnit(System.String)">
            <summary>
            合并兆亿万词
            </summary>
            <param name="rmb"></param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.RMBHelper.MaxSupportNumber">
            <summary>
            支持的最大转换数
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.RMBHelper.MinSupportNumber">
            <summary>
            支持的最小数
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.SMTP">
            <summary>
            邮件发送类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.SMTP.#ctor(System.String,System.String,System.String,System.String)">
            
            <summary>
            邮件发送类
            </summary>
            <param name="mailFrom">发件人地址</param>
            <param name="smtpServer">SMTP 服务器</param>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.SMTP.#ctor(System.String,System.String,System.String,System.String,System.String)">
            
            <summary>
            邮件发送类
            </summary>
            <param name="mailFrom">发件人地址</param>
            <param name="displayName">显示的名称</param>
            <param name="smtpServer">SMTP 服务器</param>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.SMTP.Send(System.String,System.String,System.String[],System.String[],System.String[],System.String,System.String,System.String[],System.Net.Mail.MailPriority,System.Boolean,System.Text.Encoding)">
            
            <summary>
            同步发送邮件
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.SMTP.SendAsync(System.Object,System.String[],System.String[],System.String[],System.String,System.String,System.String[],System.Net.Mail.MailPriority,System.Boolean,System.Text.Encoding)">
            
            <summary>
            异步发送邮件
            </summary>
            <param name="userState">异步任务的唯一标识符</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.SMTP.SendMail(System.Boolean,System.Object,System.String,System.String,System.String[],System.String[],System.String[],System.String,System.String,System.String[],System.Net.Mail.MailPriority,System.Boolean,System.Text.Encoding)">
            
            <summary>
            发送邮件
            </summary>
            <param name="isAsync">是否异步发送邮件</param>
            <param name="userState">异步任务的唯一标识符，当 isAsync 为 True 时必须设置该属性， 当 isAsync 为 False 时可设置为 null</param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.StreamHelper">
             <summary>
             Utility class that provides methods to manipulate stream of data.
             </summary>
             <remarks>
             This class is ported from <a href="http://jakarta.apache.org/commons/io/">Jakarta Commons IO</a> org.apache.commons.io.CopyUtils class.
            
             This class also contains code taken from an article written by Jon Skeet. The 
             article can be found here: <a href="http://www.developerfusion.co.uk/show/4696/">
             http://www.developerfusion.co.uk/show/4696/</a>
             </remarks>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.StreamHelper.DEFAULT_BUFFER_SIZE">
            <summary> The name says it all.</summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.Byte[],System.IO.Stream)">
            <summary> Copy bytes from a <see cref="T:System.Byte" />[] to an Output <see cref="T:System.IO.Stream" />.</summary>
            <param name="input">the byte array to read from
            </param>
            <param name="output">the Output <see cref="T:System.IO.Stream" /> to write to
            </param>
            <exception cref="T:System.IO.IOException">if an I/O problem occurs</exception>		
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.Byte[],System.IO.StreamWriter)">
            <summary>
            Copy and convert bytes from a <see cref="T:System.Byte" />[] to chars on a
            <see cref="T:System.IO.StreamWriter" />.
            </summary>
            <param name="input">the byte array to read from</param>
            <param name="outputWriter">the <see cref="T:System.IO.StreamWriter" /> to write to</param>
            <exception cref="T:System.IO.IOException">in the case of an I/O problem</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.Byte[],System.IO.StreamWriter,System.String)">
            <summary>
             Copy and convert bytes from a <see cref="T:System.Byte" />[] to chars on a
            <see cref="T:System.IO.StreamWriter" />.
            </summary>
            <param name="input"></param>
            <param name="outputWriter"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.IO.Stream,System.IO.Stream)">
            <summary> Copy the entire content from an Input <see cref="T:System.IO.Stream" /> to an Output <see cref="T:System.IO.Stream" />.</summary>
            <param name="input">the Input <see cref="T:System.IO.Stream" />to read from the beginning of the stream
            </param>
            <param name="output">the Output <see cref="T:System.IO.Stream" /> to write to
            </param>        
            <returns> the number of bytes copied        
            </returns>
            <exception cref="T:System.IO.IOException">if an I/O problem occurs</exception>		
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.IO.Stream,System.IO.Stream,System.Boolean)">
            <summary> Copy bytes from an Input <see cref="T:System.IO.Stream" /> to an Output <see cref="T:System.IO.Stream" />.</summary>
            <param name="input">the Input <see cref="T:System.IO.Stream" />to read from
            </param>
            <param name="output">the Output <see cref="T:System.IO.Stream" /> to write to
            </param>
            <param name="copyFromBeginning">Set true to copy from the beginning of the input stream, eg. input.Position=0,
            otherwise, it will start copying from whatever the current position in the input stream. 
            </param>
            <returns> the number of bytes copied        
            </returns>
            <exception cref="T:System.IO.IOException">if an I/O problem occurs</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.IO.StreamReader,System.IO.StreamWriter)">
            <summary> Copy chars from a <see cref="T:System.IO.StreamReader" />  to a <see cref="T:System.IO.StreamWriter" />.</summary>
            <param name="inputStreamReader">the <see cref="T:System.IO.StreamReader" /> to read from
            </param>
            <param name="outputStreamWriter">the <see cref="T:System.IO.StreamWriter" /> to write to
            </param>
            <returns> the number of characters copied
            </returns>        
            <exception cref="T:System.IO.IOException">if an I/O problem occurs</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.IO.Stream,System.IO.StreamWriter)">
            <summary> Copy and convert bytes from an Input <see cref="T:System.IO.Stream" /> to chars on a
            <see cref="T:System.IO.StreamWriter" />.
            The platform's default encoding is used for the byte-to-char conversion.
            </summary>
            <param name="inputStream">the Input <see cref="T:System.IO.Stream" /> to read from
            </param>
            <param name="outputStreamWriter">the <see cref="T:System.IO.StreamWriter" />to write to
            </param>
            <exception cref="T:System.IO.IOException">if an I/O problem occurs</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.IO.Stream,System.IO.StreamWriter,System.String)">
            <summary>
            Copy and convert bytes from an Input <see cref="T:System.IO.Stream" /> to chars on a
            <see cref="T:System.IO.StreamWriter" />, using the specified encoding.
            </summary>
            <param name="inputStream"></param>
            <param name="outputWriter"></param>
            <param name="encoding">The name of a supported character encoding. See the
            <a href="http://www.iana.org/assignments/character-sets">IANA
            Charset Registry</a> and <a href="http://msdn2.microsoft.com/en-us/library/system.text.encoding.aspx">MSDN: Encoding class</a>
            for a list of valid encoding types.</param>
            <exception cref="T:System.IO.IOException">an I/O problem occurs</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.IO.StreamReader,System.IO.Stream)">
            <summary>
            Serialize chars from a <see cref="T:System.IO.StreamReader" /> to bytes on an 
            Output <see cref="T:System.IO.Stream" />, and flush the Output <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="inputReader">the <see cref="T:System.IO.StreamReader" /> to read from</param>
            <param name="output">the  <see cref="T:System.IO.Stream" /> to write to</param>
            <exception cref="T:System.IO.IOException">an I/O problem occurs</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.String,System.IO.Stream)">
            <summary> Serialize chars from a <see cref="T:System.String" /> to bytes on an 
            Output <see cref="T:System.IO.Stream" />, and
            flush the Output <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="input">the <see cref="T:System.String" /> to read from
            </param>
            <param name="output">the Output <see cref="T:System.IO.Stream" /> to write to
            </param>        
            <exception cref="T:System.IO.IOException">an I/O problem occurs</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Copy(System.String,System.IO.StreamWriter)">
            <summary> Copy chars from a <see cref="T:System.String" /> to a <see cref="T:System.IO.StreamWriter" />.</summary>
            <param name="input">the <see cref="T:System.String" /> to read from
            </param>
            <param name="output">the <see cref="T:System.IO.StreamWriter" /> to write to
            </param>
            <exception cref="T:System.IO.IOException">an I/O problem occurs</exception>      
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.CopyExact(System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Copy the exact number of bytes from the source <see cref="T:System.IO.Stream" /> to a
            target <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="source">Source <see cref="T:System.IO.Stream" /> to copy from</param>
            <param name="target">Target <see cref="T:System.IO.Stream" /> to copy to</param>
            <param name="len">number of bytes to copy</param>        
            <exception cref="T:System.IO.IOException">if the source stream does not have enough data.</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.ReadIntoByteArray(System.IO.Stream,System.Byte[])">
            <summary>
            Reads data into a complete array, throwing an EndOfStreamException
            if the stream runs out of data first, or if an IOException
            naturally occurs.
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="byteArray">The array to read bytes into. The array
            will be completely filled from the stream, so an appropriate
            size must be given.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.GetBytes(System.IO.Stream)">
            <summary>
            Reads data from the beginning of a stream until the end is reached. The
            data is returned as a byte array. 
            </summary>
            <param name="stream">The stream to read data from</param>
            <exception cref="T:System.IO.IOException">thrown if any of the underlying IO calls fail</exception>
            <remarks>Use this method if you don't know the length of the stream in advance 
            (for instance a network stream) and just want to read the whole lot into a buffer. 
            <para>
            <strong>Note:</strong><br />
            This method of reading the stream is not terribly efficient.
            </para>
             </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.GetBytes(System.IO.Stream,System.Int64)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. 
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialLength">The initial buffer length. If the length is &lt; 1,
            then the default value of <see cref="F:System.Int16.MaxValue" /> will be used.
            </param>
            <exception cref="T:System.IO.IOException">thrown if any of the underlying IO calls fail</exception>
            <remarks>Use this method to get the data if you know the expected length of data to start with.</remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.GetAsciiString(System.IO.Stream)">
            <summary>
            Return an ASCII string from a stream of data
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.GetString(System.IO.Stream)">
            <summary>
            Return an UTF8 encoded string from a stream of data
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.GetString(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Return a string from a stream. The string is returned with 
            the encoding provided.
            </summary>
            <param name="stream"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.ReadExact(System.IO.Stream,System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from any position in a source stream into a 
            specific byte array in a specific start index position. The byte
            array must have the necessary size to read the portion of the stream required.
            </summary>
            <param name="source">Source stream to read from</param>
            <param name="target">Target byte array to write to</param>
            <param name="targetOffset">offset index in the target</param>
            <param name="sourceOffset">offset position in the stream</param>
            <param name="bytesToRead">number of bytes to read in the stream</param>
            <exception cref="T:System.ArgumentException">thrown if the target byte array is too small to stored
            the required number of bytes read from the stream.</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.ReadPartial(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Read a partial segment of a stream, starting from an offset position.
            </summary>
            <param name="source">Source stream to read from</param>
            <param name="sourceOffset">the starting offset position in the stream. Set to 0 if the stream is to be read from the beginning.</param>
            <param name="bytesToRead">number of bytes to read</param>
            <returns>return partial segment as an array of bytes.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.ReadWriteStream(System.IO.Stream,System.IO.Stream)">
            <summary>
            Read a stream (like a file or HttpWebRequest) and write to another stream
            </summary>
            <param name="readStream">the stream to read</param>
            <param name="writeStream"> the stream to write to</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Skip(System.IO.Stream,System.Int32)">
            <summary>
            Try to skip bytes in the input stream and return the actual number of bytes skipped.
            </summary>
            <param name="stream">Input stream that will be used to skip the bytes</param>
            <param name="skipBytes">Number of bytes to be skipped</param>
            <returns>Actual number of bytes skipped</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Skip(System.IO.StreamReader,System.Int64)">
            <summary>
            Skips a given number of characters into a given Stream.
            </summary>
            <param name=" stream">The stream in which the skips are done.</param>
            <param name="number">The number of caracters to skip.</param>
            <returns>The number of characters skipped.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.Skip(System.IO.StringReader,System.Int64)">
            <summary>
            Skips a given number of characters into a given StringReader.
            </summary>
            <param name="strReader">The StringReader in which the skips are done.</param>
            <param name="number">The number of caracters to skip.</param>
            <returns>The number of characters skipped.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.ToByteArray(System.String)">
            <summary>
            Converts a string to an array of bytes
            </summary>
            <param name="sourceString">The string to be converted</param>
            <returns>The new array of bytes</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StreamHelper.ToByteArray(System.Object[])">
            <summary>
            Converts a array of object-type instances to a byte-type array.
            </summary>
            <param name="tempObjectArray">Array to convert.</param>
            <returns>An array of byte type elements.</returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.StringHelper">
            <summary>
            字符串帮助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsNullOrEmpty(System.String)">
            <summary>
            判断字符串是个为空（连续的空格也视为空）。
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertStreamToString(System.IO.Stream)">
            <summary>
            将 Stream 转化成 string
            </summary>
            <param name="s">Stream流</param>
            <returns>string</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.FilterRepeatArrayItem(System.Collections.ArrayList)">
            <summary>
            去除数组内重复元素
            </summary>
            <param name="arr"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.CutLastString(System.String,System.String)">
            <summary>
            在最后去除指定的字符
            </summary>
            <param name="source">参加处理的字符</param>
            <param name="cutString">要去除的字符</param>
            <returns>返回结果</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.UBBCode(System.String)">
            <summary>
            利用正则表达式实现UBB代码转换为html代码
            </summary>
            <param name="source">待处理的文本内容</param>
            <returns>返回正确的html代码</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.FilterStringArray(System.String,System.String)">
            <summary>
            整理(过滤)以英文逗号分割的字符串
            </summary>
            <param name="source">原字符串</param>
            <param name="str2">待清除的字符串，如空格</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetTimeString(System.String)">
            <summary>
            返回年月日时分秒组合的字符串,如：20050424143012 (2005年4月24日14点30分12秒)
            </summary>
            <param name="splitString">中间间隔的字符串，如2005\04\24\14\30\12。可以用来建立目录时使用</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetDateString(System.String)">
            <summary>
            返回年月日组合的字符串,如：20050424 (2005年4月24日)
            </summary>
            <param name="splitString">中间间隔的字符串，如2005\04\24 可以用来建立目录时使用</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetNewSeed">
            <summary>
            使用RNGCryptoServiceProvider 做种，可以在一秒内产生的随机数重复率非常
            的低，对于以往使用时间做种的方法是个升级
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomNumber(System.Int32,System.Int32)">
            <summary>
            取得指定范围内的随几数
            </summary>
            <param name="startNumber">下限数</param>
            <param name="endNumber">上限数</param>
            <returns>int</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomStringByASCII(System.Int32,System.Int32,System.Int32)">
            <summary>
            获取指定 ASCII 范围内的随机字符串
            </summary>
            <param name="resultLength">结果字符串长度</param>
            <param name="startNumber"> 开始的ASCII值 如（33－125）中的 33</param>
            <param name="endNumber"> 结束的ASCII值 如（33－125）中的 125</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomString(System.String,System.Int32)">
            <summary>
            从指定字符串中抽取指定长度的随机字符串
            </summary>
            <param name="source">源字符串</param>
            <param name="resultLength">待获取随机字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomNumberString(System.Int32)">
            <summary>
            获取指定长度随机的数字字符串
            </summary>
            <param name="resultLength">待获取随机字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomLetterString(System.Int32)">
            <summary>
            获取指定长度随机的字母字符串（包含大小写字母）
            </summary>
            <param name="resultLength">待获取随机字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomMixString(System.Int32)">
            <summary>
            获取指定长度随机的字母＋数字混和字符串（包含大小写字母）
            </summary>
            <param name="resultLength">待获取随机字符串长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsInteger(System.String)">
            <summary>
            判断字符串是否为整型
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsEmail(System.String)">
            <summary>
            Email 格式是否合法
            </summary>
            <param name="strEmail"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsIP(System.String)">
            <summary>
            判断是否IP
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsUrl(System.String)">
            <summary>
            是否为标准url。
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsLetterOrNumber(System.String)">
            <summary>
            检查字符串是否为A-Z、0-9及下划线以内的字符
            </summary>
            <param name="str">被检查的字符串</param>
            <returns>是否有特殊字符</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsSpecialChar(System.String)">
            <summary>
            验输入字符串是否含有“/\:.?*|$]”特殊字符
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsChineseChar(System.String)">
            <summary>
            是否全为中文/日文/韩文字符
            </summary>
            <param name="source">源字符串</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsDoubleChar(System.String)">
            <summary>
            是否包含双字节字符(允许有单字节字符)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsDate(System.String)">
            <summary>
            是否为日期型字符串
            </summary>
            <param name="source">日期字符串(2005-6-30)</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsTime(System.String)">
            <summary>
            是否为时间型字符串
            </summary>
            <param name="source">时间字符串(15:00:00)</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsDateTime(System.String)">
            <summary>
            是否为日期+时间型字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsStringDate(System.String)">
            <summary>
            检查一个字符串是否可以转化为日期，一般用于验证用户输入日期的合法性。
            </summary>
            <param name="value">需验证的字符串。</param>
            <returns>是否可以转化为日期的bool值。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsNumberId(System.String)">
            <summary>
            检查一个字符串是否是纯数字构成的，一般用于查询字符串参数的有效性验证。
            </summary>
            <param name="value">需验证的字符串。。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.IsNumber(System.String)">
            <summary>
            判断是否是数字，包括小数和整数。
            </summary>
            <param name="value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.QuickValidate(System.String,System.String)">
            <summary>
            快速验证一个字符串是否符合指定的正则表达式。
            </summary>
            <param name="express">正则表达式的内容。</param>
            <param name="value">需验证的字符串。</param>
            <returns>是否合法的bool值。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRealLength(System.String)">
            <summary>
            获取字符串的实际长度(按单字节)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.SubString(System.String,System.Int32)">
            <summary>
            取得固定长度的字符串(按单字节截取)。
            </summary>
            <param name="source">源字符串</param>
            <param name="resultLength">截取长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.SplitStringByLength(System.String,System.Int32)">
            <summary>
            按长度分割字符串，如短信
            </summary>
            <param name="str"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetStringIncludeCount(System.String,System.String)">
            <summary>
             获得某个字符串在另个字符串中出现的次数
            </summary>
            <param name="strOriginal">要处理的字符</param>
            <param name="strSymbol">符号</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetFirstString(System.String,System.String)">
            <summary>
            获得某个字符串在另个字符串第一次出现时前面所有字符
            </summary>
            <param name="strOriginal">要处理的字符</param>
            <param name="strSymbol">符号</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetLastString(System.String,System.String)">
            <summary>
            获得某个字符串在另个字符串最后一次出现时后面所有字符
            </summary>
            <param name="strOriginal">要处理的字符</param>
            <param name="strSymbol">符号</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetTwoMiddleFirstStr(System.String,System.String,System.String)">
            <summary>
            获得两个字符之间第一次出现时前面所有字符
            </summary>
            <param name="strOriginal">要处理的字符</param>
            <param name="strFirst">最前哪个字符</param>
            <param name="strLast">最后哪个字符</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetTwoMiddleLastStr(System.String,System.String,System.String)">
            <summary>
             获得两个字符之间最后一次出现时的所有字符
            </summary>
            <param name="strOriginal">要处理的字符</param>
            <param name="strFirst">最前哪个字符</param>
            <param name="strLast">最后哪个字符</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.CheckBadWords(System.String,System.String)">
            <summary>
            发帖过滤词（用“|”号分隔）Application["app_state_FilterWord"]
            </summary>
            <param name="str">字符串</param>
            <param name="chkword">过滤词（用“|”号分隔）</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.CheckilterStr(System.String,System.String)">
            <summary>
            发帖过滤字(需审核)（不同组间用“§”号分隔，同组内用“,”分隔）Application["app_state_Check_FilterWord"]
            </summary>
            <param name="str">字符串</param>
            <param name="chkword">过滤字(需审核)（不同组间用“§”号分隔，同组内用“,”分隔）</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertGBToUTF8(System.String)">
            <summary>
            将 GB2312 值转换为 UTF8 字符串(如：测试 -&gt; 娴嬭瘯 )
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertUTF8ToGB(System.String)">
            <summary>
            将 UTF8 值转换为 GB2312 字符串 (如：娴嬭瘯 -&gt; 测试)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertHexToString(System.String)">
            <summary>
            由16进制转为汉字字符串（如：B2E2 -&gt; 测 ）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertToHex(System.String)">
            <summary>
            字符串转为16进制字符串（如：测 -&gt; B2E2 ）
            </summary>
            <param name="Word"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertToUnicode(System.String)">
            <summary>
            字符串转为unicode字符串（如：测试 -&gt; 测试）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.ConvertToUTF8(System.String)">
            <summary>
            字符串转为UTF8字符串（如：测试 -&gt; \u6d4b\u8bd5）
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.Base64Encrypt(System.String)">
            <summary>
            将字符串使用base64算法加密
            </summary>
            <param name="source">待加密的字符串</param>
            <returns>加码后的文本字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.Base64Decrypt(System.String)">
            <summary>
            从Base64编码的字符串中还原字符串，支持中文
            </summary>
            <param name="source">Base64加密后的字符串</param>
            <returns>还原后的文本字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.FormatReverse(System.String)">
            <summary>
            将字符串反转
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.FormatFloat2(System.Double)">
            <summary>
            格式化为小数点两位的字符串(四舍五入)
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetMoneyFormat">
            <summary>
            将数字字符串转成货币格式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.OctToHex(System.Int32)">
            <summary>
            十进制数字1转换为字符串0a，在前面补零
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.HexToOct(System.String)">
            <summary>
            将一个十六进制表示的字符串转成int型？如"0A" = 10
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetCidInfo(System.String)">
            <summary>
            从18位身份证获取用户所在省份、生日、性别信息
            </summary>
            <param name="cid">身份证字符串</param>
            <returns>如：福建,1978-06-30,男</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.Cid15To18(System.String)">
            <summary>
            十五位的身份证号转为十八位的
            </summary>
            <param name="source">十五位的身份证号</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.FormatFileName(System.String)">
            <summary>
            格式化文件名。
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.RemoveCommentAndSpace(System.String)">
            <summary>
            移除注释（同时删除空格）。
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.RemoveComment(System.String)">
            <summary>
            移除注释。
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.Intercept(System.String,System.Int32)">
            <summary>
            截断字符串，支持中英文
            </summary>
            <param name="input"></param>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.InterceptString(System.String,System.Int32)">
            <summary>
            另外一种截断字符串，支持中英文
            </summary>
            <param name="str"></param>
            <param name="strLength"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.PadRight(System.String,System.Int32,System.Char)">
            <summary>
            补齐右边  不够长度
            </summary>
            <param name="text">原字符串</param>
            <param name="length">长度</param>
            <param name="c">补回去的字符</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.PadLeft(System.String,System.Int32,System.Char)">
            <summary>
            补齐左边  不够长度
            </summary>
            <param name="text">原字符串</param>
            <param name="length">长度</param>
            <param name="c">补回去的字符</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.SubRightString(System.String,System.Int32)">
            <summary>
            切除右边过长的字符，并且补回addstring
            </summary>
            <param name="text">原字符串</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.SubRightString(System.String,System.Int32,System.String)">
            <summary>
            切除右边过长的字符，并且补回addstring
            </summary>
            <param name="text">原字符串</param>
            <param name="length">长度</param>
            <param name="addString">补足字符串</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.SubLeftString(System.String,System.Int32)">
            <summary>
            切除左边过长的字符，并且补回addstring
            </summary>
            <param name="text">原字符串</param>
            <param name="length">长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.SubLeftString(System.String,System.Int32,System.String)">
            <summary>
            切除左边过长的字符，并且补回addstring
            </summary>
            <param name="text">原字符串</param>
            <param name="length">长度</param>
            <param name="addString">补足字符串</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.RemoveLast(System.String,System.Char)">
            <summary>
            去除字符串最后的字符 ,返回新的字符串
            </summary>
            <param name="text">原始字符串</param>
            <param name="c">字符</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.RemoveLast(System.Text.StringBuilder,System.Char)">
            <summary>
            去除字符串最后的字符,返回新的字符串
            </summary>
            <param name="text">原始字符串</param>
            <param name="c">字符</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.RemoveLast(System.Text.StringBuilder,System.String)">
            <summary>
            去除字符串最后的字符,返回新的字符串
            </summary>
            <param name="text">原始字符串</param>
            <param name="removeString">要去除的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.RemoveLast(System.String,System.String)">
            <summary>
            去除字符串最后的字符,返回新的字符串
            </summary>
            <param name="text">原始字符串</param>
            <param name="removeString">要去除的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomString">
            <summary>
            获取长度为24的随机字符串 使用RNGCryptoServiceProvider
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetRandomString(System.Int32)">
            <summary>
            获取相应长度的随机字符串  使用RNGCryptoServiceProvider
            </summary>
            <param name="length">byte[]  长度</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringHelper.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取指定长度的字符串，字符串如果操过指定长度则将超出的部分用指定字符串代替。
            </summary>
            <param name="srcString">要检查的字符串</param>
            <param name="startIndex">起始位置</param>
            <param name="length">指定长度</param>
            <param name="tailString">用于替换的字符串,可为空</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.StringHelper.DateTimeRandomString">
            <summary>
            获取时间加随机数的字符串
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.StringParser">
            <summary>
            A class that helps you to extract information from a string.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.StringParser.m_strContent">
            <summary>Content to be parsed.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.StringParser.m_strContentLC">
            <summary>Lower-cased version of content to be parsed.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.StringParser.m_nIndex">
            <summary>Current position in content.</summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.#ctor(System.String)">
            <summary>
            Constructs a StringParser with specific content.
            </summary>
            <param name="strContent">The parser's content.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.getLinks(System.String,System.String,System.Collections.ArrayList@,System.Collections.ArrayList@)">
            <summary>
            Retrieves the collection of HTML links in a string.
            </summary>
            <param name="strString">The string.</param>
            <param name="strRootUrl">Root url (may be null).</param>
            <param name="documents">Collection of document link strings.</param>
            <param name="images">Collection of image link strings.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.removeComments(System.String)">
            <summary>
            Removes all HTML comments from a string.
            </summary>
            <param name="strString">The string.</param>
            <returns>Comment-free version of string.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.removeEnclosingAnchorTag(System.String)">
            <summary>
            Returns an unanchored version of a string, i.e. without the enclosing
            leftmost &lt;a...&gt; and rightmost &lt;/a&gt; tags.
            </summary>
            <param name="strString">The string.</param>
            <returns>Unanchored version of string.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.removeEnclosingQuotes(System.String)">
            <summary>
            Returns an unquoted version of a string, i.e. without the enclosing
            leftmost and rightmost double " characters.
            </summary>
            <param name="strString">The string.</param>
            <returns>Unquoted version of string.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.removeHtml(System.String)">
            <summary>
            Returns a version of a string without any HTML tags.
            </summary>
            <param name="strString">The string.</param>
            <returns>Version of string without HTML tags.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.removeScripts(System.String)">
            <summary>
            Removes all scripts from a string.
            </summary>
            <param name="strString">The string.</param>
            <returns>Version of string without any scripts.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.at(System.String)">
            <summary>
            Checks if the parser is case-sensitively positioned at the start
            of a string.
            </summary>
            <param name="strString">The string.</param>
            <returns>
            true if the parser is positioned at the start of the string, false
            otherwise.
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.atNoCase(System.String)">
            <summary>
            Checks if the parser is case-insensitively positioned at the start
            of a string.
            </summary>
            <param name="strString">The string.</param>
            <returns>
            true if the parser is positioned at the start of the string, false
            otherwise.
            </returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.extractTo(System.String,System.String@)">
            <summary>
            Extracts the text from the parser's current position to the case-
            sensitive start of a string and advances the parser just after the
            string.
            </summary>
            <param name="strString">The string.</param>
            <param name="strExtract">The extracted text.</param>
            <returns>true if the parser was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.extractToNoCase(System.String,System.String@)">
            <summary>
            Extracts the text from the parser's current position to the case-
            insensitive start of a string and advances the parser just after the
            string.
            </summary>
            <param name="strString">The string.</param>
            <param name="strExtract">The extracted text.</param>
            <returns>true if the parser was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.extractUntil(System.String,System.String@)">
            <summary>
            Extracts the text from the parser's current position to the case-
            sensitive start of a string and position's the parser at the start
            of the string.
            </summary>
            <param name="strString">The string.</param>
            <param name="strExtract">The extracted text.</param>
            <returns>true if the parser was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.extractUntilNoCase(System.String,System.String@)">
            <summary>
            Extracts the text from the parser's current position to the case-
            insensitive start of a string and position's the parser at the start
            of the string.
            </summary>
            <param name="strString">The string.</param>
            <param name="strExtract">The extracted text.</param>
            <returns>true if the parser was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.extractToEnd(System.String@)">
            <summary>
            Extracts the text from the parser's current position to the end
            of its content and does not advance the parser's position.
            </summary>
            <param name="strExtract">The extracted text.</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.replaceEvery(System.String,System.String)">
            <summary>
            Case-insensitively replaces every occurence of a string in the
            parser's content with another.
            </summary>
            <param name="strOccurrence">The occurrence.</param>
            <param name="strReplacement">The replacement string.</param>
            <returns>The number of occurences replaced.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.replaceEveryExact(System.String,System.String)">
            <summary>
            Case sensitive version of replaceEvery()
            </summary>
            <param name="strOccurrence">The occurrence.</param>
            <param name="strReplacement">The replacement string.</param>
            <returns>The number of occurences replaced.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.resetPosition">
            <summary>
            Resets the parser's position to the start of the content.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.skipToStartOf(System.String)">
            <summary>
            Advances the parser's position to the start of the next case-sensitive
            occurence of a string.
            </summary>
            <param name="strString">The string.</param>
            <returns>true if the parser's position was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.skipToStartOfNoCase(System.String)">
            <summary>
            Advances the parser's position to the start of the next case-insensitive
            occurence of a string.
            </summary>
            <param name="strText">The string.</param>
            <returns>true if the parser's position was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.skipToEndOf(System.String)">
            <summary>
            Advances the parser's position to the end of the next case-sensitive
            occurence of a string.
            </summary>
            <param name="strString">The string.</param>
            <returns>true if the parser's position was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.skipToEndOfNoCase(System.String)">
            <summary>
            Advances the parser's position to the end of the next case-insensitive
            occurence of a string.
            </summary>
            <param name="strText">The string.</param>
            <returns>true if the parser's position was advanced, false otherwise.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.StringParser.seekTo(System.String,System.Boolean,System.Boolean)">
            <summary>
            Advances the parser's position to the next occurence of a string.
            </summary>
            <param name="strString">The string.</param>
            <param name="bNoCase">Flag: perform a case-insensitive search.</param>
            <param name="bPositionAfter">Flag: position parser just after string.</param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.StringParser.Content">
            <summary>Gets and sets the content to be parsed.</summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.StringParser.Position">
            <summary>Gets the parser's current position.</summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.TestHelper">
            <summary>
            测试辅助工具类
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.TestHelper._watch">
            <summary>
            测试运行时间
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.StartWatch">
            <summary>
            开启计时器,开始计算运行时间
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.ResetWatch">
            <summary>
            重置计时器
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.GetElapsed">
            <summary>
            获取运行的时间间隔
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.GetElapsedAndStop">
            <summary>
            获取运行的时间间隔,同时停止计时
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.GetElapsedMillisecondsAndStop">
            <summary>
            获取运行的时间间隔,同时停止计时( 单位：毫秒 )
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.GetElapsedTicksAndStop">
            <summary>
            获取运行的时间间隔,同时停止计时( 用计数器刻度表示 )
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TestHelper.StopWatch">
            <summary>
            停止计时
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.TxtFileEncodingHelper">
            <summary>
            根据不同编码的特点和标志,对一个文本文件判断编码。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TxtFileEncodingHelper.GetEncodingType(System.String)">
            <summary>
            取文件编码
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.TxtFileEncodingHelper.GetEncodingType(System.IO.FileStream)">
            <summary>
            取文件编码
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.Alert(System.Web.UI.Page,System.String)">
            
            <summary>
            简单弹出对话框功能
            代码调用:
            UIHelper.Alert(this.Page,"OKOK");
            
            
            </summary>
            <param name="pageCurrent">
            当前的页面
            </param>
            <param name="strMsg">
            弹出信息的内容
            </param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ScrollMessage(System.String)">
            
            <summary>
            简单的滚动信息栏
            代码调用
                    UIHelper.ScrollMessage(this.Page, "滚动的内容");
            </summary>
            <param name="pageCurrent">
            当前页面
            </param>
            <param name="strMsg">
            要滚动的信息
            </param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ScrollMessage(System.Web.UI.Page,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            
            <summary>
            指定滚动文字的详细方法
            
            </summary>
            <param name="pageCurrent">
            当前的页面
            </param>
            <param name="strMsg">
            要滚动的文字
            </param>
            <param name="aligh">
            align：是设定活动字幕的位置，居左、居中、居右、靠上和靠下三种位置
            left center  right top bottom 
            </param>
            <param name="bgcolor">
            用于设定活动字幕的背景颜色，一般是十六进制数。如#CCCCCC 
            </param>
            <param name="direction">
            用于设定活动字幕的滚动方向是向左、向右、向上、向下
            left|right|up|down 
            </param>
            <param name="behavior">
            用于设定滚动的方式，主要由三种方式：scroll slide和alternate
            
            </param>
            <param name="height">
            用于设定滚动字幕的高度
            
            </param>
            <param name="hspace">
            则设定滚动字幕的宽度
            </param>
            <param name="scrollamount">
            用于设定活动字幕的滚动距离
            </param>
            <param name="scrolldelay">
            用于设定滚动两次之间的延迟时间
            </param>
            <param name="width"></param>
            <param name="vspace">
            分别用于设定滚动字幕的左右边框和上下边框的宽度
            
            </param>
            <param name="loop">
            用于设定滚动的次数，当loop=-1表示一直滚动下去，直到页面更新
            </param>
            <param name="MarqueejavascriptPath">
            脚本的存放位置
            </param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.Redirect(System.Web.UI.Page,System.String)">
            
            <summary>
            Add the javascript method to redirect page on client
            Created : Wang Hui, May 18,2006
            Modified: 
            </summary>
            <param name="pageCurrent"></param>
            <param name="strPage"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.RedirectFrame(System.Web.UI.Page,System.String)">
            
            <summary>
            主要用于跳出带有框架的页面
            </summary>
            <param name="pageCurrent">当前页面如this.page</param>
            <param name="strPage">要跳出的页面</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.AddConfirm(System.Web.UI.WebControls.Button,System.String)">
            
            <summary>
            Add the confirm message to button
            Created : GuangMing Chu 1,1,2007
            Modified: GuangMing Chu 1,1,2007
            Modified: GuangMing Chu 1,1,2007
            代码调用：
               UIHelper.AddConfirm(this.Button1, "真的要删了？？");
            点确定按钮就会执行事件中的代码，点取消不会
            </summary>
            <param name="button">The control, must be a button</param>
            <param name="strMsg">The popup message</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.AddConfirm(System.Web.UI.WebControls.ImageButton,System.String)">
            
            <summary>
            Add the confirm message to button
            Created : GuangMing Chu, 1 1,2007
            Modified: GuangMing Chu, 1 1,2007
            Modified:
            代码调用:
                  UIHelper.AddConfirm(this.Button1, "真的要删了？？");
            点确定按钮就会执行事件中的代码，点取消不会
                 
            </summary>
            <param name="button">The control, must be a button</param>
            <param name="strMsg">The popup message</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.AddConfirm(System.Web.UI.WebControls.GridView,System.Int32,System.String)">
            
            <summary>
            Add the confirm message to one column of gridview
            代码调用：
                    UIHelper myHelp = new UIHelper();
                    myHelp.AddConfirm(this.GridView1,1, "ok");
            请使用时注意，此方法的调用必须实例化，调用
            </summary>
            <param name="grid">The control, must be a GridView</param>
            <param name="intColIndex">The column index. It's usually the column which has the "delete" button.</param>
            <param name="strMsg">The popup message</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.AddShowDialog(System.Web.UI.WebControls.Button,System.String,System.Int32,System.Int32)">
            
            <summary>
            Add the javascript method showModalDialog to button
            为Button按钮加入一个弹出窗体对话框
            代码调用
                    UIHelper.AddShowDialog(this.Button1, "www.sina.com.cn", 300, 300);
            
            
            
            </summary>
            <param name="button">The control, must be a button</param>
            <param name="strUrl">The page url, including query string</param>
            <param name="intWidth">Width of window</param>
            <param name="intHeight">Height of window</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.AddShowDialog(System.Web.UI.WebControls.LinkButton,System.String,System.Int32,System.Int32)">
            
            <summary>
            Add the javascript method showModalDialog to button
            </summary>
            <param name="button">The control, must be a link button</param>
            <param name="strUrl">The page url, including query string</param>
            <param name="intWidth">Width of window</param>
            <param name="intHeight">Height of window</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.AddShowDialog(System.Web.UI.WebControls.ImageButton,System.String,System.Int32,System.Int32)">
            
            <summary>
            Add the javascript method showModalDialog to button
            </summary>
            <param name="button">The control, must be a button</param>
            <param name="strUrl">The page url, including query string</param>
            <param name="intWidth">Width of window</param>
            <param name="intHeight">Height of window</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ClearTextBox(System.Web.UI.WebControls.TextBox)">
            
            <summary>
            将选定的TextBox值清空
            </summary>
            <param name="myTextBox"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.OpenWindow(System.Web.UI.Page,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            
            <summary>
            Use "window.open" to popup the window
            Created : Wang Hui, Feb 24,2006
            Modified: Wang Hui, Feb 24,2006
            打开窗体的对话框功能
            代码调用：
            
            
                    UIHelper.OpenWindow(this.Page, "www.sina.com.cn", 400, 300);
                    UIHelper.ShowDialog(this.Page, "lsdjf.com", 300, 200);
            
            
            
            </summary>
            <param name="strUrl">The url of window, start with "/", not "http://"</param>
            <param name="intWidth">Width of popup window</param>
            <param name="intHeight">Height of popup window</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ShowDialog(System.Web.UI.Page,System.String,System.Int32,System.Int32)">
            
            <summary>
            Use "window.showModalDialog" to show the dialog
            Created : Wang Hui, Feb 24,2006
            Modified: Wang Hui, Feb 27,2006
            此窗体是模式窗体,和C/S结构中的模式窗体是一致的
            </summary>
            <param name="strUrl">The url of dialog, start with "/", not "http://"</param>
            <param name="intWidth">Width of dialog</param>
            <param name="intHeight">Height of dialog</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.CloseWindows(System.Web.UI.Page)">
            
            <summary>
            关闭窗体,没有任何提示的关闭窗体
            </summary>
            <param name="pageCurrent"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.CloseWindows(System.Web.UI.Page,System.String)">
            
            <summary>
            有提示信息的关闭窗体
            </summary>
            <param name="pageCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.CloseWindows(System.Web.UI.Page,System.Int32)">
            
            <summary>
            有等待时间的关闭窗体
            </summary>
            <param name="pageCurrent"></param>
            <param name="WaitTime">等待时间，以毫秒为记量单位</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.CreateBackImage(System.Web.UI.Page,System.String,System.String,System.String,System.Int32,System.Int32)">
            
            <summary>
            写入图像水印
            </summary>
            <param name="str">水印字符串</param>
            <param name="filePath">原图片位置</param>
            <param name="savePath">水印加入后的位置</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.PlayMediaFile(System.Web.UI.Page,System.String,System.String,System.String,System.String)">
            
            <summary>
            调用Media播放mp3或电影文件
            </summary>
            <param name="pageCurrent">
            当前的页面对象
            </param>
            <param name="PlayFilePath">
            播放文件的位置
            </param>
            <param name="MediajavascriptPath">
            Mediajavascript的脚本位置
            </param>
            <param name="enableContextMenu">
            是否可以使用右键
            指定是否使右键菜单有效
            指定右键是否好用,默认为0不好用
            指定为1时就是好用
            </param>
            <param name="uiMode">
            播放器的大小显示
            None，mini，或full，指定Windows媒体播放器控制如何显示
            </param>
        </member>
        <!-- 对于成员“M:Robin.EntLib.Common.Helper.UIHelper.ShowProgBar(System.Web.UI.Page,System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ResponseScript(System.Web.UI.Page,System.String)">
            
            
            
            <summary>
            显示一段自定义的输出代码
            </summary>
            <param name="page">页面指针,一般为This</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.CallClientScript(System.Web.UI.Page,System.String)">
            
            <summary>
            调用客户端JavaScript函数
            </summary>
            <param name="page">页面指针,一般为This</param>
            <param name="scriptName">函数名,带参数,如:FunA(1);</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ShowMessage(System.String)">
            
            <summary>
            弹出对话框(弹出对话框后css会失效)
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ShowMessage(System.Web.UI.Page,System.String,System.String)">
            
            <summary>
            弹出对话框(不影响css样式)
            </summary>
            <param name="page">页面指针,一般为this</param>
            <param name="scriptKey">脚本键,唯一</param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ShowConfirm(System.Web.UI.WebControls.WebControl,System.String)">
            
            <summary>
            为控件添加确认提示对话框
            </summary>
            <param name="Control">需要添加提示的对话框</param>
            <param name="message">提示信息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ShowErrMsg(System.String,System.String,System.Boolean)">
            <summary>
            出示错误函数
            </summary>
            <param name="smsg">消息提示</param>
            <param name="stitle">标题</param>
            <param name="bclose">是否关闭</param>
            <returns>返回js代码</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ShowErrMsg(System.String,System.String,System.String)">
            <summary>
            出示错误函数
            </summary>
            <param name="smsg">消息提示</param>
            <param name="stitle">标题</param>
            <param name="surl">返回url</param>
            <returns>返回js代码</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.ReLoad">
            
            <summary>
            页面重载
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UIHelper.Redirect(System.String)">
            
            <summary>
            重定向
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UIHelper.BaseUrl">
            
            <summary>
            这个静态属性的调用必须用以下代码方法调用
            代码调用:
            Response.Write(UIHelper.BaseUrl);
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.UrlHelper">
            <summary>
            URL操作帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.GetRawUrl">
            <summary>
            获取当前请求的原始 URL(URL 中域信息之后的部分,包括查询字符串(如果存在))
            </summary>
            <returns>原始 URL</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.GetUrl">
            <summary>
            获得当前完整Url地址
            </summary>
            <returns>当前完整Url地址</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.GetUrlReferrer">
            <summary>
            返回上一个页面的地址
            </summary>
            <returns>上一个页面的地址</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.ResolveUrl(System.String)">
            <summary>
            Resolves a URL completely.
            </summary>
            <param name="relativeUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.EncodeUrl(System.String)">
            <summary>
            
            </summary>
            <param name="originalUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.DecodeUrl(System.String)">
            <summary>
            
            </summary>
            <param name="originalUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.#ctor(System.String)">
             <summary>
            Initializes a new Url instance.
            </summary>
            <param name="url">The URL.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="url"/> is a null reference (<b>Nothing</b> in Visual Basic).</exception>
            <exception cref="T:System.ArgumentException"><paramref name="url"/> is invalid.</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.GetDefaultPort(System.String)">
            <summary>
            Returns a default port number for well known algorithms.
            </summary>
            <param name="protocol">The protocol.</param>
            <returns>A number that corresponds to the default port of the given protocol -or- zero if the protocol is unknown.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.GetUrlParts(System.String)">
            <summary>
            Extracts the username, password, hostname and port from a partial URL.
            </summary>
            <param name="url">The partial URL to use.</param>
            <returns>An array of Strings that contain the username, password, hostname and port (in that order).</returns>
            <exception cref="T:System.ArgumentException">The specified URL is invalid.</exception>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.UrlHelper.ToString">
            <summary>
            Returns a String that represents the current URL.
            </summary>
            <returns>Returns a String that represents the current URL.</returns>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Protocol">
            <summary>Holds the value of the Protocol property.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Host">
            <summary>Holds the value of the Host property.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Port">
            <summary>Holds the value of the Port property.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Username">
            <summary>Holds the value of the Username property.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Password">
            <summary>Holds the value of the Password property.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Path">
            <summary>Holds the value of the Path property.</summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.UrlHelper.m_Query">
            <summary>Holds the value of the Query property.</summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.BaseUrl">
            <summary>
            Returns the Web site's base url (like http://www.somesite.com).
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.SiteUrl">
            <summary>
             Returns the Web site's base url plus Application Path, if it exists (like http://www.somesite.com/CMS).
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Protocol">
            <summary>
            Holds the protocol of the URL.
            </summary>
            <value>A <see cref="T:System.String"/> representing the protocol of the URL.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Host">
            <summary>
            Holds the host of the URL.
            </summary>
            <value>A <see cref="T:System.String"/> representing the host of the URL.</value>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Port">
            <summary>
            Holds the port of the URL.
            </summary>
            <value>An <see cref="T:System.Int32"/> representing the port of the URL.</value>
            <remarks>This value is equal to zero if no port is specified.</remarks>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Username">
            <summary>
            Holds the username of the URL.
            </summary>
            <value>A <see cref="T:System.String"/> representing the username of the URL.</value>
            <remarks>This property can return an empty string.</remarks>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Password">
            <summary>
            Holds the password of the URL.
            </summary>
            <value>A <see cref="T:System.String"/> representing the password of the URL.</value>
            <remarks>This property can return an empty string.</remarks>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Path">
            <summary>
            Holds the path of the URL.
            </summary>
            <value>A <see cref="T:System.String"/> representing the path of the URL.</value>
            <remarks>This property can return an empty string.</remarks>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.UrlHelper.Query">
            <summary>
            Holds the query string of the URL.
            </summary>
            <value>A <see cref="T:System.String"/> representing the query string of the URL.</value>
            <remarks>This property can return an empty string.</remarks>
            <exception cref="T:System.ArgumentNullException">The specified value is a null reference (<b>Nothing</b> in Visual Basic).</exception>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.WinServiceHelper">
            <summary>
            Windows服务控制操作类
            </summary>    
        </member>
        <member name="F:Robin.EntLib.Common.Helper.WinServiceHelper._sc">
            <summary>
            windows服务控制类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="serviceName">windows服务的名称，即ServiceInstaller类的ServiceName属性</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.#ctor(System.ServiceProcess.ServiceController)">
            <summary>
            构造函数
            </summary>
            <param name="serviceController">Windows服务控制类的实例</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.GetAllWinServices">
            <summary>
            获取本机操作系统的所有windows服务
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.GetAllWinServiceNames">
            <summary>
            获取本机操作系统的所有windows服务名称
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.IsExistService(System.String)">
            <summary>
            检测是否存在指定服务,存在返回true
            </summary>
            <param name="serviceName">服务名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.Start">
            <summary>
            启动服务,启动时间为最多30秒，如果启动成功则返回true,否则返回false。
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.Stop">
            <summary>
            停止服务,停止时间为最多30秒,如果停止成功则返回true,否则返回false。
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.Pause">
            <summary>
            暂停服务,如果暂停成功则返回true,否则返回false。
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.Continue">
            <summary>
            服务暂停后，继续执行服务,如果继续执行成功则返回true,否则返回false。
            </summary>        
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.SendCommand(System.Int32)">
            <summary>
            向windows服务发送命令
            </summary>
            <param name="command">自定义命令，必须是128到256之间的整数,与windows服务的OnCustomCommand事件的参数对应</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.WinServiceHelper.Close">
            <summary>
            断开与windows服务的连接,并释放所有资源。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.WinServiceHelper.ServiceController">
            <summary>
            获取windows服务控制类的实例
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.XmlHelper">
            <summary>
            XML帮助类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.#ctor">
            <summary>
            默认构造子。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.ToString">
            <summary>
            当前XML 的字符串表述形式。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.HandleException(System.Exception)">
            <summary>
            异常处理。
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.LoadXML(System.String,Robin.EntLib.Common.Helper.XmlLoadType)">
            <summary>
            从某源中装载XML。
            </summary>
            <param name="sourceXMLOrFile">源路径或者值。</param>
            <param name="loadType">装载类型。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.DoPostLoadCreateInit">
            <summary>
            重新装载XML文档。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.MoveToRoot">
            <summary>
            移动到当前节点所属的根节点。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.SaveToFile(System.String)">
            <summary>
            保存XML到文件中。
            </summary>
            <param name="sTargetFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.CreateComment(System.Xml.XmlNode,System.String)">
            <summary>
            在某个节点后创建一个Comment。
            </summary>
            <param name="insertAfterThisNode"></param>
            <param name="sVal"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.CreateNodeAttribute(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            在某个节点上创建属性和属性对应的值。
            </summary>
            <param name="targetElement"></param>
            <param name="sAttributeName"></param>
            <param name="sAttributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.CreateNodeElement(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            在某个节点下创建一个子节点。
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <param name="sElementValue"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.CreateXmlDeclaration(System.String,System.String,System.String)">
            <summary>
            创建 XmlDeclaration 。
            </summary>
            <param name="version"></param>
            <param name="encoding"></param>
            <param name="standalone"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.DeleteNodeElement(System.Xml.XmlNode)">
            <summary>
            移出指定的子节点。
            </summary>
            <param name="targetNode"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GenerateSchemaAsString">
            <summary>
            得到XML架构形式。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.Decode(System.String)">
            <summary>
            对得到的XML进行反编码，替换其中的特殊字符。
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.Encode(System.String)">
            <summary>
            对字符串进行编码，使之符合XML标准。
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetAttributeBooleanValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到一个节点属性的Boolean形式的值
            </summary>
            <param name="node"></param>
            <param name="sAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetAttributeDoubleValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到一个节点属性的Double形式的值
            </summary>
            <param name="node"></param>
            <param name="sAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetAttributeFloatValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到一个节点属性的Float形式的值
            </summary>
            <param name="node"></param>
            <param name="sAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetAttributeInt32Value(System.Xml.XmlNode,System.String)">
            <summary>
            得到一个节点属性的Int32形式的值
            </summary>
            <param name="node"></param>
            <param name="sAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetAttributeValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到一个节点属性的字符串形式的值
            </summary>
            <param name="node"></param>
            <param name="sAttributeName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetChildElementBooleanValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到父节点下子节点的Boolean形式的值
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetChildElementDoubleValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到父节点下子节点的Double形式的值
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetChildElementFloatValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到父节点下子节点的Float形式的值
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetChildElementInt32Value(System.Xml.XmlNode,System.String)">
            <summary>
            得到父节点下子节点的Int32形式的值
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetChildElementValue(System.Xml.XmlNode,System.String)">
            <summary>
            得到父节点下子节点的字符串形式的值
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetChildNodesFromCriteria(System.Xml.XmlDocument,System.String)">
            <summary>
            按XPath得到Document 下的所有子节点，不递归
            </summary>
            <param name="doc"></param>
            <param name="xPathExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetElementBooleanValue(System.Xml.XmlNode)">
            <summary>
            得到一个节点Boolean形式的值
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetElementDoubleValue(System.Xml.XmlNode)">
            <summary>
            得到一个节点Double形式的值
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetElementFloatValue(System.Xml.XmlNode)">
            <summary>
            得到一个节点Float形式的值
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetElementInt32Value(System.Xml.XmlNode)">
            <summary>
            得到一个节点Int32形式的值
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetElementValue(System.Xml.XmlNode)">
            <summary>
            得到一个节点字符串形式的值
            </summary>
            <param name="xmlNode"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetFirstChildNodeFromCriteria(System.Xml.XmlDocument,System.String)">
            <summary>
            按XPath 得到第一个节点
            </summary>
            <param name="doc"></param>
            <param name="xPathExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetFirstChildXmlNode(System.Xml.XmlNode,System.String)">
            <summary>
            按名称得到一个节点下的第一个子节点
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetFirstChildXmlNodeFromRoot(System.Xml.XmlDocument,System.String)">
            <summary>
            按名称得到Document的第一个节点
            </summary>
            <param name="doc"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetRecursiveChildNodesFromParent(System.Xml.XmlNode,System.String)">
            <summary>
            递归出一个节点下的所有子节点
            </summary>
            <param name="parentNode"></param>
            <param name="sElementName"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.GetURLContent(System.String)">
            <summary>
            从URL地址里获取数据。
            </summary>
            <param name="sURL"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.ModifyNodeElementValue(System.Xml.XmlNode,System.String)">
            <summary>
            更改节点的值。
            </summary>
            <param name="targetNode"></param>
            <param name="sNewElementValue"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.ModifyNodeAttributeValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            更改节点的属性
            </summary>
            <param name="targetNode"></param>
            <param name="sAttributeName"></param>
            <param name="sNewAttributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlHelper.DeleteNodeAttribute(System.Xml.XmlNode,System.String)">
            <summary>
            删除某个节点的属性。
            </summary>
            <param name="targetNode"></param>
            <param name="sAttributeName"></param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.XmlHelper.Document">
            <summary>
            当前XML的Document对象。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.XmlHelper.LastErrorMessage">
            <summary>
            最后一个错误信息。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.XmlHelper.Navigator">
            <summary>
            当前对象的   XPathNavigator。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Helper.XmlHelper.RootNode">
            <summary>
            当前XML对象的根节点。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.XmlHelper.Save">
            <summary>
            
            </summary>
            <param name="sTargetXML"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.XmlLoadType">
            <summary>
            XML
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.XmlLoadType.FromLocalFile">
            <summary>
            从文件中装载。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.XmlLoadType.FromString">
            <summary>
            从字符串中装载。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Helper.XmlLoadType.FromUrl">
            <summary>
            从网络路径中装载。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="strPath"></param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.XMLLoad">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.XMLLoad(System.String)">
            <summary>
            导入XML文件
            </summary>
            <param name="XMLPath">XML文件路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.GetXmlFullPath(System.String)">
            <summary>
            返回完整路径
            </summary>
            <param name="strPath">Xml的路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Read(System.String)">
            <summary>
            读取指定节点的数据
            </summary>
            <param name="node">节点</param>
            使用示列:
            XMLProsess.Read("/Node", "")
            XMLProsess.Read("/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Read(System.String,System.String)">
            <summary>
            读取指定路径和节点的串联值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Read(System.String,System.String,System.String)">
            <summary>
            读取指定路径和节点的属性值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时返回该属性值，否则返回串联值</param>
            使用示列:
            XMLProsess.Read(path, "/Node", "")
            XMLProsess.Read(path, "/Node/Element[@Attribute='Name']", "Attribute")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.ReadAllChildallValue(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.ReadAllChild(System.String)">
            <summary>
            获取某一节点的所有孩子节点的值
            </summary>
            <param name="node">要查询的节点</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.GetDataViewByXml(System.String,System.String)">
            <summary> 
            读取XML返回经排序或筛选后的DataView
            </summary>
            <param name="strWhere">筛选条件，如:"name='kgdiwss'"</param>
            <param name="strSort"> 排序条件，如:"Id desc"</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.GetDataSetByXml(System.String)">
            <summary>
            读取XML返回DataSet
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Insert(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="attribute">属性名，非空时插入该元素属性值，否则插入元素值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "Element", "", "Value")
            XMLProsess.Insert(path, "/Node", "Element", "Attribute", "Value")
            XMLProsess.Insert(path, "/Node", "", "Attribute", "Value")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Insert(System.String,System.String,System.String,System.String[][])">
            <summary>
            插入数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="element">元素名，非空时插入新元素，否则在该元素中插入属性</param>
            <param name="strList">由XML属性名和值组成的二维数组</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.WriteXmlByDataSet(System.String,System.String[],System.String[])">
            <summary>
            插入一行数据
            </summary>
            <param name="strXmlPath">XML文件相对路径</param>
            <param name="Columns">要插入行的列名数组，如：string[] Columns = {"name","IsMarried"};</param>
            <param name="ColumnValue">要插入行每列的值数组，如：string[] ColumnValue={"XML大全","false"};</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Update(System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="node">节点</param>
            <param name="value">值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Update(System.String,System.String,System.String)">
            <summary>
            修改指定节点的数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node","Value")
            XMLProsess.Insert(path, "/Node","Value")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Update(System.String,System.String,System.String,System.String)">
            <summary>
            修改指定节点的属性值(静态)
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时修改该节点属性值，否则修改节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Insert(path, "/Node", "", "Value")
            XMLProsess.Insert(path, "/Node", "Attribute", "Value")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.UpdateXmlRow(System.String,System.String[],System.String[],System.String,System.String)">
            <summary>
            更改符合条件的一条记录
            </summary>
            <param name="strXmlPath">XML文件路径</param>
            <param name="Columns">列名数组</param>
            <param name="ColumnValue">列值数组</param>
            <param name="strWhereColumnName">条件列名</param>
            <param name="strWhereColumnValue">条件列值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Delete(System.String,System.String)">
            <summary>
            删除节点值
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.Delete(System.String,System.String,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="path">路径</param>
            <param name="node">节点</param>
            <param name="attribute">属性名，非空时删除该节点属性值，否则删除节点值</param>
            <param name="value">值</param>
            使用示列:
            XMLProsess.Delete(path, "/Node", "")
            XMLProsess.Delete(path, "/Node", "Attribute")
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.DeleteXmlAllRows(System.String)">
            <summary>
            删除所有行
            </summary>
            <param name="strXmlPath">XML路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.DeleteXmlRowByIndex(System.String,System.Int32)">
            <summary>
            通过删除DataSet中指定索引行，重写XML以实现删除指定行
            </summary>
            <param name="iDeleteRow">要删除的行在DataSet中的Index值</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XMLProcess.DeleteXmlRows(System.String,System.String,System.String[])">
            <summary>
            删除指定列中指定值的行
            </summary>
            <param name="strXmlPath">XML相对路径</param>
            <param name="strColumn">列名</param>
            <param name="ColumnValue">指定值</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.XmlSerializatizer">
            <summary>
            序列化助手类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.#ctor">
            <summary>
            默认构造子。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.Load(System.Type,System.String)">
            <summary>
            从一个文件反序列化为类实例。
            </summary>
            <param name="type">实例类型。</param>
            <param name="filename">实例文件存储的路径。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.ConvertFromString(System.Type,System.String)">
            <summary>
            从一个字符串序列化出一个类。
            </summary>
            <param name="type">实例类型。</param>
            <param name="objectData">实例数据。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.ConvertToString(System.Object)">
            <summary>
            把一个对象序列化字符串并返回。
            </summary>
            <param name="obj">类实例。</param>
            <returns>类的XML表述。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.ConvertToString(System.Object,System.Text.Encoding)">
            <summary>
            把一个对象序列化字符串并返回。
            </summary>
            <param name="obj">类实例。</param>
            <param name="encoding">类的XML编码。</param>
            <returns>类的XML表述。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.ConvertToString(System.Object,System.Type)">
            <summary>
            把一个对象序列化字符串并返回（指定类型的对象序列化）。
            </summary>
            <param name="obj">类实例。</param>
            <param name="type">指定类型的对象序列化。</param>
            <returns>类的XML表述。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.ConvertToNoNamespacesString(System.Object)">
            <summary>
            把一个对象序列化字符串并返回。
            </summary>
            <param name="obj">类实例。</param>
            <returns>类的XML表述。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.Save(System.Object,System.String)">
            <summary>
            把一个对象序列化后存储到文件中。
            </summary>
            <param name="obj">需要存储的类实例。</param>
            <param name="filename">类文件的名称。</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlSerializatizer.Save(System.Object,System.Type,System.String)">
            <summary>
            把一个对象序列化后存储到文件中（指定类型的对象序列化）。
            </summary>
            <param name="obj">需要存储的类实例。</param>
            <param name="type">指定类型的对象序列化。</param>
            <param name="filename">类文件的名称。</param>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.XmlToJson">
            <summary>
            XmlToJson convers an XmlDocument to JSON format.
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Helper.XmlUtils">
            <summary>
            xml操作辅助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.LoadXMLFromFile(System.String)">
            <summary>
            从指定路径加载xml文件
            </summary>
            <param name="file_">文件路径</param>
            <returns>xmldocument</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.RemoveAllChildrenFrom(System.Xml.XmlNode)">
            <summary>
            从指定的节点中删除的所有子节点（但不是attributes）
            </summary>
            <param name="n">要删除子节点的节点</param>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.GetAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
            <summary>
            获取xNav_当前节点的属性值。如果attrName_不存在，抛出一个异常。
            </summary>
            <param name="xNav_"></param>
            <param name="attrName_"></param>
            <returns>属性值</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.GetAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.String)">
            <summary>
            获取xNav_当前节点的属性值。如果attrName_不存在，返回默认值。
            </summary>
            <param name="xNav_"></param>
            <param name="attrName_"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.FragmentToNode(System.String)">
            <summary>
            Convert a fragment of xml to an xml node
            </summary>
            <param name="xmlFragment_">An xml fragment starting with an outer element</param>
            <returns>A node on a new xml document</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.EscapeXml(System.String)">
            <summary>
            格式化xml文件
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.FormatNicely(System.String)">
            <summary>
            Pretty Print the input XML string, such as adding indentations to each level of elements
            and carriage return to each line
            </summary>
            <param name="xmlText"></param>
            <returns>New formatted XML string</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.TransformXml(System.IO.TextReader,System.IO.TextReader,System.IO.TextWriter)">
            <summary>
            Transforms the XML.
            </summary>
            <param name="inXml">The in XML.</param>
            <param name="styleSheet">The style sheet.</param>
            <param name="outXml">The out XML.</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.TransformXml(System.String,System.String)">
            <summary>
            Generates html by transforming the xml to html
            using xsl file specified.
            </summary>
            <param name="xmlToTransform">The xml to transform to html.</param>
            <param name="pathToXsl">The path to the xsl file to use for
            the transformation.</param>
            <returns>An html string if correctly transformed, or an empty string
            if there was some error.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XmlUtils.Serialize(System.Object)">
            <summary>
            Serializes an object to xml using the XmlSerialization.
            The obj must have the xml attributes used for serialization.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XSLHelper.Combind(System.String,System.String)">
            <summary>
            将第二个xml元素加到第一个的根目录下
            </summary>
            <param name="xml"></param>
            <param name="xml2"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XSLHelper.TransferXml(System.String,System.String)">
            <summary>
            通过XSL转换XML串,返回转换后的串
            </summary>
            <param name="xmlstr"></param>
            <param name="xslFile"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XSLHelper.TransferXml(System.Xml.XmlReader,System.String)">
            <summary>
            通过XSL转换xmlreader,返回转换后的串
            </summary>
            <param name="xr2"></param>
            <param name="xslFile"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XSLHelper.TransferXml(System.String,System.String,System.String)">
            <summary>
            通过XSL转换XML串并直接输出到文件
            </summary>
            <param name="xmlstr"></param>
            <param name="xslFile"></param>
            <param name="outHtmlFile">物理路径</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Helper.XSLHelper.TransferXml(System.Xml.XmlReader,System.String,System.String)">
            <summary>
            通过XSL转换XMLreader流并直接输出到文件
            </summary>
            <param name="xr2"></param>
            <param name="xslFile"></param>
            <param name="outHtmlFile"></param>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.HTTPClient">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.#ctor">
            <summary>
            构造新的HttpClient实例
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.#ctor(System.String)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.#ctor(System.String,Robin.EntLib.Common.HTTPProxy.HTTPClientContext)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="context">Cookie及Referer</param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.#ctor(System.String,Robin.EntLib.Common.HTTPProxy.HTTPClientContext,System.Boolean)">
            <summary>
            构造新的HttpClient实例
            </summary>
            <param name="url">要获取的资源的地址</param>
            <param name="context">Cookie及Referer</param>
            <param name="keepContext">是否自动在不同的请求间保留Cookie, Referer</param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.AttachFile(System.String,System.String)">
            <summary>
            在请求中添加要上传的文件
            </summary>
            <param name="fileName">要上传的文件路径</param>
            <param name="fieldName">文件字段的名称(相当于&lt;input type=file name=fieldName&gt;)里的fieldName)</param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.AttachFile(System.Byte[],System.String,System.String)">
            <summary>
            在请求中添加要上传的文件
            </summary>
            <param name="data">要上传的文件内容</param>
            <param name="fileName">文件名</param>
            <param name="fieldName">文件字段的名称(相当于&lt;input type=file name=fieldName&gt;)里的fieldName)</param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.Reset">
            <summary>
            清空PostingData, Files, StartPoint, EndPoint, ResponseHeaders, 并把Verb设置为Get.
            在发出一个包含上述信息的请求后,必须调用此方法或手工设置相应属性以使下一次请求不会受到影响.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.GetResponse">
            <summary>
            发出一次新的请求,并返回获得的回应
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>相应的HttpWebResponse</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.GetStream">
            <summary>
            发出一次新的请求,并返回回应内容的流
            调用此方法永远不会触发StatusUpdate事件.
            </summary>
            <returns>包含回应主体内容的流</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.GetBytes">
            <summary>
            发出一次新的请求,并以字节数组形式返回回应的内容
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>包含回应主体内容的字节数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.GetString">
            <summary>
            发出一次新的请求,以Http头,或Html Meta标签,或DefaultEncoding指示的编码信息对回应主体解码
            调用此方法会触发StatusUpdate事件
            </summary>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.GetString(System.Text.Encoding)">
            <summary>
            发出一次新的请求,对回应的主体内容以指定的编码进行解码
            调用此方法会触发StatusUpdate事件
            </summary>
            <param name="encoding">指定的编码</param>
            <returns>解码后的字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.HeadContentLength">
            <summary>
            发出一次新的Head请求,获取资源的长度
            此请求会忽略PostingData, Files, StartPoint, EndPoint, Verb
            </summary>
            <returns>返回的资源长度</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.SaveAsFile(System.String)">
            <summary>
            发出一次新的请求,把回应的主体内容保存到文件
            调用此方法会触发StatusUpdate事件
            如果指定的文件存在,它会被覆盖
            </summary>
            <param name="fileName">要保存的文件路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPClient.SaveAsFile(System.String,Robin.EntLib.Common.HTTPProxy.HTTPFileExistsAction)">
            <summary>
            发出一次新的请求,把回应的主体内容保存到文件
            调用此方法会触发StatusUpdate事件
            </summary>
            <param name="fileName">要保存的文件路径</param>
            <param name="existsAction">指定的文件存在时的选项</param>
            <returns>是否向目标文件写入了数据</returns>
        </member>
        <member name="E:Robin.EntLib.Common.HTTPProxy.HTTPClient.StatusUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.KeepContext">
            <summary>
            是否自动在不同的请求间保留Cookie, Referer
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.DefaultLanguage">
            <summary>
            期望的回应的语言
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.DefaultEncoding">
            <summary>
            GetString()如果不能从HTTP头或Meta标签中获取编码信息,则使用此编码来获取字符串
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.Verb">
            <summary>
            指示发出Get请求还是Post请求
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.Files">
            <summary>
            要上传的文件.如果不为空则自动转为Post请求
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.PostingData">
            <summary>
            要发送的Form表单信息
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.Url">
            <summary>
            获取或设置请求资源的地址
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.ResponseHeaders">
            <summary>
            用于在获取回应后,暂时记录回应的HTTP头
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.Accept">
            <summary>
            获取或设置期望的资源类型
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.UserAgent">
            <summary>
            获取或设置请求中的Http头User-Agent的值
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.Context">
            <summary>
            获取或设置Cookie及Referer
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.StartPoint">
            <summary>
            获取或设置获取内容的起始点,用于断点续传,多线程下载等
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClient.EndPoint">
            <summary>
            获取或设置获取内容的结束点,用于断点续传,多下程下载等.
            如果为0,表示获取资源从StartPoint开始的剩余内容
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.HTTPClientContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClientContext.Cookies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPClientContext.Referer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.HTTPFileExistsAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.HTTPProxy.HTTPFileExistsAction.Overwrite">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.HTTPProxy.HTTPFileExistsAction.Append">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.HTTPProxy.HTTPFileExistsAction.Cancel">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.HTTPStatusUpdateEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HTTPStatusUpdateEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="got"></param>
            <param name="total"></param>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPStatusUpdateEventArgs.BytesGot">
            <summary>
            已经下载的字节数
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HTTPStatusUpdateEventArgs.BytesTotal">
            <summary>
            资源的总字节数
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.HttpUploadingFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HttpUploadingFile.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.HttpUploadingFile.#ctor(System.Byte[],System.String,System.String)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="fileName"></param>
            <param name="fieldName"></param>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HttpUploadingFile.FileName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HttpUploadingFile.FieldName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.HTTPProxy.HttpUploadingFile.Data">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.HttpVerb">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.HTTPProxy.HttpVerb.GET">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.HTTPProxy.HttpVerb.POST">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.HTTPProxy.HttpVerb.HEAD">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.HTTPProxy.WebServiceClient">
            <summary>
            根据指定的信息，调用远程WebService方法.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.WebServiceClient.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            动态调用web服务。
            </summary>
            <param name="url">Web服务路径。</param>
            <param name="methodname">Web服务方法。</param>
            <param name="args">Web服务参数。</param>
            <returns>服务返回的数据。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.WebServiceClient.InvokeWebService(System.String,System.String,System.String,System.Object[])">
            <summary>
            根据指定的信息，调用远程WebService方法
            </summary>
            <param name="url">WebService的http形式的地址</param>
            <param name="classname">欲调用的WebService的类名（不包括命名空间前缀）</param>
            <param name="methodname">欲调用的WebService的方法名</param>
            <param name="args">参数列表</param>
            <returns>WebService的执行结果</returns>
            <remarks>
            如果调用失败，将会抛出Exception。请调用的时候，适当截获异常。
            异常信息可能会发生在两个地方：
            1、动态构造WebService的时候，CompileAssembly失败。
            2、WebService本身执行失败。
            </remarks>
            <example>
            <code>
            object obj = InvokeWebservice(http: //localhost/GSP_WorkflowWebservice/common.asmx,Genersoft.Platform.Service.Workflow,Common,GetToolType,new object[]{1});
            </code>
            </example>
        </member>
        <member name="M:Robin.EntLib.Common.HTTPProxy.WebServiceClient.SetUrlAssembly(System.String,System.String)">
            <summary>
            动态编译一个程序集。
            </summary>
            <param name="url"></param>
            <param name="classname"></param>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.Exceptions.DirNotFoundException">
            <summary>
            目录非法或不存在
            Directory not found or illegal.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.Exceptions.DirNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="dir"></param>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.Exceptions.DirNotFoundException.Message">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.Exceptions.FileNotFoundException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.Exceptions.FileNotFoundException.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.Exceptions.VirtualDirAlreadyExistException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.Exceptions.VirtualDirAlreadyExistException.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
            <summary>
            
            </summary>
            <param name="entry"></param>
            <param name="vDir"></param>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.Exceptions.VirtualDirAlreadyExistException.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.Exceptions.WebsiteWithoutRootException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.Exceptions.WebsiteWithoutRootException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Website"></param>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.Exceptions.WebsiteWithoutRootException.Message">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.IISAppPool">
            <summary>
            IISAppPool被用于管理IIS的应用程序池.我们可以是用这个类创建应用程序池.
            我使用目录服务管理应用程序池.
            IISAppPool is used to manage AppPool of IIS. We can create an AppPool with this class.
            I use Directory Service to manage AppPool.
            
            Author: luckzj
            Time:   27/June 2010
            Email:  luckzj12@163.com
            Website: http://soft-bin.com
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Private constructor. Anyone wants to Create an instance of IISAppPool should call
            OpenAppPool
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.Start">
            <summary>
            开启应用程序池
            Start application pool.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.Stop">
            <summary>
            停止应用程序池
            Stop application pool.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.OpenAppPool(System.String)">
            <summary>
            打开应用程序池并返回IISAppPool实例
            Open a application pool and return an IISAppPool instance
            </summary>
            <param name="name">应用程序池名称application pool name</param>
            <returns>IISAppPool对象.IISAppPool object</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.CreateAppPool(System.String)">
            <summary>
            创建应用程序池
            create app pool
            </summary>
            <param name="name">要创建的应用程序池.the app pool to be created</param>
            <returns>如果成功返回IISAppPool实例,失败返回null.IISAppPool created if success, else null</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.Exsit(System.String)">
            <summary>
            指定应用程序池是否存在
            if the app pool specified exsit
            </summary>
            <param name="name">应用程序池名称.name of app pool</param>
            <returns>如果存在返回true,否则返回false.true if exsit, otherwise false</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISAppPool.DeleteAppPool(System.String)">
            <summary>
            删除应用程序池
            Delete an app pool
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISAppPool.Name">
            <summary>
            应用程序池名称
            Get name of the App Pool
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.IISWebDirType">
            <summary>
            IISWebDir有两种类型
            There are two types of IISWebDir
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.IISWebDir">
            <summary>
            iis网络目录
            iis web directory
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            constructor
            </summary>
            <param name="server">directory entry</param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.CreateApplication(Robin.EntLib.Common.IISManager.IISAppPool)">
            <summary>
            从该目录创建应用程序
            create application from this dir
            </summary>
            <param name="appPool">要使用的应用程序池,null表示默认.app pool to use, null means default</param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.CreateApplication(System.String)">
            <summary>
            创建一个应用
            Create a application
            </summary>
            <param name="appPool"></param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.DeleteApplication">
            <summary>
            删除应用,虚拟目录只能使用静态版本删除
            delete application, virtual dire can only be deleted using static version
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.DeleteVirtualDir(Robin.EntLib.Common.IISManager.IISWebDir)">
            <summary>
            删除虚拟目录
            delete virtual dir
            </summary>
            <param name="virtualDir">要删除的虚拟目录.dir want to delete</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.AddScriptMap(System.String,System.String)">
            <summary>
            为应用程序添加脚本映射
            add a script map for application
            </summary>
            <param name="name">类似".do" 的名称.".do" or something like this</param>
            <param name="exefile">dll文件.dll file</param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.AddScriptMap(System.String,System.String,System.Int32,System.String)">
            <summary>
            为应用程序添加脚本映射
            add script map for application
            </summary>
            <param name="name">类似".do" 的名称.".do" or something like this</param>
            <param name="exefile">要读取的dll.dll to be loaded</param>
            <param name="mask">1:检查"脚本引擎",4:检查"检查文件存在,可以一起添加.1 means check "script engine", 4 means check "check file exsit", can be added together</param>
            <param name="limitString">限制字符串limit string</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.CreateVirtualDir(System.String,System.String)">
            <summary>
            创建一个新的虚拟目录
            create a new virtual dir
            </summary>
            <param name="name">虚拟目录名称.virutal dir name</param>
            <param name="path">路径.path</param>
            <returns>IISWebDir对象.IISWebDir object</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebDir.OpenDir(System.String)">
            <summary>
            获取指定名称的目录
            get dir from this dir
            </summary>
            <param name="name">目录名称the name of the dir</param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebDir.Path">
            <summary>
            虚拟目录路径
            get or set virtual directory path
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebDir.Name">
            <summary>
            虚拟路径
            name of this virtual path
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebDir.SchemaClassName">
            <summary>
            模式类
            Schema class
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebDir.Type">
            <summary>
            IIS网站类型
            IISWebType
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.IISWebsite">
            <summary>
            IISWebsite是在IIS服务器上管理站点的类.您不能使用IISWebsite构造函数直接创建一个IISWebsite实例.
            IISWebsite is a class to manage websites on a IIS server. You can not create
            a IISWebsite instance directly with a IISWebsite constructor.
            为了得到一个IISWebsite实例,调用IISWebsite.OpenWebsite来打开一个已存在站点
            或者使用IISWebsite.CreateWebsite来创建一个新的站点.
            To get a IISWebsite instance, call IISWebsite.OpenWebsite to open an existing website or
            IISWebsite.CreateWebsite to create a new website. 
            这两个方法都会返回一个IISWebsite实例,您可以使用返回的实例去管理您的站点
            Both of these two methods would return a instance of IISWebsite so that you can use
            this instance to handle your website.
            
            Author: luckzj
            Time  : 27/June. 2010
            contact: luckzj12@163.com
            website: http://www.soft-bin.com
            copy right (c) luckzj. All rights reserved
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Protect this constructor so that user can not create a IISWebsite instance directly.
            To get IISWebsite instance, please use IISWebsite.OpenWebsite or IISWebsite.CreateWebsite
            </summary>
            <param name="Server"></param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.Start">
            <summary>
            开启站点
            Start this website
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.Stop">
            <summary>
            停止站点
            Stop this website
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.Parse">
            <summary>
            转换站点
            Parse this website
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.Continue">
            <summary>
            继续运行站点
            Continue to run this website.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.CreateWebsite(System.String,System.Int32,System.String)">
            <summary>
            创建新站点
            create a new website
            </summary>
            <param name="name">站点名称.website name</param>
            <param name="port">端口号.website port</param>
            <param name="rootPath">跟路径root path</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.OpenWebsite(System.String)">
            <summary>
            打开一个站点对象
            open a website object
            </summary>
            <param name="name">要打开的站点名称.name of the website to be opened</param>
            <returns>IISWebsite对象.IISWebsite object</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebsite.DeleteWebsite(System.String)">
            <summary>
            删除一个站点服务.Delete a website service
            </summary>
            <param name="name">站点名称.the name of the website</param>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebsite.Name">
            <summary>
            web站点名称
            get or set name of this website
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebsite.Port">
            <summary>
            web站点端口号
            get or set website port
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebsite.Root">
            <summary>
            根路径
            Root path
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebsite.Status">
            <summary>
            iis web站点状态
            Get iis website Status
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebsite.ExistedWebsites">
            <summary>
            获取已存在站点.Get exsited websites
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.IISManager.IISWebVirturalDir">
            <summary>
            这个类代表一个IIS虚拟目录
            This class represent a IIS virtual directory.
            
            Author: luckzj
            Time:   27/June 2010
            Email:  luckzj12@163.com
            Website: http://soft-bin.com
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Internal this constructor so that user of this dll can not create a instance of IISWebVirtualDir directly.
            To get a instance of IISWebVirtualDir, please use IISWebVirtualDir.OpenSubVirtualDir or IISWebVirtualDir.CreateSubVirtualDir.
            </summary>
            <param name="entry"></param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.ExistVirtualDir(System.String)">
            <summary>
            检查是否虚拟目录存在
            Check whether a virtual directory exists.
            </summary>
            <param name="name">路径名称检查Name of dir checked</param>
            <returns>true表示存在,false表示不存在true if exist. Otherwise false.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.CreateSubVirtualDir(System.String,System.String,System.String)">
            <summary>
            创建子虚拟目录
            Create a sub virtual directory
            </summary>
            <param name="name">要创建的子虚拟目录名称.Name of the sub virtual directory to be created.</param>
            <param name="path">子虚拟目录路径Path of the sub virtual directory.</param>
            <param name="appPool">
            应用程序池.如不存在将创建一个使用这个名字的应用程序池.如不想使用应用程序池使用String.Empty或者null.
            Application pool. Application pool with this name would be created if not exist. 
            Use string.Empty or null to this parameter if you don't want to use a application pool.
            </param>
            <returns>如创建成功返回一个IISWebVirtualDir对象,否则返回null. A IISWebVirtualDir if created. Otherwise  null.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.CreateSubVirtualDir(System.String,System.String)">
            <summary>
            创建虚拟目录
            Create a virtual directory
            </summary>
            <param name="name">虚拟目录名字.Name of the virtual directory</param>
            <param name="path">虚拟目录路径Path of the virtual directory</param>
            <returns>如果成功返回一个IISWebVirtualDir实例,否则flase.A IISWebVirtualDir instance if succeed. Otherwise false.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.OpenSubVirtualDir(System.String)">
            <summary>
            打开一个子虚拟目录
            Open a sub virtual directory
            </summary>
            <param name="name">要打开的目录名字,大小写敏感.Name of directory to be opened. Case insensitive.</param>
            <returns>如果成功打开返回一个IISWebVirtualDir实例,否则返回null.A IISWebVirtualDir instance if open successfully done.Otherwise null.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.EnumSubVirtualDirs">
            <summary>
            枚举子虚拟目录
            Enumerate sub virtual directorys
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.DeleteSubVirtualDir(System.String)">
            <summary>
            删除子虚拟目录
            Delete a sub virtual directory
            </summary>
            <param name="name">要被删除的子虚拟目录的名字.Name of the sub virtual directory to be deleted</param>
            <returns>如果成功删除返回true.否则返回false.true if successfully deleted. Otherwise false.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.AddScriptMap(System.String,System.String)">
            <summary>
            为应用程序添加脚本映射
            add a script map for application
            </summary>
            <param name="name">类似".do" 的名称. ".do" or something like this</param>
            <param name="exefile">dll文件.dll file</param>
        </member>
        <member name="M:Robin.EntLib.Common.IISManager.IISWebVirturalDir.AddScriptMap(System.String,System.String,System.Int32,System.String)">
            <summary>
            为应用程序添加脚本映射
            add script map for application
            </summary>
            <param name="name">类似".do" 的名称.".do" or something like this</param>
            <param name="exefile">要背读取的dll. dll to be loaded</param>
            <param name="mask">1:检查"脚本引擎",4:检查"检查文件存在,可以一起添加."1 means check "script engine", 4 means check "check file exsit", can be added together</param>
            <param name="limitString">限制字符串.limit string</param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebVirturalDir.Path">
            <summary>
            虚拟目录路径
            Get or set the path of this virtual directory
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.IISManager.IISWebVirturalDir.Name">
            <summary>
            虚拟路径名称
            Get name of this virtual path.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.IJQGridable.GetJQCount(System.String)">
            <summary>
            获取总数
            </summary>
            <param name="where">查询条件</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.IJQGridable.GetJQDataTable(System.String,System.Int32,System.Int32)">
            <summary>
            获取指定范围的数据(该函数与GetJQDataSet仅需实现其中一个)
            </summary>
            <param name="where">查询条件</param>
            <param name="startRecord">开始索引</param>
            <param name="endRecord">结束索引</param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.JQGridHelper">
            <summary>
                jqGrid辅助类
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            构造函数
            </summary>
            <param name="collection">url参数集合</param>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.#ctor(System.Web.HttpContext)">
            <summary>
            构造函数
            </summary>
            <param name="context">http上下文</param>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.#ctor(System.Collections.Specialized.NameValueCollection,Robin.EntLib.Common.IJQGridable)">
            <summary>
            构造函数
            </summary>
            <param name="collection">url参数集合</param>
            <param name="iJQGridable">数据操作类实例</param>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.#ctor(System.Web.HttpContext,Robin.EntLib.Common.IJQGridable)">
            <summary>
            构造函数
            </summary>
            <param name="context">http上下文</param>
            <param name="iJQGridable">数据操作类实例</param>
        </member>
        <member name="F:Robin.EntLib.Common.JQGridHelper.NullValue">
            <summary>
            无数据行
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.Parse(System.Data.DataTable)">
            <summary>
                转换数据为json字符串
            </summary>
            <param name="dt">要处理的数据</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.Parse(Robin.EntLib.Common.IJQGridable)">
            <summary>
            转换数据为json字符串
            </summary>
            <param name="iJQGridable">实现了该接口的数据操作实例</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.GetWhere(System.String[],System.String[],System.String[],System.String[])">
            <summary>
            获取查询条件
            </summary>
            <param name="queryField">要作为查询条件的字段</param>
            <param name="queryOp">字段和值的关系</param>
            <param name="queryValue">要作为查询条件的值</param>
            <param name="queryType">要查询字段的类型</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.JQGridHelper.GetJsonString(System.Data.DataTable)">
            <summary>
                获取json字符串
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.JSON">
            <summary>
            JSON格式数据
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Columns">
            <summary>
                使用到的列
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Count">
            <summary>
                记录总数
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.EndRecord">
            <summary>
                结束索引号(从0开始)
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.ErrMsg">
            <summary>
                错误信息
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.PK">
            <summary>
                主键
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Page">
            <summary>
                当前页索引(从1开始)
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Rows">
            <summary>
                每页显示记录数
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Sidx">
            <summary>
                排序字段
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Sord">
            <summary>
                排序方式(ASC/DESC)
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.StartRecord">
            <summary>
                开始索引号(从0开始)
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.JQGridHelper.Where">
            <summary>
                查询条件
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.TreeModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.id">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.pId">
            <summary>
            父节点
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.icon">
            <summary>
            图标
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.file">
            <summary>
            url
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.isParent">
            <summary>
            是否父节点
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.open">
            <summary>
            是否展开
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.TreeModel.ischecked">
            <summary>
            是否复选框选中
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.LDAP.Directory">
            <summary>
            Class for helping with AD
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="UserName">User name used to log in</param>
            <param name="Password">Password used to log in</param>
            <param name="Path">Path of the LDAP server</param>
            <param name="Query">Query to use in the search</param>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.Authenticate">
            <summary>
            Checks to see if the person was authenticated
            </summary>
            <returns>true if they were authenticated properly, false otherwise</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.Close">
            <summary>
            Closes the directory
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindActiveGroupMembers(System.String)">
            <summary>
            Returns a group's list of members
            </summary>
            <param name="GroupName">The group's name</param>
            <returns>A list of the members</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindActiveGroups(System.String,System.Object[])">
            <summary>
            Finds all active groups
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all active groups' entries</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindActiveUsers(System.String,System.Object[])">
            <summary>
            Finds all active users
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all active users' entries</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindActiveUsersAndGroups(System.String,System.Object[])">
            <summary>
            Finds all active users and groups
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all active groups' entries</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindAll">
            <summary>
            Finds all entries that match the query
            </summary>
            <returns>A list of all entries that match the query</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindComputers(System.String,System.Object[])">
            <summary>
            Finds all computers
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all computers meeting the specified Filter</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindGroups(System.String,System.Object[])">
            <summary>
            Finds all groups
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all groups meeting the specified Filter</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindOne">
            <summary>
            Finds one entry that matches the query
            </summary>
            <returns>A single entry matching the query</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindUsersAndGroups(System.String,System.Object[])">
            <summary>
            Finds all users and groups
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all users and groups meeting the specified Filter</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindUserByUserName(System.String)">
            <summary>
            Finds a user by his user name
            </summary>
            <param name="UserName">User name to search by</param>
            <returns>The user's entry</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Directory.FindUsers(System.String,System.Object[])">
            <summary>
            Finds all users
            </summary>
            <param name="Filter">Filter used to modify the query</param>
            <param name="args">Additional arguments (used in string formatting</param>
            <returns>A list of all users meeting the specified Filter</returns>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Directory.Path">
            <summary>
            Path of the server
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Directory.UserName">
            <summary>
            User name used to log in
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Directory.Password">
            <summary>
            Password used to log in
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Directory.Query">
            <summary>
            The query that is being made
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Directory.SortBy">
            <summary>
            Decides what to sort the information by
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.LDAP.Entry">
            <summary>
            Directory entry class
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Entry.#ctor(System.DirectoryServices.DirectoryEntry)">
            <summary>
            Constructor
            </summary>
            <param name="DirectoryEntry">Directory entry for the item</param>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Entry.Save">
            <summary>
            Saves any changes that have been made
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Entry.GetValue(System.String)">
            <summary>
            Gets a value from the entry
            </summary>
            <param name="Property">Property you want the information about</param>
            <returns>an object containing the property's information</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Entry.GetValue(System.String,System.Int32)">
            <summary>
            Gets a value from the entry
            </summary>
            <param name="Property">Property you want the information about</param>
            <param name="Index">Index of the property to return</param>
            <returns>an object containing the property's information</returns>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Entry.SetValue(System.String,System.Object)">
            <summary>
            Sets a property of the entry to a specific value
            </summary>
            <param name="Property">Property of the entry to set</param>
            <param name="Value">Value to set the property to</param>
        </member>
        <member name="M:Robin.EntLib.Common.LDAP.Entry.SetValue(System.String,System.Int32,System.Object)">
            <summary>
            Sets a property of the entry to a specific value
            </summary>
            <param name="Property">Property of the entry to set</param>
            <param name="Index">Index of the property to set</param>
            <param name="Value">Value to set the property to</param>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.DirectoryEntry">
            <summary>
            Actual base directory entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.Email">
            <summary>
            Email property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.DistinguishedName">
            <summary>
            distinguished name property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.CountryCode">
            <summary>
            country code property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.Company">
            <summary>
            company property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.MemberOf">
            <summary>
            MemberOf property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.DisplayName">
            <summary>
            display name property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.Initials">
            <summary>
            initials property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.Title">
            <summary>
            title property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.SamAccountName">
            <summary>
            samaccountname property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.GivenName">
            <summary>
            givenname property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.CN">
            <summary>
            cn property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.Name">
            <summary>
            name property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.Office">
            <summary>
            office property for this entry
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.LDAP.Entry.TelephoneNumber">
            <summary>
            telephone number property for this entry
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Mail.ESmtpMail">
            <summary>
            支持SMTP服务器认证的邮件发送类
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.Charset">
            <summary>
            设定语言代码，默认设定为GB2312，如不需要可设置为""
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.From">
            <summary>
            发件人地址
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.FromName">
            <summary>
            发件人姓名
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.ReplyTo">
            <summary>
            回复邮件地址
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.mailserver">
            <summary>
            邮件服务器域名
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.mailserverport">
            <summary>
            邮件服务器端口号
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.ESmtp">
            <summary>
            是否需要SMTP验证
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.username">
            <summary>
            SMTP认证时使用的用户名
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.password">
            <summary>
            SMTP认证时使用的密码
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.Subject">
            <summary>
            邮件主题
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.Html">
            <summary>
            是否Html邮件
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.Body">
            <summary>
            邮件正文
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.Recipient">
            <summary>
            收件人列表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.RecipientBCC">
            <summary>
            密送收件人列表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.priority">
            <summary>
            邮件发送优先级，可设置为"High","Normal","Low"或"1","3","5"
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.errmsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.logs">
            <summary>
            服务器交互记录
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.tc">
            <summary>
            TcpClient对象，用于连接服务器
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.ns">
            <summary>
            NetworkStream对象
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.ErrCodeHT">
            <summary>
            SMTP错误代码哈希表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.RightCodeHT">
            <summary>
            SMTP正确代码哈希表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.ESmtpMail.RecipientName">
            <summary>
            收件人姓名
            </summary>	
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Finalize">
            <summary>
            析构函数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.SMTPCodeAdd">
            <summary>
            SMTP回应代码哈希表
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Base64Encode(System.String)">
            <summary>
            将字符串编码为Base64字符串
            </summary>
            <param name="estr">要编码的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Base64Decode(System.String)">
            <summary>
            将Base64字符串解码为普通字符串
            </summary>
            <param name="dstr">要解码的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.AddRecipient(System.String)">
            <summary>
            添加一个收件人
            </summary>	
            <param name="str">收件人地址</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.AddRecipient(System.String[])">
            <summary>
            添加一组收件人（不超过10个），参数为字符串数组
            </summary>
            <param name="str">保存有收件人地址的字符串数组（不超过10个）</param>	
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.AddRecipientBCC(System.String)">
            <summary>
            添加一个密件收件人
            </summary>
            <param name="str">收件人地址</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.AddRecipientBCC(System.String[])">
            <summary>
            添加一组密件收件人（不超过10个），参数为字符串数组
            </summary>	
            <param name="str">保存有收件人地址的字符串数组（不超过10个）</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.SendCommand(System.String)">
            <summary>
            发送SMTP命令
            </summary>	
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.RecvResponse">
            <summary>
            接收SMTP服务器回应
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Dialog(System.String,System.String)">
            <summary>
            与服务器交互，发送一条命令并接收回应。
            </summary>
            <param name="Command">一个要发送的命令</param>
            <param name="errstr">如果错误，要反馈的信息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Dialog(System.String[],System.String)">
            <summary>
            与服务器交互，发送一组命令并接收回应。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Send">
             <summary>
             发送邮件方法，所有参数均通过属性设置。
             </summary>
             <example>
             <code>
             <![CDATA[
             using System;
             using System.Data;
             using Seaskyer.Mail;
            
             public class SendMail
             {
             	public bool SendTest()
             	{
             		ESmtpMail ESM = new ESmtpMail();
            
             		ESM.RecipientName = "test";//设定收件人姓名
             		ESM.AddRecipient("test@163.com");//设定收件人地址（必须填写）。
             		ESM.AddRecipient("test@163.com");//再次使用AddRecipient就是抄送了，也可以直接传入一个字符串数组，设定一组收件人。
            
             		ESM.From		= "hktkmaster@163.com";//设定发件人地址(必须填写)
             		ESM.FromName	= "怒容.Net";//设定发件人姓名
             		ESM.ReplyTo		= "hktkmaster@163.com";//设定回复邮件地址.
            
             		ESM.Priority	= "Normal";//设定优先级，不过我实验着好像没啥用
             		ESM.Html		= true;//设定正文是否HTML格式。
             		ESM.Subject		= tbSubject.Text;//设定邮件主题
             		ESM.Body		= tbBody.Text;//设定邮件正文
             		ESM.MailDomain	= "smtp.163.com";
             		ESM.MailServerUserName="test";//设定SMTP验证的用户名
             		ESM.MailServerPassWord="test";//设定SMTP验证的密码
            
             		return ESM.Send();
             	}
             }
             ]]>
             </code>
             </example>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Send(System.String)">
            <summary>
            发送邮件方法
            </summary>
            <param name="smtpserver">smtp服务器信息，如"username:password@www.smtpserver.com:25"，也可去掉部分次要信息，如"www.smtpserver.com"</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.ESmtpMail.Send(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            发送邮件方法
            </summary>
            <param name="smtpserver">smtp服务器信息，如"username:password@www.smtpserver.com:25"，也可去掉部分次要信息，如"www.smtpserver.com"</param>
            <param name="from">发件人mail地址</param>
            <param name="fromname">发件人姓名</param>
            <param name="replyto">回复邮件地址</param>
            <param name="to">收件人地址</param>
            <param name="toname">收件人姓名</param>
            <param name="html">是否HTML邮件</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
            <remarks>11</remarks>
            <returns>bool</returns>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.MailDomain">
            <summary>
            邮件服务器域名和验证信息
            形如："user:pass@www.server.com:25"，也可省略次要信息。如"user:pass@www.server.com"或"www.server.com"
            </summary>	
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.MailDomainPort">
            <summary>
            邮件服务器端口号
            </summary>	
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.MailServerUserName">
            <summary>
            SMTP认证时使用的用户名
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.MailServerPassWord">
            <summary>
            SMTP认证时使用的密码
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.Priority">
            <summary>
            邮件发送优先级，可设置为"High","Normal","Low"或"1","3","5"
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.ErrorMessage">
            <summary>
            错误消息反馈
            </summary>		
        </member>
        <member name="P:Robin.EntLib.Common.Mail.ESmtpMail.Logs">
            <summary>
            服务器交互记录。
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Mail.SmtpMail">
            <summary>
            邮件可以通过 Microsoft Windows 2000 中内置的 SMTP 邮件服务或任意 SMTP 服务器来传送
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._charset">
            <summary>
            设定语言代码，默认设定为GB2312，如不需要可设置为""
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._from">
            <summary>
            发件人地址
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._fromName">
            <summary>
            发件人姓名
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.ReplyTo">
            <summary>
            回复邮件地址
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._recipientName">
            <summary>
            收件人姓名
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.Recipient">
            <summary>
            收件人列表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.mailserver">
            <summary>
            邮件服务器域名
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.mailserverport">
            <summary>
            邮件服务器端口号
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.username">
            <summary>
            SMTP认证时使用的用户名
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.password">
            <summary>
            SMTP认证时使用的密码
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.ESmtp">
            <summary>
            是否需要SMTP验证
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._html">
            <summary>
            是否Html邮件
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.Attachments">
            <summary>
            邮件附件列表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.priority">
            <summary>
            邮件发送优先级，可设置为"High","Normal","Low"或"1","3","5"
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._subject">
            <summary>
            邮件主题
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail._body">
            <summary>
            邮件正文
            </summary>		
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.RecipientBCC">
            <summary>
            密送收件人列表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.RecipientNum">
            <summary>
            收件人数量
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.recipientmaxnum">
            <summary>
            最多收件人数量
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.RecipientBCCNum">
            <summary>
            密件收件人数量
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.errmsg">
            <summary>
            错误消息反馈
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.tc">
            <summary>
            TcpClient对象，用于连接服务器
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.ns">
            <summary>
            NetworkStream对象
            </summary>	
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.logs">
            <summary>
            服务器交互记录
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.ErrCodeHT">
            <summary>
            SMTP错误代码哈希表
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Mail.SmtpMail.RightCodeHT">
            <summary>
            SMTP正确代码哈希表
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.#ctor">
            <summary>
            初始化 <see cref="T:Robin.EntLib.Common.Mail.SmtpMail" /> 类的新实例
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.AddAttachment(System.String[])">
            <summary>
            添加邮件附件
            </summary>
            <param name="FilePath">附件绝对路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.AddRecipient(System.String[])">
            <summary>
            添加一组收件人（不超过recipientmaxnum个），参数为字符串数组
            </summary>
            <param name="Recipients">保存有收件人地址的字符串数组（不超过recipientmaxnum个）</param>	
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Send">
            <summary>
            发送邮件方法，所有参数均通过属性设置。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Send(System.String)">
            <summary>
            发送邮件方法
            </summary>
            <param name="smtpserver">smtp服务器信息，如"username:password@www.smtpserver.com:25"，也可去掉部分次要信息，如"www.smtpserver.com"</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Send(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String)">
            <summary>
            发送邮件方法
            </summary>
            <param name="smtpserver">smtp服务器信息，如"username:password@www.smtpserver.com:25"，也可去掉部分次要信息，如"www.smtpserver.com"</param>
            <param name="from">发件人mail地址</param>
            <param name="fromname">发件人姓名</param>
            <param name="to">收件人地址</param>
            <param name="toname">收件人姓名</param>
            <param name="html">是否HTML邮件</param>
            <param name="subject">邮件主题</param>
            <param name="body">邮件正文</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.AddRecipient(System.String)">
            <summary>
            添加一个收件人
            </summary>	
            <param name="Recipients">收件人地址</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.SMTPCodeAdd">
            <summary>
            SMTP回应代码哈希表
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Base64Encode(System.String)">
            <summary>
            将字符串编码为Base64字符串
            </summary>
            <param name="str">要编码的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Base64Decode(System.String)">
            <summary>
            将Base64字符串解码为普通字符串
            </summary>
            <param name="str">要解码的字符串</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.GetStream(System.String)">
            <summary>
            得到上传附件的文件流
            </summary>
            <param name="FilePath">附件的绝对路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.SendCommand(System.String)">
            <summary>
            发送SMTP命令
            </summary>	
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.RecvResponse">
            <summary>
            接收SMTP服务器回应
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Dialog(System.String,System.String)">
            <summary>
            与服务器交互，发送一条命令并接收回应。
            </summary>
            <param name="str">一个要发送的命令</param>
            <param name="errstr">如果错误，要反馈的信息</param>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.Dialog(System.String[],System.String)">
            <summary>
            与服务器交互，发送一组命令并接收回应。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Mail.SmtpMail.SendEmail">
            <summary>
            SendEmail
            </summary>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.Subject">
            <summary>
            邮件主题
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.Body">
            <summary>
            邮件正文
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.From">
            <summary>
            发件人地址
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.Charset">
            <summary>
            设定语言代码，默认设定为GB2312，如不需要可设置为""
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.FromName">
            <summary>
            发件人姓名
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.RecipientName">
            <summary>
            收件人姓名
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.MailDomain">
            <summary>
            邮件服务器域名和验证信息
            形如："user:pass@www.server.com:25"，也可省略次要信息。如"user:pass@www.server.com"或"www.server.com"
            </summary>	
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.MailDomainPort">
            <summary>
            邮件服务器端口号
            </summary>	
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.MailServerUserName">
            <summary>
            SMTP认证时使用的用户名
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.MailServerPassWord">
            <summary>
            SMTP认证时使用的密码
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.Priority">
            <summary>
            邮件发送优先级，可设置为"High","Normal","Low"或"1","3","5"
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.Html">
            <summary>
             是否Html邮件
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.ErrorMessage">
            <summary>
            错误消息反馈
            </summary>		
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.Logs">
            <summary>
            服务器交互记录，如发现本组件不能使用的SMTP服务器，请将出错时的Logs发给我（lion-a@sohu.com），我将尽快查明原因。
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Mail.SmtpMail.RecipientMaxNum">
            <summary>
            最多收件人数量
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Number">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.BigInteger">
            <summary>
            
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.BigInteger.ival">
            All integers are stored in 2's-complement form.
            If words == null, the ival is the value of this BigInteger.
            Otherwise, the first ival elements of words make the value
            of this BigInteger, stored in little-endian order, 2's-complement form. 
        </member>
        <member name="F:Robin.EntLib.Common.BigInteger.minFixNum">
            We pre-allocate integers in the range minFixNum..maxFixNum. 
        </member>
        <!-- 对于成员“F:Robin.EntLib.Common.BigInteger.k”忽略有格式错误的 XML 注释 -->
        <member name="M:Robin.EntLib.Common.BigInteger.SetAdd(Robin.EntLib.Common.BigInteger,System.Int32)">
            Set this to the sum of x and y.
            OK if x==this. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.SetAdd(System.Int32)">
            Destructively add an int to this. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Set(System.Int64)">
            Destructively set the value of this to a long. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Set(System.Int32[],System.Int32)">
            Destructively set the value of this to the given words.
            The words array is reused, not copied. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Set(Robin.EntLib.Common.BigInteger)">
            Destructively set the value of this to that of y. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.CheckBits(System.Int32)">
            Return true if any of the lowest n bits are one.
            (false if n is negative).  
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.RoundToDouble(System.Int32,System.Boolean,System.Boolean)">
            Convert a semi-processed BigInteger to double.
            Number must be non-negative.  Multiplies by a power of two, applies sign,
            and converts to double, with the usual java rounding.
            @param exp power of two, positive or negative, by which to multiply
            @param neg true if negative
            @param remainder true if the BigInteger is the result of a truncating
            division that had non-zero remainder.  To ensure proper rounding in
            this case, the BigInteger must have at least 54 bits.  
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.GetAbsolute(System.Int32[])">
            Copy the abolute value of this into an array of words.
            Assumes words.length >= (this.words == null ? 1 : this.ival).
            Result is zero-extended, but need not be a valid 2's complement number.
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.SetNegative(Robin.EntLib.Common.BigInteger)">
            Destructively set this to the negative of x.
            It is OK if x==this.
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.SetNegative">
            Destructively negate this. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Pow(System.Int32)">
            Calculate the integral power of a BigInteger.
            @param exponent the exponent (must be non-negative)
        </member>
        <!-- 对于成员“M:Robin.EntLib.Common.BigInteger.IsProbablePrime(System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:Robin.EntLib.Common.BigInteger.And(Robin.EntLib.Common.BigInteger)">
            Return the logical (bit-wise) "and" of two BigIntegers. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Or(Robin.EntLib.Common.BigInteger)">
            Return the logical (bit-wise) "(inclusive) or" of two BigIntegers. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.XOr(Robin.EntLib.Common.BigInteger)">
            Return the logical (bit-wise) "exclusive or" of two BigIntegers. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Not">
            Return the logical (bit-wise) negation of a BigInteger. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.ConvertToIntArray(System.Byte[],System.Int32)">
            Convert a big-endian byte array to a little-endian array of words. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Alloc(System.Int32)">
            Allocate a new non-shared BigInteger.
            @param nwords number of words to allocate
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Realloc(System.Int32)">
            Change words.length to nwords.
            We allow words.length to be upto nwords+2 without reallocating.
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Make(System.Int32[],System.Int32)">
            Make a canonicalized BigInteger from an array of words.
            The array may be reused (without copying). 
        </member>
        <!-- 对于成员“M:Robin.EntLib.Common.BigInteger.WordsNeeded(System.Int32[],System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:Robin.EntLib.Common.BigInteger.Add(System.Int32,System.Int32)">
            Add two ints, yielding a BigInteger. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Add(Robin.EntLib.Common.BigInteger,System.Int32)">
            Add a BigInteger and an int, yielding a new BigInteger. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Add(Robin.EntLib.Common.BigInteger,Robin.EntLib.Common.BigInteger,System.Int32)">
            Add two BigIntegers, yielding their sum as another BigInteger. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Divide(Robin.EntLib.Common.BigInteger,Robin.EntLib.Common.BigInteger,Robin.EntLib.Common.BigInteger,Robin.EntLib.Common.BigInteger,System.Int32)">
            Divide two integers, yielding quotient and remainder.
            @param x the numerator in the division
            @param y the denominator in the division
            @param quotient is set to the quotient of the result (iff quotient!=null)
            @param remainder is set to the remainder of the result
             (iff remainder!=null)
            @param rounding_mode one of FLOOR, CEILING, TRUNCATE, or ROUND.
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.GCD(System.Int32,System.Int32)">
            Calculate Greatest Common Divisor for non-negative ints. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.Negate(System.Int32[],System.Int32[],System.Int32)">
            Set dest[0:len-1] to the negation of src[0:len-1].
            Return true if overflow (i.e. if src is -2**(32*len-1)).
            Ok for src==dest. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.SwappedOp(System.Int32)">
            Return the boolean opcode (for bitOp) for swapped operands.
            I.e. bitOp(swappedOp(op), x, y) == bitOp(op, y, x).
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.BitOp(System.Int32,Robin.EntLib.Common.BigInteger,Robin.EntLib.Common.BigInteger)">
            Do one the the 16 possible bit-wise operations of two BigIntegers. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.SetBitOp(Robin.EntLib.Common.BigInteger,System.Int32,Robin.EntLib.Common.BigInteger,Robin.EntLib.Common.BigInteger)">
            Do one the the 16 possible bit-wise operations of two BigIntegers. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.And(Robin.EntLib.Common.BigInteger,System.Int32)">
            Return the logical (bit-wise) "and" of a BigInteger and an int. 
        </member>
        <member name="M:Robin.EntLib.Common.BigInteger.ValueOf(System.Int64)">
            Return a (possibly-shared) BigInteger with a given long value. 
        </member>
        <!-- 对于成员“P:Robin.EntLib.Common.BigInteger.BitLength”忽略有格式错误的 XML 注释 -->
        <member name="P:Robin.EntLib.Common.BigInteger.BitCount">
            Count one bits in a BigInteger.
            If argument is negative, count zero bits instead. 
        </member>
        <member name="T:Robin.EntLib.Common.BigNumber">
            <summary>
             Extends <see cref="T:Robin.EntLib.Common.BigDecimal"/> to allow a number to be positive 
             infinity, negative infinity and not-a-number.
            </summary>
             <remarks>
             This provides compatibility with float and double types.
             </remarks>
        </member>
        <member name="F:Robin.EntLib.Common.BigNumber.NegativeInfinity">
            <summary>
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.BigNumber.PositiveInfinity">
            <summary>
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.BigNumber.NaN">
            <summary>
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.BigNumber.big_decimal">
            <summary>
            The BigDecimal representation.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.BigNumber.byte_count">
            <summary>
            If this can be represented as an int or long, this contains the number
            of bytes needed to represent the number.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.BigNumber.long_representation">
            <summary>
            A 'long' representation of this number.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.#ctor(Robin.EntLib.Common.NumberState,Robin.EntLib.Common.BigDecimal)">
            <summary>
             Constructs the number.
            </summary>
            <param name="number_state"></param>
            <param name="big_decimal"></param>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToByteArray">
            <summary>
             Returns this number as a byte array (unscaled).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToDouble">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToSingle">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToInt64">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToInt32">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToInt16">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToByte">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.ToBigDecimal">
            <summary>
             Returns the big number as a <see cref="T:Robin.EntLib.Common.BigDecimal"/> object.
            </summary>
            <returns></returns>
            <exception cref="T:System.ArithmeticException">
             If this number represents NaN, +Inf or -Inf.
             </exception>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.CompareTo(Robin.EntLib.Common.BigNumber)">
            Compares this BigNumber with the given BigNumber.  Returns 0 if the values
            are equal, >0 if this is greater than the given value, and &lt; 0 if this
            is less than the given value.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Equals(System.Object)">
            The equals comparison uses the BigDecimal 'equals' method to compare
            values.  This means that '0' is NOT equal to '0.0' and '10.0' is NOT equal
            to '10.00'.  Care should be taken when using this method.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.BitWiseOr(Robin.EntLib.Common.BigNumber)">
            <summary>
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Add(Robin.EntLib.Common.BigNumber)">
            <summary>
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Subtract(Robin.EntLib.Common.BigNumber)">
            <summary>
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Multiply(Robin.EntLib.Common.BigNumber)">
            <summary>
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Divide(Robin.EntLib.Common.BigNumber)">
            <summary>
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Abs">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Signum">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.SetScale(System.Int32,Robin.EntLib.Common.DecimalRoundingMode)">
            <summary>
            </summary>
            <param name="d"></param>
            <param name="round_enum"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.Sqrt">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromDouble(System.Double)">
            Creates a BigNumber from a double.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromFloat(System.Single)">
            Creates a BigNumber from a float.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromLong(System.Int64)">
            Creates a BigNumber from a long.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromInt(System.Int32)">
            Creates a BigNumber from an int.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromString(System.String)">
            Creates a BigNumber from a string.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromBigDecimal(Robin.EntLib.Common.BigDecimal)">
            Creates a BigNumber from a BigDecimal.
        </member>
        <member name="M:Robin.EntLib.Common.BigNumber.fromData(System.Byte[],System.Int32,Robin.EntLib.Common.NumberState)">
            Creates a BigNumber from the given data.
        </member>
        <member name="P:Robin.EntLib.Common.BigNumber.CanBeLong">
            <summary>
             Returns true if this BigNumber can be represented by a 64-bit long (has
             no scale).
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.BigNumber.CanBeInt">
            <summary>
             Returns true if this BigNumber can be represented by a 32-bit int (has
             no scale).
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.BigNumber.Scale">
            <summary>
             Returns the scale of this number, or -1 if the number has no scale (if
             it -inf, +inf or NaN).
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.BigNumber.State">
            <summary>
             Returns the state of this number.
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.BigNumber.InverseState">
            <summary>
            Returns the inverse of the state.
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.ByteBuffer">
            <summary>
            A wrapper for an array of <see cref="T:System.Byte"/>.
            </summary>
            <remarks>
            This provides various functions for altering the state of 
            the buffer.
            </remarks>
        </member>
        <member name="F:Robin.EntLib.Common.ByteBuffer.buf">
            <summary>
            The wrapped byte array itself.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.ByteBuffer.pos">
            <summary>
            The current position in the array.
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.ByteBuffer.length">
            <summary>
            The length of the buf array.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Constructs the buffer.
            </summary>
            <param name="buf"></param>
            <param name="offset"></param>
            <param name="length"></param>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.#ctor(System.Byte[])">
            <summary>
            
            </summary>
            <param name="buf"></param>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a byte array into the buffer.
            </summary>
            <param name="b"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.Write(System.Byte[])">
            <summary>
            
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.Write(Robin.EntLib.Common.ByteBuffer)">
            <summary>
            Writes a ByteBuffer in to this buffer.
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a byte array from the buffer.
            </summary>
            <param name="b"></param>
            <param name="offset"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.WriteInteger(System.Int32)">
            <summary>
            Writes an integer into the buffer at the current position.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.ReadInt4">
            <summary>
            Reads an integer from the buffer at the current position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.WriteByte(System.Byte)">
            <summary>
            Writes a byte into the buffer at the current position.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.ReadByte">
            <summary>
            Reads a byte from the buffer at the current position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.WriteInt2(System.Int16)">
            <summary>
            Writes a short into the buffer at the current position.
            </summary>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.ReadInt2">
            <summary>
            Reads a short from the buffer at the current position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.WriteInteger(System.Int32,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="arr"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.ReadChar(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="arr"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.WriteChar(System.Char,System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="arr"></param>
            <param name="offset"></param>
        </member>
        <member name="M:Robin.EntLib.Common.ByteBuffer.URShift(System.Int32,System.Int32)">
            <summary>
            Operates a shift on the given integer by the number of bits specified.
            </summary>
            <param name="number">The number to shift.</param>
            <param name="bits">The number of bits to shift the given number.</param>
            <returns>
            Returns an <see cref="T:System.Int32">int</see> representing the shifted
            number.
            </returns>
        </member>
        <member name="P:Robin.EntLib.Common.ByteBuffer.Position">
            <summary>
            Gets or sets the position in to the buffer.
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.ByteBuffer.Length">
            <summary>
            Returns the length of this buffer.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.MPN.Add1(System.Int32[],System.Int32[],System.Int32,System.Int32)">
            Add x[0:size-1] and y, and Write the size least
            significant words of the result to dest.
            Return carry, either 0 or 1.
            All values are unsigned.
            This is basically the same as gmp's mpn_add_1. 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.AddN(System.Int32[],System.Int32[],System.Int32[],System.Int32)">
            Add x[0:len-1] and y[0:len-1] and Write the len least
            significant words of the result to dest[0:len-1].
            All words are treated as unsigned.
            @return the carry, either 0 or 1
            This function is basically the same as gmp's mpn_add_n.
        </member>
        <member name="M:Robin.EntLib.Common.MPN.SubtractN(System.Int32[],System.Int32[],System.Int32[],System.Int32)">
            Subtract Y[0:size-1] from X[0:size-1], and Write
            the size least significant words of the result to dest[0:size-1].
            Return borrow, either 0 or 1.
            This is basically the same as gmp's mpn_sub_n function.
        </member>
        <member name="M:Robin.EntLib.Common.MPN.Multiply1(System.Int32[],System.Int32[],System.Int32,System.Int32)">
            Multiply x[0:len-1] by y, and Write the len least
            significant words of the product to dest[0:len-1].
            Return the most significant word of the product.
            All values are treated as if they were unsigned
            (i.e. masked with 0xffffffffL).
            OK if dest==x (not sure if this is guaranteed for mpn_mul_1).
            This function is basically the same as gmp's mpn_mul_1.
        </member>
        <member name="M:Robin.EntLib.Common.MPN.Multiply(System.Int32[],System.Int32[],System.Int32,System.Int32[],System.Int32)">
            Multiply x[0:xlen-1] and y[0:ylen-1], and
            Write the result to dest[0:xlen+ylen-1].
            The destination has to have space for xlen+ylen words,
            even if the result might be one limb smaller.
            This function requires that xlen >= ylen.
            The destination must be distinct from either input operands.
            All operands are unsigned.
            This function is basically the same gmp's mpn_mul. 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.DivideMod1(System.Int32[],System.Int32[],System.Int32,System.Int32)">
            Divide divident[0:len-1] by (unsigned int)divisor.
            Write result into quotient[0:len-1.
            Return the one-word (unsigned) remainder.
            OK for quotient==dividend.
        </member>
        <member name="M:Robin.EntLib.Common.MPN.Divide(System.Int32[],System.Int32,System.Int32[],System.Int32)">
            Divide zds[0:nx] by y[0:ny-1].
            The remainder ends up in zds[0:ny-1].
            The quotient ends up in zds[ny:nx].
            Assumes:  nx>ny.
            (int)y[ny-1] &lt; 0  (i.e. most significant bit set)
        </member>
        <member name="M:Robin.EntLib.Common.MPN.GetCharsPerWord(System.Int32)">
            Number of digits in the conversion base that always fits in a word.
            For example, for base 10 this is 9, since 10**9 is the
            largest number that fits into a words (assuming 32-bit words).
            This is the same as gmp's __mp_bases[radix].chars_per_limb.
            @param radix the base
            @return number of digits 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.CountLeadingZeros(System.Int32)">
            Count the number of leading zero bits in an int. 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.Compare(System.Int32[],System.Int32[],System.Int32)">
            Compare x[0:size-1] with y[0:size-1], treating them as unsigned integers.
            @result -1, 0, or 1 depending on if x&lt;y, x==y, or x&gt;y.
            This is basically the same as gmp's mpn_cmp function.
        </member>
        <member name="M:Robin.EntLib.Common.MPN.Compare(System.Int32[],System.Int32,System.Int32[],System.Int32)">
            Compare x[0:xlen-1] with y[0:ylen-1], treating them as unsigned integers.
            
            @return -1, 0, or 1 depending on if x&lt;y, x==y, or x&gt;y.
        </member>
        <member name="M:Robin.EntLib.Common.MPN.RShift(System.Int32[],System.Int32[],System.Int32,System.Int32,System.Int32)">
            Shift x[x_start:x_start+len-1] count bits to the "right"
            (i.e. divide by 2**count).
            Store the len least significant words of the result at dest.
            The bits shifted out to the right are returned.
            OK if dest==x.
            Assumes: 0 &lt; count &lt; 32
        </member>
        <member name="M:Robin.EntLib.Common.MPN.RShift0(System.Int32[],System.Int32[],System.Int32,System.Int32,System.Int32)">
            Shift x[x_start:x_start+len-1] count bits to the "right"
            (i.e. divide by 2**count).
            Store the len least significant words of the result at dest.
            OK if dest==x.
            Assumes: 0 &lt;= count &lt; 32
            Same as rshift, but handles count==0 (and has no return value).
        </member>
        <member name="M:Robin.EntLib.Common.MPN.RShiftLong(System.Int32[],System.Int32,System.Int32)">
            Return the long-truncated value of right shifting.
            @param x a two's-complement "bignum"
            @param len the number of significant words in x
            @param count the shift count
            @return (long)(x[0..len-1] &gt;&gt; count).
        </member>
        <member name="M:Robin.EntLib.Common.MPN.FindLowestBit(System.Int32)">
            Return least i such that word &amp; (1&lt;&lt;i). Assumes word!=0. 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.FindLowestBit(System.Int32[])">
            Return least i such that words &amp; (1&lt;&lt;i). Assumes there is such an i. 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.GCD(System.Int32[],System.Int32[],System.Int32)">
            Calculate Greatest Common Divisior of x[0:len-1] and y[0:len-1].
            Assumes both arguments are non-zero.
            Leaves result in x, and returns len of result.
            Also destroys y (actually sets it to a copy of the result). 
        </member>
        <member name="M:Robin.EntLib.Common.MPN.GetIntLength(System.Int32[],System.Int32)">
            Calcaulte the Common Lisp "integer-length" function.
            Assumes input is canonicalized:  len==BigInteger.WordsNeeded(words,len) 
        </member>
        <member name="T:Robin.EntLib.Common.NullConvert">
             <summary>
            
             </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.IsNoE(System.Object)">
            <summary>
            Checks if value is null or empty.
            Returns true if v is null or DBNull, or empty string or empty GUID.
            Returns false otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.IsNullOrEmpty(System.Object)">
            <summary>
            Returns true if v is null or DBNull, or empty string or empty GUID.
            Returns false otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.Coalesce(System.Object[])">
            <summary>
            Returns the first non-null value in the argument list.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.Coalesce(System.String[])">
            <summary>
            Returns null if v is null or DBNull.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToObject(System.Object)">
            <summary>
            Returns null if v is null or DBNull.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToString(System.Object)">
            <summary>
            Returns null if v is null or DBNull, converts to string otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToString(System.Object,System.String)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to string otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToInt16(System.Object,System.Int16)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Int16 otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToInt32(System.Object,System.Int32)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Int32 otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToInt64(System.Object,System.Int64)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Int64 otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToBoolean(System.Object,System.Boolean)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Bool otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToBoolean(System.Object,System.Int32)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Bool otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToByte(System.Object,System.Byte)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Byte otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToDateTime(System.Object,System.DateTime)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to DateTime otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToSingle(System.Object,System.Single)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Single otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToDouble(System.Object,System.Double)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Double otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToDecimal(System.Object,System.Decimal)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Decimal otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToGuid(System.Object,System.Guid)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to Guid otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToEnum(System.Object,System.Object)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to given enumType otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToEnum(System.Type,System.Object,System.Object)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to given enumType otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.ToChar(System.Object,System.Char)">
            <summary>
            Returns defaultValue is v is null or DBNull, converts to char otherwise.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.To``1(System.Object)">
            <summary>
            Special version for generic nullable types, which don't handle
            DBNull at all.
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Object)">
            <summary>
            Returns DBNull if v is null, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.String)">
            <summary>
            Returns DBNull if v is null;
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Array)">
            <summary>
            Returns DBNull if v is null, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Int16,System.Int16)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Int32,System.Int32)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Int64,System.Int64)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Boolean,System.Boolean)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Byte,System.Byte)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.DateTime,System.DateTime)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Single,System.Single)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Double,System.Double)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Decimal,System.Decimal)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Guid,System.Guid)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From(System.Char,System.Char)">
            <summary>
            Returns DBNull if v is conventional null value, or v otherwise
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.NullConvert.From``1(``0)">
            <summary>
            Special version for generic nullable types, which don't handle
            DBNull at all.
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Resource.IResourceManager">
            <summary>
            IResourceManage 的摘要说明。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.IResourceManager.GetBool(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为 bool。 字符串 "1" 或者 "true" 映射为布尔值true，其他为布尔值false。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.IResourceManager.GetInt32(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为int类型数据。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.IResourceManager.GetInt64(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为long类型数据。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.IResourceManager.GetString(System.String)">
            <summary>
            按资源名称返回给定的资源。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.IResourceManager.GetDouble(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为double类型数据。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.IResourceManager.GetEnum``1(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为枚举成员实例。  
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Robin.EntLib.Common.Resource.IResourceManager.Item(System.String,System.Object[])">
            <summary>
            按主键和参数列表得到一个资源对象,返回的资源对象的变量被替换为的参数列表中的数据。
            </summary>
            <value>被替换后变量后的字符串资源。</value>
            <remarks>
            	<para>镶入的标记使用格式为： <c>{n}</c>， 他将按顺序被 <c>args</c> 参数中的参数替换。</para>
            	<para>如果给出的Key 没有匹配，将返回 null。</para>
            	<para>除非给定 CultureInfo 属性，否则将使用系统默认的语言资源。</para>
            </remarks>
            <example>
            这个例子演示了按配置名称得到一个字符串并替换相关变量。
            <code>
            public string GetReplaceMessage()
            {
            	IResourceManager rm = ResourceFactory.GetResourceManager("Message Resource Manager");
            	string replaceString = "Stevenage";
            	string s = rm["MSG_HELLO_WORLD", replaceString];
            	return s;
            }
            </code>
            如果资源文件中 MSG_HELLO_WORLD 对用的资源字符串为：  "Hello {0}", 那么将返回 "Hello Stevenage"。
            </example>
        </member>
        <member name="P:Robin.EntLib.Common.Resource.IResourceManager.Item(System.String,System.Type)">
            <summary>
            按资源主键名称返回给定类型的资源对象。
            </summary>
            <value>资源对象。</value>
            <remarks>
            	<para>如果给定的资源主键和类型没有匹配项，将返回null。</para>
            	<para>除非给定 CultureInfo 属性，否则将使用系统默认的语言资源。</para>
            </remarks>
            <example>
            这个例子演示了从资源里获取一个int类型的数据。
            <code>
            public int GetResourceFlag()
            {
            	IResourceManager rm = ResourceFactory.GetResourceManager("Object Resource Manager");
            	Object o = rm["INT_MAX_MESSAGE_LENGTH", System.Int32];
            	if(o !=null ) return int(o);
            	else return o;
            }
            </code>
            </example>
        </member>
        <member name="P:Robin.EntLib.Common.Resource.IResourceManager.Item(System.String)">
            <summary>
            按主键名称获取Key。
            </summary>
            <value>返回的字符串资源。</value>
            <remarks>
            	<para>如果给定的资源主键没有匹配项，将返回null。</para>
            	<para>除非给定 CultureInfo 属性，否则将使用系统默认的语言资源。</para>
            </remarks>
            <example>
            这个例子演示了如何由一个主键得到对应的资源。
            <code>
            public string GetMessage()
            {
            	ResourceManager rm = ResourceFactory.GetResourceManager("Resource Manager");
            	string s = rm["MSG_HELLO_WORLD"];
            	return s;
            }
            </code>
            返回一个字符串，如 "Hello World"。
            </example>
        </member>
        <member name="P:Robin.EntLib.Common.Resource.IResourceManager.CultureInfo">
            <summary>
            得到或者设置资源信息。
            </summary>
            <value>资源 <see cref="T:System.Globalization.CultureInfo"/> 对象。</value>
            <remarks>设置资源对象后ResourceManager将返回和语言类型对应的资源。</remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Resource.ResourceManager">
            <summary>
            资源管理类。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManager.GetBool(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为 bool。 字符串 "1" 或者 "true" 映射为布尔值true，其他为布尔值false。
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManager.GetInt32(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为int类型数据。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManager.GetInt64(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为long类型数据。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManager.GetString(System.String)">
            <summary>
            按资源名称返回给定的资源。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManager.GetDouble(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为double类型数据。  
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManager.GetEnum``1(System.String)">
            <summary>
            按资源名称返回给定的资源,并转换字符串为枚举成员实例。  
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Resource.ResourceManagerFactory">
            <summary>
            资源管理模块工厂。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManagerFactory.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceManagerFactory.GetResourceManager(System.String,System.String)">
            <summary>
            按资源名称得到对应的资源。
            </summary>
            <param name="containerName">资源的父容器名称，可以是一个文件夹路径（ c:\Mine）或者是一个dll(c:\Mine\MySql.dll)文件的完整路径。
            如果为空，将取当前应用程序集路径里的资源</param>
            <param name="resourceManagerName">资源的名称。</param>
            <returns>请求的资源实例.</returns>
            <example>
            <code>
             // 取得当前程序目录下 testr
             IResourceManager rm = Robin.EntLib.Common.Resource.ResourceManagerFactory.GetResourceManager("Resource","testr");
             string a = rm["conn"];
            </code>
            </example>
            <remarks>
            当直接访问 .resources 文件来指定包含松耦合 .resources 文件的目录时。
            不必将所有资源文件都存储在单独的子目录中，因为您将根据这些资源文件所表示的区域性为其指定不同的名称。
            种较好的做法是将应用程序的所有资源放置在主应用程序目录的单个子目录中。上面的示例中就把所有资源文件放到应用程序的Resource目录下。
            <br></br>
            </remarks>
        </member>
        <member name="T:Robin.EntLib.Common.Resource.ResourceProvider">
            <summary>
            资源管理对象创建者。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceProvider.GetResourceManager(System.String,System.String)">
            <summary>
            得到Assembly中的资源。
            </summary>
            <returns>默认的资源实例。.</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Resource.ResourceProvider.GetBinaryManager(System.String,System.String)">
            <summary>
            得到二进制文件中的资源。
            </summary>
            <param name="resourcePathName"></param>
            <param name="resourceBaseName"></param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Security.CRC32">
            <summary>   
            CRC 效验快速检测算法 。  
            </summary>   
        </member>
        <member name="M:Robin.EntLib.Common.Security.CRC32.#ctor">
            <summary>   
            初始化效验表。  
            </summary>   
        </member>
        <member name="M:Robin.EntLib.Common.Security.CRC32.ByteCRC(System.Byte[]@)">
            <summary>   
            字节数组效验   
            </summary>   
            <param name="buffer">ref 字节数组</param>   
            <returns></returns>   
        </member>
        <member name="M:Robin.EntLib.Common.Security.CRC32.StringCRC(System.String)">
            <summary>   
            字符串效验   
            </summary>   
            <param name="sInputString">字符串</param>   
            <returns></returns>   
        </member>
        <member name="M:Robin.EntLib.Common.Security.CRC32.FileCRC(System.String)">
            <summary>   
            文件效验   
            </summary>   
            <param name="sInputFilename">输入文件</param>   
            <returns></returns>   
        </member>
        <member name="T:Robin.EntLib.Common.Security.DES">
            <summary>
            简单DES 对称加解密类(密码为不长于8位字符和数字的组合)。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.ModifyDesKey(System.String)">
            <summary>
            修正加密密钥
            </summary>
            <example>
            <code>
            string key = "sdfkjds";
            string en = Encrypt("abcd", key);
            string de = Decrypt(en, key);
            FileEncrypt(@"E:\SRC\Common\Common\bin\Debug\a.xml", @"E:\SRC\Common\Common\bin\Debug\b.xml", key);
            FileDecrypt(@"E:\SRC\Common\Common\bin\Debug\b.xml", @"E:\SRC\Common\Common\bin\Debug\c.xml", key);
            </code>
            </example>
            <param name="key">原始密钥</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.Encrypt(System.Byte[],System.String)">
            <summary>
            DES 加密
            </summary>
            <param name="data">byte 数组</param>
            <param name="key">密钥</param>
            <returns>已加密数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.Encrypt(System.String,System.String)">
            <summary>
            DES 加密
            </summary>
            <param name="s">字符串</param>
            <param name="key">密钥</param>
            <returns>已加密字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.Decrypt(System.Byte[],System.String)">
            <summary>
            DES 解密
            </summary>
            <param name="data">加密的 byte 数组</param>
            <param name="key">密钥</param>
            <returns>已解密数组</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.Decrypt(System.String,System.String)">
            <summary>
            DES 解密
            </summary>
            <param name="s">加密的字符串</param>
            <param name="key">密钥</param>
            <returns>已解密字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.FileEncrypt(System.String,System.String,System.String)">
            <summary>
            DES加密文件
            </summary>
            <param name="inputFilePath">源文件路径</param>
            <param name="outFilePath">输出文件路径</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.FileEncrypt(System.String,System.String)">
            <summary>
            DES加密文件
            </summary>
            <param name="inputFilePath">源文件路径</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.FileDecrypt(System.String,System.String,System.String)">
            <summary>
            解密文件
            </summary>
            <param name="inputFilePath">加密了的文件路径</param>
            <param name="outFilePath">输出文件路径</param>
            <param name="key">密钥</param>
        </member>
        <member name="M:Robin.EntLib.Common.Security.DES.FileDecrypt(System.String,System.String)">
            <summary>
            解密文件。
            </summary>
            <param name="inputFilePath">加密了的文件路径</param>
            <param name="key">密钥</param>
        </member>
        <member name="T:Robin.EntLib.Common.Security.MD5">
            <summary>
            MD5  哈希算法加密。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.MD5.Encrypt(System.String)">
            <summary>
            md5加密。
            </summary>
            <param name="s">需要加密的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.MD5.EncryptFile(System.String)">
            <summary>   
            获取文件的特征串   
            </summary>   
            <param name="sInputFilename">输入文件</param>   
            <returns></returns>   
        </member>
        <member name="T:Robin.EntLib.Common.Security.RSA">
            <summary>
            RSA
            </summary>
            <remarks>
            RSA会产生一对密钥，其中私钥用于解密数据和对数据进行签名，而公钥一般对外分发，用于加密数据或验证签名。
            </remarks>
            <example>
            1. 生成密钥文件
            <code>
            RSA rsa = new RSA();
            rsa.SaveKeyToFile(); // 会在程序集目录下生成密钥对文件(key.xml 包含公钥和私钥)和公钥文件(PublicKey.xml)
            </code>
            2. 加解密
            <code>
            RSA rsa = new RSA("publickey.xml"); // 载入公钥文件
            string s = rsa.Encrypt("Hello, 中国！"); // 加密
            
            RSA rsa2 = new RSA("key.xml"); // 载入私钥文件
            string s2 = rsa2.Decrypt(s); // 解密
            
            Console.WriteLine("s:{0}\ns2:{1}", s, s2); 
            
            string sign = rsa2.Sign("Hello, 中国！"); // 使用私钥获取签名
            bool b = rsa.Verify("Hello, 中国！", sign); // 使用公钥验证签名
            
            Console.WriteLine("sign:{0}\nVerify:{1}", sign, b);
            </code>
            </example>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.#ctor">
            <summary>
            构造方法。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.#ctor(System.String)">
            <summary>
            构造方法。
            </summary>
            <param name="keyfile">密钥文件名</param>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.LoadKeyFromFile(System.String)">
            <summary>
            载入密钥文件。
            </summary>
            <param name="filename">密钥文件(key.xml or publickey.xml)</param>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.SaveKeyToFile">
            <summary>
            保存密钥到XML文件
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.SaveKeyToFile(System.String)">
            <summary>
            保存密钥到XML文件。
            </summary>
            <param name="path">保存路径</param>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.EncryptData(System.Byte[])">
            <summary>
            使用公钥进行加密。
            </summary>
            <param name="data">待加密Byte数组。</param>
            <returns>加密后的Byte数组。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.DecryptData(System.Byte[])">
            <summary>
            使用私钥进行解密。
            </summary>
            <param name="data">待解密的Byte数组。</param>
            <returns>解密后的Byte数组。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.Encrypt(System.String)">
            <summary>
            使用公钥进行加密。
            </summary>
            <param name="s">待加密的字符串。</param>
            <returns>经Base64转换的加密字符串。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.Decrypt(System.String)">
            <summary>
            使用私钥进行解密。
            </summary>
            <param name="s">待解密的Base64加密字符串。</param>
            <returns>解密后的字符串。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.SignData(System.Byte[])">
            <summary>
            使用私钥进行签名。
            </summary>
            <param name="data">待签名的Byte数组。</param>
            <returns>签名Byte数组。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.VerifyData(System.Byte[],System.Byte[])">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="data">待验证的Byte数组</param>
            <param name="sign">签名Byte数组</param>
            <returns>true: 签名正确; false: 签名错误。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.Sign(System.String)">
            <summary>
            使用私钥进行签名。
            </summary>
            <param name="s">待签名的字符串</param>
            <returns>经Base64转换的签名字符串</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.RSA.Verify(System.String,System.String)">
            <summary>
            使用公钥验证签名
            </summary>
            <param name="s">待验证的字符串</param>
            <param name="sign">经Base64转换的签名字符串</param>
            <returns>true: 签名正确; false: 签名错误。</returns>
        </member>
        <member name="P:Robin.EntLib.Common.Security.RSA.Key">
            <summary>
            密钥对(公钥&amp;私钥)
            </summary>
        </member>
        <member name="P:Robin.EntLib.Common.Security.RSA.PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Security.SecurityHepler">
            <summary>
            安全处理相关函数
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.DecodeHtml(System.String)">
            <summary>
            恢复html中的特殊字符。
            </summary>
            <param name="html">需要恢复的文本。</param>
            <returns>恢复好的文本。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.EncodeHtml(System.String)">
            <summary>
            替换html中的特殊字符。
            </summary>
            <param name="html">需要进行替换的文本。</param>
            <returns>替换完的文本。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.XMLEncode(System.String)">
            <summary>
            替换html中的特殊字符。
            </summary>
            <param name="xml">需要进行替换的文本。</param>
            <returns>替换完的文本。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.XMLDecode(System.String)">
            <summary>
            替换html中的特殊字符。
            </summary>
            <param name="xml">需要进行替换的文本。</param>
            <returns>替换完的文本。</returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.CheckSql(System.String)">
            <summary>
             验证纯查询语句的合法性()语句应该不包含 DELETE  EXEC UPDATE CREATE 
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.FilterWhereInfo(System.String)">
            <summary>
            过滤 Sql Where 语句字符串中的注入脚本,但是不会转义单引号，一般用于完整的Where字句，语句中不能包含 delete insert 等关键字 。
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.FilterSql(System.String)">
            <summary>
            过滤 Sql 语句字符串中的注入脚本
            </summary>
            <param name="source">传入的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.EncodeToHtml(System.String)">
            <summary>
            对字符串进行HTML编码，针对(input,Textarea)输入时过滤脚本及HTML编码
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.DecodeFormHtml(System.String)">
            <summary>
            还原HTML编码为字符串，用于返回到input或 Textarea 输入框
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SecurityHepler.FilterToNumber(System.String)">
            <summary>
            过滤字符串只剩数字
            </summary>
            <param name="source">源字符串</param>
        </member>
        <member name="T:Robin.EntLib.Common.Security.SHA">
            <summary>
            SHA  哈希算法加密。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SHA.SHA1(System.String)">
            <summary>
            SHA加密。
            </summary>
            <param name="s">需要加密的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SHA.SHA256(System.String)">
            <summary>
             SHA256 加密。
            </summary>
            <param name="s">需要加密的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SHA.SHA384(System.String)">
            <summary>
             SHA384	加密。
            </summary>
            <param name="s">需要加密的字符串。</param>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.Security.SHA.SHA512(System.String)">
            <summary>
             SHA512	加密。
            </summary>
            <param name="s">需要加密的字符串。</param>
            <returns></returns>
        </member>
        <member name="T:Robin.EntLib.Common.Security.Symmetric">
             <summary>
             对称加密算法。
             </summary>
             <example>
              <code>
                  SymmetricType type = SymmetricType.DES;
                  string s="abcd";;
                  byte[] iv, key;
                  Symmetric.GenerateKey(type , out iv, out key);
            
                  string enc = Symmetric.EncryptStringSalt(type , iv, key, s);
            
                  string dec = Symmetric.DecryptStringSalt(type , iv, key, enc);
             </code>
             </example>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.GenerateKey(Robin.EntLib.Common.Security.SymmetricType,System.Byte[]@,System.Byte[]@)">
            <summary>
            生成随机加密向量和密钥
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.Encrypt(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            加密数据
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.Decrypt(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            解密数据
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.EncryptString(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.String)">
            <summary>
            加密字符串
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.DecryptString(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.String)">
            <summary>
            解密字符串
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.EncryptSalt(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            加密字符串
            </summary>
            <remarks>
            加入随机干扰数据，使得同一数据每次加密结果均不相同。
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.DecryptSalt(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            解密数据
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.EncryptStringSalt(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.String)">
            <summary>
            加密字符串
            </summary>
            <remarks>
            加入随机干扰数据，使得同一字符串每次加密结果均不相同。
            </remarks>
        </member>
        <member name="M:Robin.EntLib.Common.Security.Symmetric.DecryptStringSalt(Robin.EntLib.Common.Security.SymmetricType,System.Byte[],System.Byte[],System.String)">
            <summary>
            解密字符串
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.Security.SymmetricType">
            <summary>
            加密算法类型
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Security.SymmetricType.Rijndael">
            <summary>
            Rijndael 对称加密算法。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Security.SymmetricType.DES">
            <summary>
            DES 对称加密算法。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Security.SymmetricType.RC2">
            <summary>
            RC2 对称加密算法。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.Security.SymmetricType.TripleDES">
            <summary>
            TripleDES 对称加密算法。
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.SystemInfo.CpuInfo">
            <summary>
            Cpu信息
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwOemId">
            <summary> 
            OEM ID 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwPageSize">
            <summary> 
            指定页面的大小和页面保护和委托的颗粒。 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.lpMinimumApplicationAddress">
            <summary>
            指向应用程序和动态链接库(DLL)可以访问的最低内存地址。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.lpMaximumApplicationAddress">
            <summary>
            指向应用程序和动态链接库(DLL)可以访问的最高内存地址。 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwActiveProcessorMask">
            <summary>
            指定一个用来代表这个系统中装配了的中央处理器的掩码。二进制0位是处理器0；31位是处理器31。 
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwNumberOfProcessors">
            <summary> 
            CPU个数 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwProcessorType">
            <summary> 
            指定系统中中央处理器的类型。  
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwAllocationGranularity">
            <summary>
            指定已经被分配的虚拟内存空间的粒度。例如，如果使用VirtualAlloc函数请求分配1byte内存空间，
            那么将会保留由dwAllocationGranularity指定大小byte的地址空间。在过去，这个值被定为64K并固化在硬件中，
            但是其它的硬件体系结构可能需要另外的值。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwProcessorLevel">
            <summary> 
            CPU等级 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.CpuInfo.dwProcessorRevision">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX">
            LayoutKind.Automatic：为了提高效率允许运行态对类型成员重新排序 
            注意：永远不要使用这个选项来调用不受管辖的动态链接库函数。 
            LayoutKind.Explicit：对每个域按照FieldOffset属性对类型成员排序 
            LayoutKind.Sequential：对出现在受管辖类型定义地方的不受管辖内存中的类型成员进行排序。 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.dwLength">
            <summary>
            操作系统位数。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.dwMemoryLoad">
            <summary>
            已经使用的内存 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullTotalPhys">
            <summary>
            总物理内存大小 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullAvailPhys">
            <summary>
            可用物理内存大小 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullTotalPageFile">
            <summary>
            交换文件总大小 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullAvailPageFile">
            <summary>
            可用交换文件大小 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullTotalVirtual">
            <summary>
            总虚拟内存大小 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullAvailVirtual">
            <summary>
            可用虚拟内存大小 。
            </summary>
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.ullAvailExtendedVirtual">
            <summary>
            可用扩展虚拟内存大小 。
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.MEMORYSTATUSEX.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Robin.EntLib.Common.SystemInfo.SystemInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetCpuId">
            <summary> 
            查询CPU编号 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetMainHardDiskId">
            <summary> 
            查询硬盘编号 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetWinDirectory">
            <summary> 
            获取Windows目录 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetSysDirectory">
            <summary> 
            获取系统目录 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetCpuInfo">
            <summary> 
            获取CPU信息 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetMemoryInfo">
            <summary> 
            获取系统内存信息 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetSystemTimeInfo">
            <summary> 
            获取系统时间信息 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetMAC">
            <summary> 
            获得MAC 
            </summary> 
            <returns></returns> 
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetSerialNumber">
            <summary>
            获取操作系统序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetCpuID">
            <summary>
            查询CPU编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetMainBoardId">
            <summary>
            主板编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetNetworkAdapterId">
            <summary>
            网卡编号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetGroupName">
            <summary>
            系统用户。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetDriverInfo">
            <summary>
            获取本地驱动器信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Robin.EntLib.Common.SystemInfo.SystemInfo.GetOperationSystemInName">
            <summary> 
            获取系统名称 
            </summary> 
            <returns></returns> 
        </member>
        <member name="T:Robin.EntLib.Common.SystemInfo.SystemTimeInfo">
            <summary> 
            定义系统时间的信息结构 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wYear">
            <summary> 
            年 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wMonth">
            <summary> 
            月 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wDayOfWeek">
            <summary> 
            星期 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wDay">
            <summary> 
            天 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wHour">
            <summary> 
            小时 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wMinute">
            <summary> 
            分钟 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wSecond">
            <summary> 
            秒 
            </summary> 
        </member>
        <member name="F:Robin.EntLib.Common.SystemInfo.SystemTimeInfo.wMilliseconds">
            <summary> 
            毫秒 
            </summary> 
        </member>
    </members>
</doc>
